
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BOOL CHAR DO ELSE EQUAL_TO FLOAT FOR FUNCTION ID IF INT MAIN NOT_EQUAL_TO PRINT PROGRAM READ RETURN STRING THEN TO VAL_CHAR VAL_FLOAT VAL_INT VAL_STRING VARS VOID WHILE WRITE\n    programa : PROGRAM np_program_start ID np_start_dirfunc ';' var_opcional func_programa_loop main   \n    \n    np_program_start : epsilon\n    \n    np_start_dirfunc : epsilon\n    \n    main : MAIN np_prep_main '(' ')' '{' loop_estatuto '}' np_fin_total\n    \n    np_prep_main : epsilon\n    \n    np_fin_total : epsilon\n    \n    var_opcional : var_declaracion\n                 | epsilon\n    \n    variable : ID np_single_var_process\n             | ID '[' np_push_operator_stack hyper_exp ']' np_pop_operator_stack np_array_var_process\n\n    \n    var_declaracion : VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion\n    \n    np_var_prep : epsilon\n    \n    loop_var_declaracion : var_declaracion_mismo_tipo loop_var_declaracion\n                         | epsilon\n    \n    var_declaracion_mismo_tipo :  tipo np_set_curr_var_type ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo ';'\n    \n    array_opcional : '[' VAL_INT np_push_const_int ']'\n                   | epsilon\n    \n    loop_var_decl_mismo_tipo : ',' ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo\n                  | epsilon\n    \n    np_set_curr_var_type : epsilon\n    \n    np_set_curr_var_name : epsilon\n    \n    np_add_var_to_varstable : epsilon\n    \n    func_programa_loop : func_definicion func_programa_loop\n                       | epsilon\n    \n    func_definicion : FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir '(' np_prep_func_params func_parametro ')' ';' var_opcional np_save_curr_func_quad '{' loop_estatuto '}' np_kill_func\n    \n    func_tipo_retorno : tipo\n                      | VOID\n    \n    np_func_tipo_retorno : epsilon\n    \n    np_func_id : epsilon\n    \n    np_add_to_func_dir : epsilon\n    \n    np_save_curr_func_quad : epsilon\n    \n    np_kill_func : epsilon\n    \n    np_prep_func_params : epsilon\n    \n    func_parametro : parametro\n                   | epsilon\n    \n    parametro : tipo ID np_add_param loop_parametro\n    \n    loop_parametro : ',' tipo ID np_add_param loop_parametro\n                   | epsilon\n    \n    np_add_param : epsilon\n    \n    tipo : INT\n         | FLOAT\n         | CHAR\n         | BOOL\n    \n    estatuto : asignacion \n             | func_llamada ';'\n             | read\n             | write\n             | decision\n             | repeticion\n             | func_return \n    \n    asignacion : variable '=' hyper_exp ';'\n    \n    func_llamada : ID np_fc_1 '(' np_push_operator_stack argumento_loop ')' np_pop_operator_stack\n    \n    np_fc_1 : epsilon\n    \n    argumento_loop : hyper_exp np_fc_2 argumento_loop_1\n                   | epsilon\n    \n    argumento_loop_1 : ',' hyper_exp np_fc_2 argumento_loop_1\n                     | epsilon\n    \n    hyper_exp_loop : hyper_exp np_add_to_input_counter hyper_exp_loop_1\n    \n    hyper_exp_loop_1 : ',' hyper_exp np_add_to_input_counter hyper_exp_loop_1\n                     | epsilon\n    \n    np_fc_2 : epsilon\n    \n    func_return : RETURN '(' hyper_exp ')' ';'\n    \n    read : READ '(' variable_loop ')' ';'\n    \n    variable_loop : variable np_add_to_input_counter variable_loop_1\n    \n    variable_loop_1 : ',' variable np_add_to_input_counter variable_loop_1\n                    | epsilon\n    \n    np_add_to_input_counter : epsilon\n    \n    write : WRITE '(' hyper_exp_loop ')' ';'\n    \n    decision : IF '(' hyper_exp ')' np_decision_1 THEN '{' loop_estatuto '}'  decision_else\n    \n    decision_else : ELSE np_decision_2 '{' loop_estatuto '}' \n                  | epsilon\n    \n    np_decision_1 : epsilon\n    \n    np_decision_2 : epsilon\n    \n    loop_estatuto : estatuto loop_estatuto\n                  | epsilon\n    \n    repeticion : condicional\n               | no_condicional\n    \n    condicional : WHILE np_cond_1 '(' hyper_exp ')' np_cond_2 DO '{' loop_estatuto '}' np_cond_3\n    \n    np_cond_1 : epsilon\n    \n    np_cond_2 : epsilon\n    \n    np_cond_3 : epsilon\n    \n    no_condicional : FOR variable '=' hyper_exp np_for_1 TO hyper_exp np_for_2 DO np_for_3 '{' loop_estatuto '}' \n    \n    np_for_1 : epsilon\n    \n    np_for_2 : epsilon\n    \n    np_for_3 : epsilon\n    \n    hyper_exp : super_exp hyper_exp_1\n    \n    hyper_exp_1 : '&' np_push_operator_stack super_exp\n                | '|' np_push_operator_stack super_exp\n                | epsilon\n    \n    super_exp : exp super_exp_1\n    \n    super_exp_1 : '<' np_push_operator_stack exp\n                | '>' np_push_operator_stack exp\n                | EQUAL_TO np_push_operator_stack exp\n                | NOT_EQUAL_TO np_push_operator_stack exp\n                | epsilon\n    \n    exp : term exp_1\n    \n    exp_1 : '+' np_push_operator_stack term\n          | '-' np_push_operator_stack term\n          | epsilon\n    \n    term : factor term_1\n    \n    term_1 : '*' np_push_operator_stack factor \n           | '/' np_push_operator_stack factor\n           | epsilon\n    \n    np_push_operator_stack : epsilon\n    \n    np_pop_operator_stack : epsilon\n    \n    factor : constant\n           | variable\n           | '(' hyper_exp ')'\n           | func_llamada\n    \n    constant : VAL_INT np_push_const_int\n             | VAL_FLOAT np_push_const_float\n             | VAL_CHAR np_push_const_char\n    \n    np_push_const_int : epsilon\n    \n    np_push_const_float : epsilon\n    \n    np_push_const_char : epsilon\n    \n    np_single_var_process : epsilon\n    \n    np_array_var_process : epsilon\n    epsilon : "
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,19,79,102,103,],[0,-1,-118,-4,-6,]),'ID':([2,3,4,22,23,24,25,26,27,28,30,33,34,38,39,49,56,58,60,61,62,63,64,70,71,74,81,82,85,87,88,89,90,98,111,117,118,119,126,127,132,136,138,139,142,143,144,145,148,149,152,153,162,176,177,178,179,180,181,182,183,184,185,191,193,195,197,201,229,237,243,248,254,257,260,266,268,269,276,277,278,281,284,285,],[-118,5,-2,-118,-26,-27,-40,-41,-42,-43,-118,41,-28,43,-20,66,66,-44,-46,-47,-48,-49,-50,-76,-77,94,-45,116,-118,94,116,116,116,134,116,-118,116,-104,116,116,174,-51,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,116,116,116,116,116,116,116,116,116,116,116,-63,94,-68,116,-62,116,116,66,258,66,66,-118,-69,-71,-118,-78,-81,66,66,-82,-70,]),';':([5,6,7,43,47,48,52,54,59,76,77,84,97,99,101,104,105,106,107,108,109,110,112,113,114,115,116,134,135,137,140,141,146,147,150,151,154,156,157,158,159,160,161,164,167,170,173,175,186,190,208,209,210,211,212,213,214,215,216,217,218,219,222,223,234,235,239,240,249,],[-118,8,-3,-118,-118,-21,-118,-17,81,-118,-22,-9,133,-19,-113,-107,136,-118,-118,-118,-118,-106,-109,-118,-118,-118,-118,-118,-16,-86,-89,-90,-95,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,191,195,201,205,-118,-108,-118,-118,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-118,-118,-105,-118,-52,-10,-117,-18,]),'VARS':([8,205,],[12,12,]),'FUNCTION':([8,9,10,11,14,29,35,36,37,42,133,272,279,280,],[-118,16,-7,-8,16,-118,-118,-11,-14,-13,-15,-118,-25,-32,]),'MAIN':([8,9,10,11,13,14,15,21,29,35,36,37,42,133,272,279,280,],[-118,-118,-7,-8,20,-118,-24,-23,-118,-118,-11,-14,-13,-15,-118,-25,-32,]),'{':([10,11,29,35,36,37,42,44,133,205,226,230,244,246,247,262,267,270,271,274,275,],[-7,-8,-118,-118,-11,-14,-13,49,-15,-118,243,-118,254,257,-31,-118,-118,278,-85,281,-73,]),'INT':([12,16,17,18,29,35,75,95,96,133,232,],[-118,25,25,-12,25,25,-118,25,-33,-15,25,]),'FLOAT':([12,16,17,18,29,35,75,95,96,133,232,],[-118,26,26,-12,26,26,-118,26,-33,-15,26,]),'CHAR':([12,16,17,18,29,35,75,95,96,133,232,],[-118,27,27,-12,27,27,-118,27,-33,-15,27,]),'BOOL':([12,16,17,18,29,35,75,95,96,133,232,],[-118,28,28,-12,28,28,-118,28,-33,-15,28,]),'VOID':([16,],[24,]),'(':([20,31,32,41,45,46,50,51,66,67,68,69,72,73,82,83,85,86,88,89,90,91,92,111,116,117,118,119,126,127,138,139,142,143,144,145,148,149,152,153,161,162,176,177,178,179,180,181,182,183,184,185,197,229,237,],[-118,40,-5,-118,-118,-29,75,-30,-118,87,88,89,90,-118,111,117,-118,-53,111,111,111,126,-79,111,-118,-118,111,-104,111,111,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,-53,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),')':([40,75,84,94,95,96,101,104,106,107,108,109,110,112,113,114,115,116,117,119,120,121,122,123,124,125,128,129,130,131,137,140,141,146,147,150,151,154,155,156,157,158,159,160,161,162,165,166,168,171,174,186,187,188,189,190,192,194,196,198,206,207,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,231,233,235,236,238,239,240,241,242,250,251,252,258,259,264,265,273,],[44,-118,-9,-118,-118,-33,-113,-107,-118,-118,-118,-118,-106,-109,-118,-118,-118,-118,-118,-104,164,-118,167,-118,169,170,-116,173,-34,-35,-86,-89,-90,-95,-96,-99,-100,-103,186,-110,-111,-114,-112,-115,-116,-118,-118,-67,-118,202,-118,-108,219,-118,-55,-118,-64,-66,-58,-60,-118,-39,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-118,-118,-61,-118,-105,-118,-118,-36,-38,-52,-54,-57,-10,-117,-118,-118,-118,-65,-59,-118,-118,-118,-56,-37,]),'[':([43,47,48,66,94,116,134,175,],[-118,53,-21,85,85,85,-118,53,]),',':([43,47,48,52,54,76,77,84,94,101,104,106,107,108,109,110,112,113,114,115,116,121,123,128,134,135,137,140,141,146,147,150,151,154,156,157,158,159,160,161,165,166,168,174,175,186,188,190,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,234,235,239,240,241,242,250,258,259,264,],[-118,-118,-21,-118,-17,98,-22,-9,-118,-113,-107,-118,-118,-118,-118,-106,-109,-118,-118,-118,-118,-118,-118,-116,-118,-16,-86,-89,-90,-95,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,193,-67,197,-118,-118,-108,-118,-118,232,-39,-118,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-118,237,-61,-118,-105,-118,-118,98,-52,-10,-117,193,197,-118,-118,237,232,]),'}':([49,55,56,57,58,60,61,62,63,64,70,71,80,81,136,191,195,201,243,253,254,257,260,261,263,266,268,269,276,277,278,281,282,283,284,285,],[-118,79,-118,-75,-44,-46,-47,-48,-49,-50,-76,-77,-74,-45,-51,-63,-68,-62,-118,260,-118,-118,-118,269,272,-69,-71,-118,-78,-81,-118,-118,284,285,-82,-70,]),'READ':([49,56,58,60,61,62,63,64,70,71,81,136,191,195,201,243,254,257,260,266,268,269,276,277,278,281,284,285,],[67,67,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,67,67,67,-118,-69,-71,-118,-78,-81,67,67,-82,-70,]),'WRITE':([49,56,58,60,61,62,63,64,70,71,81,136,191,195,201,243,254,257,260,266,268,269,276,277,278,281,284,285,],[68,68,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,68,68,68,-118,-69,-71,-118,-78,-81,68,68,-82,-70,]),'IF':([49,56,58,60,61,62,63,64,70,71,81,136,191,195,201,243,254,257,260,266,268,269,276,277,278,281,284,285,],[69,69,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,69,69,69,-118,-69,-71,-118,-78,-81,69,69,-82,-70,]),'RETURN':([49,56,58,60,61,62,63,64,70,71,81,136,191,195,201,243,254,257,260,266,268,269,276,277,278,281,284,285,],[72,72,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,72,72,72,-118,-69,-71,-118,-78,-81,72,72,-82,-70,]),'WHILE':([49,56,58,60,61,62,63,64,70,71,81,136,191,195,201,243,254,257,260,266,268,269,276,277,278,281,284,285,],[73,73,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,73,73,73,-118,-69,-71,-118,-78,-81,73,73,-82,-70,]),'FOR':([49,56,58,60,61,62,63,64,70,71,81,136,191,195,201,243,254,257,260,266,268,269,276,277,278,281,284,285,],[74,74,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,74,74,74,-118,-69,-71,-118,-78,-81,74,74,-82,-70,]),'VAL_INT':([53,82,85,88,89,90,111,117,118,119,126,127,138,139,142,143,144,145,148,149,152,153,162,176,177,178,179,180,181,182,183,184,185,197,229,237,],[78,113,-118,113,113,113,113,-118,113,-104,113,113,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'=':([65,66,84,86,93,94,128,190,222,223,239,240,],[82,-118,-9,-116,127,-118,-116,-118,-118,-105,-10,-117,]),']':([78,84,100,101,104,106,107,108,109,110,112,113,114,115,116,137,140,141,146,147,150,151,154,156,157,158,159,160,161,163,186,190,209,210,211,212,213,214,215,216,217,218,219,222,223,235,239,240,],[-118,-9,135,-113,-107,-118,-118,-118,-118,-106,-109,-118,-118,-118,-118,-86,-89,-90,-95,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,190,-108,-118,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-118,-118,-105,-52,-10,-117,]),'VAL_FLOAT':([82,85,88,89,90,111,117,118,119,126,127,138,139,142,143,144,145,148,149,152,153,162,176,177,178,179,180,181,182,183,184,185,197,229,237,],[114,-118,114,114,114,114,-118,114,-104,114,114,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'VAL_CHAR':([82,85,88,89,90,111,117,118,119,126,127,138,139,142,143,144,145,148,149,152,153,162,176,177,178,179,180,181,182,183,184,185,197,229,237,],[115,-118,115,115,115,115,-118,115,-104,115,115,-118,-118,-118,-118,-118,-118,-118,-118,-118,-118,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'*':([84,101,104,109,110,112,113,114,115,116,156,157,158,159,160,161,186,190,219,222,223,235,239,240,],[-9,-113,-107,152,-106,-109,-118,-118,-118,-118,-110,-111,-114,-112,-115,-116,-108,-118,-118,-118,-105,-52,-10,-117,]),'/':([84,101,104,109,110,112,113,114,115,116,156,157,158,159,160,161,186,190,219,222,223,235,239,240,],[-9,-113,-107,153,-106,-109,-118,-118,-118,-118,-110,-111,-114,-112,-115,-116,-108,-118,-118,-118,-105,-52,-10,-117,]),'+':([84,101,104,108,109,110,112,113,114,115,116,151,154,156,157,158,159,160,161,186,190,217,218,219,222,223,235,239,240,],[-9,-113,-107,148,-118,-106,-109,-118,-118,-118,-118,-100,-103,-110,-111,-114,-112,-115,-116,-108,-118,-101,-102,-118,-118,-105,-52,-10,-117,]),'-':([84,101,104,108,109,110,112,113,114,115,116,151,154,156,157,158,159,160,161,186,190,217,218,219,222,223,235,239,240,],[-9,-113,-107,149,-118,-106,-109,-118,-118,-118,-118,-100,-103,-110,-111,-114,-112,-115,-116,-108,-118,-101,-102,-118,-118,-105,-52,-10,-117,]),'<':([84,101,104,107,108,109,110,112,113,114,115,116,147,150,151,154,156,157,158,159,160,161,186,190,215,216,217,218,219,222,223,235,239,240,],[-9,-113,-107,142,-118,-118,-106,-109,-118,-118,-118,-118,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,-108,-118,-97,-98,-101,-102,-118,-118,-105,-52,-10,-117,]),'>':([84,101,104,107,108,109,110,112,113,114,115,116,147,150,151,154,156,157,158,159,160,161,186,190,215,216,217,218,219,222,223,235,239,240,],[-9,-113,-107,143,-118,-118,-106,-109,-118,-118,-118,-118,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,-108,-118,-97,-98,-101,-102,-118,-118,-105,-52,-10,-117,]),'EQUAL_TO':([84,101,104,107,108,109,110,112,113,114,115,116,147,150,151,154,156,157,158,159,160,161,186,190,215,216,217,218,219,222,223,235,239,240,],[-9,-113,-107,144,-118,-118,-106,-109,-118,-118,-118,-118,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,-108,-118,-97,-98,-101,-102,-118,-118,-105,-52,-10,-117,]),'NOT_EQUAL_TO':([84,101,104,107,108,109,110,112,113,114,115,116,147,150,151,154,156,157,158,159,160,161,186,190,215,216,217,218,219,222,223,235,239,240,],[-9,-113,-107,145,-118,-118,-106,-109,-118,-118,-118,-118,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,-108,-118,-97,-98,-101,-102,-118,-118,-105,-52,-10,-117,]),'&':([84,101,104,106,107,108,109,110,112,113,114,115,116,141,146,147,150,151,154,156,157,158,159,160,161,186,190,211,212,213,214,215,216,217,218,219,222,223,235,239,240,],[-9,-113,-107,138,-118,-118,-118,-106,-109,-118,-118,-118,-118,-90,-95,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,-108,-118,-91,-92,-93,-94,-97,-98,-101,-102,-118,-118,-105,-52,-10,-117,]),'|':([84,101,104,106,107,108,109,110,112,113,114,115,116,141,146,147,150,151,154,156,157,158,159,160,161,186,190,211,212,213,214,215,216,217,218,219,222,223,235,239,240,],[-9,-113,-107,139,-118,-118,-118,-106,-109,-118,-118,-118,-118,-90,-95,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,-108,-118,-91,-92,-93,-94,-97,-98,-101,-102,-118,-118,-105,-52,-10,-117,]),'TO':([84,101,104,106,107,108,109,110,112,113,114,115,116,137,140,141,146,147,150,151,154,156,157,158,159,160,161,172,186,190,203,204,209,210,211,212,213,214,215,216,217,218,219,222,223,235,239,240,],[-9,-113,-107,-118,-118,-118,-118,-106,-109,-118,-118,-118,-118,-86,-89,-90,-95,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,-118,-108,-118,229,-83,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-118,-118,-105,-52,-10,-117,]),'DO':([84,101,104,106,107,108,109,110,112,113,114,115,116,137,140,141,146,147,150,151,154,156,157,158,159,160,161,186,190,202,209,210,211,212,213,214,215,216,217,218,219,222,223,227,228,235,239,240,245,255,256,],[-9,-113,-107,-118,-118,-118,-118,-106,-109,-118,-118,-118,-118,-86,-89,-90,-95,-96,-99,-100,-103,-110,-111,-114,-112,-115,-116,-108,-118,-118,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-118,-118,-105,244,-80,-52,-10,-117,-118,262,-84,]),'THEN':([169,199,200,],[-118,226,-72,]),'ELSE':([260,],[267,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'np_program_start':([2,],[3,]),'epsilon':([2,5,8,9,12,14,20,22,29,30,35,41,43,45,47,49,52,56,66,73,75,76,78,79,85,94,95,106,107,108,109,113,114,115,116,117,121,123,134,138,139,142,143,144,145,148,149,152,153,162,165,168,169,172,174,175,188,190,202,205,206,208,219,220,222,224,225,230,234,241,242,243,245,250,254,257,258,259,260,262,264,267,269,272,278,281,],[4,7,11,15,18,15,32,34,37,39,37,46,48,51,54,57,77,57,86,92,96,99,101,103,119,128,131,140,146,150,154,101,158,160,161,119,166,166,48,119,119,119,119,119,119,119,119,119,119,189,194,198,200,204,207,54,221,223,228,11,233,77,223,238,240,166,166,247,99,194,198,57,256,221,57,57,207,238,268,271,233,275,277,280,57,57,]),'np_start_dirfunc':([5,],[6,]),'var_opcional':([8,205,],[9,230,]),'var_declaracion':([8,205,],[10,10,]),'func_programa_loop':([9,14,],[13,21,]),'func_definicion':([9,14,],[14,14,]),'np_var_prep':([12,],[17,]),'main':([13,],[19,]),'func_tipo_retorno':([16,],[22,]),'tipo':([16,17,29,35,95,232,],[23,30,30,30,132,248,]),'var_declaracion_mismo_tipo':([17,29,35,],[29,35,35,]),'np_prep_main':([20,],[31,]),'np_func_tipo_retorno':([22,],[33,]),'loop_var_declaracion':([29,35,],[36,42,]),'np_set_curr_var_type':([30,],[38,]),'np_func_id':([41,],[45,]),'np_set_curr_var_name':([43,134,],[47,175,]),'np_add_to_func_dir':([45,],[50,]),'array_opcional':([47,175,],[52,208,]),'loop_estatuto':([49,56,243,254,257,278,281,],[55,80,253,261,263,282,283,]),'estatuto':([49,56,243,254,257,278,281,],[56,56,56,56,56,56,56,]),'asignacion':([49,56,243,254,257,278,281,],[58,58,58,58,58,58,58,]),'func_llamada':([49,56,82,88,89,90,111,118,126,127,162,176,177,178,179,180,181,182,183,184,185,197,229,237,243,254,257,278,281,],[59,59,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,59,59,59,59,59,]),'read':([49,56,243,254,257,278,281,],[60,60,60,60,60,60,60,]),'write':([49,56,243,254,257,278,281,],[61,61,61,61,61,61,61,]),'decision':([49,56,243,254,257,278,281,],[62,62,62,62,62,62,62,]),'repeticion':([49,56,243,254,257,278,281,],[63,63,63,63,63,63,63,]),'func_return':([49,56,243,254,257,278,281,],[64,64,64,64,64,64,64,]),'variable':([49,56,74,82,87,88,89,90,111,118,126,127,162,176,177,178,179,180,181,182,183,184,185,193,197,229,237,243,254,257,278,281,],[65,65,93,104,121,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,224,104,104,104,65,65,65,65,65,]),'condicional':([49,56,243,254,257,278,281,],[70,70,70,70,70,70,70,]),'no_condicional':([49,56,243,254,257,278,281,],[71,71,71,71,71,71,71,]),'np_add_var_to_varstable':([52,208,],[76,234,]),'np_fc_1':([66,116,],[83,83,]),'np_single_var_process':([66,94,116,],[84,84,84,]),'np_cond_1':([73,],[91,]),'np_prep_func_params':([75,],[95,]),'loop_var_decl_mismo_tipo':([76,234,],[97,249,]),'np_push_const_int':([78,113,],[100,156,]),'np_fin_total':([79,],[102,]),'hyper_exp':([82,88,89,90,111,118,126,127,162,197,229,237,],[105,123,124,125,155,163,171,172,188,225,245,250,]),'super_exp':([82,88,89,90,111,118,126,127,162,176,177,197,229,237,],[106,106,106,106,106,106,106,106,106,209,210,106,106,106,]),'exp':([82,88,89,90,111,118,126,127,162,176,177,178,179,180,181,197,229,237,],[107,107,107,107,107,107,107,107,107,107,107,211,212,213,214,107,107,107,]),'term':([82,88,89,90,111,118,126,127,162,176,177,178,179,180,181,182,183,197,229,237,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,215,216,108,108,108,]),'factor':([82,88,89,90,111,118,126,127,162,176,177,178,179,180,181,182,183,184,185,197,229,237,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,217,218,109,109,109,]),'constant':([82,88,89,90,111,118,126,127,162,176,177,178,179,180,181,182,183,184,185,197,229,237,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'np_push_operator_stack':([85,117,138,139,142,143,144,145,148,149,152,153,],[118,162,176,177,178,179,180,181,182,183,184,185,]),'variable_loop':([87,],[120,]),'hyper_exp_loop':([88,],[122,]),'func_parametro':([95,],[129,]),'parametro':([95,],[130,]),'hyper_exp_1':([106,],[137,]),'super_exp_1':([107,],[141,]),'exp_1':([108,],[147,]),'term_1':([109,],[151,]),'np_push_const_float':([114,],[157,]),'np_push_const_char':([115,],[159,]),'np_add_to_input_counter':([121,123,224,225,],[165,168,241,242,]),'argumento_loop':([162,],[187,]),'variable_loop_1':([165,241,],[192,251,]),'hyper_exp_loop_1':([168,242,],[196,252,]),'np_decision_1':([169,],[199,]),'np_for_1':([172,],[203,]),'np_add_param':([174,258,],[206,264,]),'np_fc_2':([188,250,],[220,259,]),'np_pop_operator_stack':([190,219,],[222,235,]),'np_cond_2':([202,],[227,]),'loop_parametro':([206,264,],[231,273,]),'argumento_loop_1':([220,259,],[236,265,]),'np_array_var_process':([222,],[239,]),'np_save_curr_func_quad':([230,],[246,]),'np_for_2':([245,],[255,]),'decision_else':([260,],[266,]),'np_for_3':([262,],[270,]),'np_decision_2':([267,],[274,]),'np_cond_3':([269,],[276,]),'np_kill_func':([272,],[279,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main','programa',8,'p_programa','a_parser.py',45),
  ('np_program_start -> epsilon','np_program_start',1,'p_np_program_start','a_parser.py',50),
  ('np_start_dirfunc -> epsilon','np_start_dirfunc',1,'p_np_start_dirfunc','a_parser.py',70),
  ('main -> MAIN np_prep_main ( ) { loop_estatuto } np_fin_total','main',8,'p_main','a_parser.py',85),
  ('np_prep_main -> epsilon','np_prep_main',1,'p_np_prep_main','a_parser.py',89),
  ('np_fin_total -> epsilon','np_fin_total',1,'p_np_fin_total','a_parser.py',103),
  ('var_opcional -> var_declaracion','var_opcional',1,'p_var_opcional','a_parser.py',138),
  ('var_opcional -> epsilon','var_opcional',1,'p_var_opcional','a_parser.py',139),
  ('variable -> ID np_single_var_process','variable',2,'p_variable','a_parser.py',148),
  ('variable -> ID [ np_push_operator_stack hyper_exp ] np_pop_operator_stack np_array_var_process','variable',7,'p_variable','a_parser.py',149),
  ('var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion','var_declaracion',4,'p_var_declaracion','a_parser.py',159),
  ('np_var_prep -> epsilon','np_var_prep',1,'p_np_var_prep','a_parser.py',165),
  ('loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion','loop_var_declaracion',2,'p_loop_var_declaracion','a_parser.py',179),
  ('loop_var_declaracion -> epsilon','loop_var_declaracion',1,'p_loop_var_declaracion','a_parser.py',180),
  ('var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo ;','var_declaracion_mismo_tipo',8,'p_var_declaracion_mismo_tipo','a_parser.py',186),
  ('array_opcional -> [ VAL_INT np_push_const_int ]','array_opcional',4,'p_array_opcional','a_parser.py',191),
  ('array_opcional -> epsilon','array_opcional',1,'p_array_opcional','a_parser.py',192),
  ('loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo','loop_var_decl_mismo_tipo',6,'p_loop_var_decl_mismo_tipo','a_parser.py',203),
  ('loop_var_decl_mismo_tipo -> epsilon','loop_var_decl_mismo_tipo',1,'p_loop_var_decl_mismo_tipo','a_parser.py',204),
  ('np_set_curr_var_type -> epsilon','np_set_curr_var_type',1,'p_np_set_curr_var_type','a_parser.py',210),
  ('np_set_curr_var_name -> epsilon','np_set_curr_var_name',1,'p_np_set_curr_var_name','a_parser.py',219),
  ('np_add_var_to_varstable -> epsilon','np_add_var_to_varstable',1,'p_np_add_var_to_varstable','a_parser.py',227),
  ('func_programa_loop -> func_definicion func_programa_loop','func_programa_loop',2,'p_func_programa_loop','a_parser.py',243),
  ('func_programa_loop -> epsilon','func_programa_loop',1,'p_func_programa_loop','a_parser.py',244),
  ('func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional np_save_curr_func_quad { loop_estatuto } np_kill_func','func_definicion',17,'p_func_definicion','a_parser.py',250),
  ('func_tipo_retorno -> tipo','func_tipo_retorno',1,'p_func_tipo_retorno','a_parser.py',258),
  ('func_tipo_retorno -> VOID','func_tipo_retorno',1,'p_func_tipo_retorno','a_parser.py',259),
  ('np_func_tipo_retorno -> epsilon','np_func_tipo_retorno',1,'p_np_func_tipo_retorno','a_parser.py',265),
  ('np_func_id -> epsilon','np_func_id',1,'p_np_func_id','a_parser.py',273),
  ('np_add_to_func_dir -> epsilon','np_add_to_func_dir',1,'p_np_add_to_func_dir','a_parser.py',281),
  ('np_save_curr_func_quad -> epsilon','np_save_curr_func_quad',1,'p_np_save_curr_func_quad','a_parser.py',300),
  ('np_kill_func -> epsilon','np_kill_func',1,'p_np_kill_func','a_parser.py',308),
  ('np_prep_func_params -> epsilon','np_prep_func_params',1,'p_np_prep_func_params','a_parser.py',314),
  ('func_parametro -> parametro','func_parametro',1,'p_func_parametro','a_parser.py',324),
  ('func_parametro -> epsilon','func_parametro',1,'p_func_parametro','a_parser.py',325),
  ('parametro -> tipo ID np_add_param loop_parametro','parametro',4,'p_parametro','a_parser.py',334),
  ('loop_parametro -> , tipo ID np_add_param loop_parametro','loop_parametro',5,'p_loop_parametro','a_parser.py',341),
  ('loop_parametro -> epsilon','loop_parametro',1,'p_loop_parametro','a_parser.py',342),
  ('np_add_param -> epsilon','np_add_param',1,'p_np_add_param','a_parser.py',347),
  ('tipo -> INT','tipo',1,'p_tipo','a_parser.py',356),
  ('tipo -> FLOAT','tipo',1,'p_tipo','a_parser.py',357),
  ('tipo -> CHAR','tipo',1,'p_tipo','a_parser.py',358),
  ('tipo -> BOOL','tipo',1,'p_tipo','a_parser.py',359),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','a_parser.py',395),
  ('estatuto -> func_llamada ;','estatuto',2,'p_estatuto','a_parser.py',396),
  ('estatuto -> read','estatuto',1,'p_estatuto','a_parser.py',397),
  ('estatuto -> write','estatuto',1,'p_estatuto','a_parser.py',398),
  ('estatuto -> decision','estatuto',1,'p_estatuto','a_parser.py',399),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','a_parser.py',400),
  ('estatuto -> func_return','estatuto',1,'p_estatuto','a_parser.py',401),
  ('asignacion -> variable = hyper_exp ;','asignacion',4,'p_asignacion','a_parser.py',409),
  ('func_llamada -> ID np_fc_1 ( np_push_operator_stack argumento_loop ) np_pop_operator_stack','func_llamada',7,'p_func_llamada','a_parser.py',423),
  ('np_fc_1 -> epsilon','np_fc_1',1,'p_np_fc_1','a_parser.py',450),
  ('argumento_loop -> hyper_exp np_fc_2 argumento_loop_1','argumento_loop',3,'p_argumento_loop','a_parser.py',469),
  ('argumento_loop -> epsilon','argumento_loop',1,'p_argumento_loop','a_parser.py',470),
  ('argumento_loop_1 -> , hyper_exp np_fc_2 argumento_loop_1','argumento_loop_1',4,'p_argumento_loop_1','a_parser.py',474),
  ('argumento_loop_1 -> epsilon','argumento_loop_1',1,'p_argumento_loop_1','a_parser.py',475),
  ('hyper_exp_loop -> hyper_exp np_add_to_input_counter hyper_exp_loop_1','hyper_exp_loop',3,'p_hyper_exp_loop','a_parser.py',481),
  ('hyper_exp_loop_1 -> , hyper_exp np_add_to_input_counter hyper_exp_loop_1','hyper_exp_loop_1',4,'p_hyper_exp_loop_1','a_parser.py',487),
  ('hyper_exp_loop_1 -> epsilon','hyper_exp_loop_1',1,'p_hyper_exp_loop_1','a_parser.py',488),
  ('np_fc_2 -> epsilon','np_fc_2',1,'p_np_fc_2','a_parser.py',493),
  ('func_return -> RETURN ( hyper_exp ) ;','func_return',5,'p_func_return','a_parser.py',519),
  ('read -> READ ( variable_loop ) ;','read',5,'p_read','a_parser.py',531),
  ('variable_loop -> variable np_add_to_input_counter variable_loop_1','variable_loop',3,'p_variable_loop','a_parser.py',544),
  ('variable_loop_1 -> , variable np_add_to_input_counter variable_loop_1','variable_loop_1',4,'p_variable_loop_1','a_parser.py',551),
  ('variable_loop_1 -> epsilon','variable_loop_1',1,'p_variable_loop_1','a_parser.py',552),
  ('np_add_to_input_counter -> epsilon','np_add_to_input_counter',1,'p_np_add_to_input_counter','a_parser.py',561),
  ('write -> WRITE ( hyper_exp_loop ) ;','write',5,'p_write','a_parser.py',570),
  ('decision -> IF ( hyper_exp ) np_decision_1 THEN { loop_estatuto } decision_else','decision',10,'p_decision','a_parser.py',583),
  ('decision_else -> ELSE np_decision_2 { loop_estatuto }','decision_else',5,'p_decision_else','a_parser.py',593),
  ('decision_else -> epsilon','decision_else',1,'p_decision_else','a_parser.py',594),
  ('np_decision_1 -> epsilon','np_decision_1',1,'p_np_decision_1','a_parser.py',599),
  ('np_decision_2 -> epsilon','np_decision_2',1,'p_np_decision_2','a_parser.py',612),
  ('loop_estatuto -> estatuto loop_estatuto','loop_estatuto',2,'p_loop_estatuto','a_parser.py',629),
  ('loop_estatuto -> epsilon','loop_estatuto',1,'p_loop_estatuto','a_parser.py',630),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','a_parser.py',640),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','a_parser.py',641),
  ('condicional -> WHILE np_cond_1 ( hyper_exp ) np_cond_2 DO { loop_estatuto } np_cond_3','condicional',11,'p_condicional','a_parser.py',647),
  ('np_cond_1 -> epsilon','np_cond_1',1,'p_np_cond_1','a_parser.py',652),
  ('np_cond_2 -> epsilon','np_cond_2',1,'p_np_cond_2','a_parser.py',660),
  ('np_cond_3 -> epsilon','np_cond_3',1,'p_np_cond_3','a_parser.py',674),
  ('no_condicional -> FOR variable = hyper_exp np_for_1 TO hyper_exp np_for_2 DO np_for_3 { loop_estatuto }','no_condicional',13,'p_no_condicional','a_parser.py',691),
  ('np_for_1 -> epsilon','np_for_1',1,'p_np_for_1','a_parser.py',708),
  ('np_for_2 -> epsilon','np_for_2',1,'p_np_for_2','a_parser.py',723),
  ('np_for_3 -> epsilon','np_for_3',1,'p_np_for_3','a_parser.py',736),
  ('hyper_exp -> super_exp hyper_exp_1','hyper_exp',2,'p_hyper_exp','a_parser.py',758),
  ('hyper_exp_1 -> & np_push_operator_stack super_exp','hyper_exp_1',3,'p_hyper_exp_1','a_parser.py',784),
  ('hyper_exp_1 -> | np_push_operator_stack super_exp','hyper_exp_1',3,'p_hyper_exp_1','a_parser.py',785),
  ('hyper_exp_1 -> epsilon','hyper_exp_1',1,'p_hyper_exp_1','a_parser.py',786),
  ('super_exp -> exp super_exp_1','super_exp',2,'p_super_exp','a_parser.py',792),
  ('super_exp_1 -> < np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',817),
  ('super_exp_1 -> > np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',818),
  ('super_exp_1 -> EQUAL_TO np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',819),
  ('super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',820),
  ('super_exp_1 -> epsilon','super_exp_1',1,'p_super_exp_1','a_parser.py',821),
  ('exp -> term exp_1','exp',2,'p_exp','a_parser.py',827),
  ('exp_1 -> + np_push_operator_stack term','exp_1',3,'p_exp_1','a_parser.py',852),
  ('exp_1 -> - np_push_operator_stack term','exp_1',3,'p_exp_1','a_parser.py',853),
  ('exp_1 -> epsilon','exp_1',1,'p_exp_1','a_parser.py',854),
  ('term -> factor term_1','term',2,'p_term','a_parser.py',860),
  ('term_1 -> * np_push_operator_stack factor','term_1',3,'p_term_1','a_parser.py',884),
  ('term_1 -> / np_push_operator_stack factor','term_1',3,'p_term_1','a_parser.py',885),
  ('term_1 -> epsilon','term_1',1,'p_term_1','a_parser.py',886),
  ('np_push_operator_stack -> epsilon','np_push_operator_stack',1,'p_np_push_operator_stack','a_parser.py',892),
  ('np_pop_operator_stack -> epsilon','np_pop_operator_stack',1,'p_np_pop_operator_stack','a_parser.py',900),
  ('factor -> constant','factor',1,'p_factor','a_parser.py',921),
  ('factor -> variable','factor',1,'p_factor','a_parser.py',922),
  ('factor -> ( hyper_exp )','factor',3,'p_factor','a_parser.py',923),
  ('factor -> func_llamada','factor',1,'p_factor','a_parser.py',924),
  ('constant -> VAL_INT np_push_const_int','constant',2,'p_constant','a_parser.py',935),
  ('constant -> VAL_FLOAT np_push_const_float','constant',2,'p_constant','a_parser.py',936),
  ('constant -> VAL_CHAR np_push_const_char','constant',2,'p_constant','a_parser.py',937),
  ('np_push_const_int -> epsilon','np_push_const_int',1,'p_np_push_const_int','a_parser.py',943),
  ('np_push_const_float -> epsilon','np_push_const_float',1,'p_np_push_const_float','a_parser.py',951),
  ('np_push_const_char -> epsilon','np_push_const_char',1,'p_np_push_const_char','a_parser.py',959),
  ('np_single_var_process -> epsilon','np_single_var_process',1,'p_np_single_var_process','a_parser.py',967),
  ('np_array_var_process -> epsilon','np_array_var_process',1,'p_np_array_var_process','a_parser.py',977),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','a_parser.py',995),
]
