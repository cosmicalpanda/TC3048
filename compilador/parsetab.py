
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BOOL CHAR DO ELSE EQUAL_TO FLOAT FOR FUNCTION ID IF INT MAIN NOT_EQUAL_TO PRINT PROGRAM READ RETURN STRING THEN TO VAL_CHAR VAL_FLOAT VAL_INT VAL_STRING VARS VOID WHILE WRITE\n    programa : PROGRAM np_program_start ID np_start_dirfunc ';' var_opcional func_programa_loop main   \n    \n    np_program_start : epsilon\n    \n    np_start_dirfunc : epsilon\n    \n    main : MAIN '(' ')' '{' loop_estatuto '}' np_fin_total\n    \n    np_fin_total : epsilon\n    \n    var_opcional : var_declaracion\n                 | epsilon\n    \n    variable : ID np_single_var_process\n\n    \n    var_declaracion : VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion\n    \n    np_var_prep : epsilon\n    \n    loop_var_declaracion : var_declaracion_mismo_tipo loop_var_declaracion\n                         | epsilon\n    \n    var_declaracion_mismo_tipo :  tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ';'\n    \n    loop_var_decl_mismo_tipo : ',' ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo\n                  | epsilon\n    \n    np_set_curr_var_type : epsilon\n    \n    np_set_curr_var_name : epsilon\n    \n    np_add_var_to_varstable : epsilon\n    \n    func_programa_loop : func_definicion func_programa_loop\n                       | epsilon\n    \n    func_definicion : FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir '(' np_prep_func_params func_parametro ')' ';' var_opcional '{' loop_estatuto '}' np_kill_func\n    \n    func_tipo_retorno : tipo\n                      | VOID\n    \n    np_func_tipo_retorno : epsilon\n    \n    np_func_id : epsilon\n    \n    np_add_to_func_dir : epsilon\n    \n    np_kill_func : epsilon\n    \n    np_prep_func_params : epsilon\n    \n    func_parametro : parametro\n                   | epsilon\n    \n    parametro : tipo ID loop_parametro\n    \n    loop_parametro : ',' tipo ID loop_parametro\n                   | epsilon\n    \n    tipo : INT\n         | FLOAT\n         | CHAR\n         | BOOL\n    \n    estatuto : asignacion \n             | func_llamada ';'\n             | read\n             | write\n             | decision\n             | repeticion\n             | func_return \n    \n    asignacion : variable '=' hyper_exp ';'\n    \n    func_llamada : ID '(' ')' \n                 | ID '(' hyper_exp_loop ')' \n    \n    hyper_exp_loop : hyper_exp np_add_to_input_counter hyper_exp_loop_1\n    \n    hyper_exp_loop_1 : ',' hyper_exp np_add_to_input_counter hyper_exp_loop_1\n                     | epsilon\n    \n    func_return : RETURN '(' hyper_exp ')' ';'\n    \n    read : READ '(' variable_loop ')' ';'\n    \n    variable_loop : variable np_add_to_input_counter variable_loop_1\n    \n    variable_loop_1 : ',' variable np_add_to_input_counter variable_loop_1\n                    | epsilon\n    \n    np_add_to_input_counter : epsilon\n    \n    write : WRITE '(' hyper_exp_loop ')' ';'\n    \n    decision : IF '(' hyper_exp ')' np_decision_1 THEN '{' loop_estatuto '}'  decision_else\n    \n    decision_else : ELSE np_decision_2 '{' loop_estatuto '}' \n                  | epsilon\n    \n    np_decision_1 : epsilon\n    \n    np_decision_2 : epsilon\n    \n    loop_estatuto : estatuto loop_estatuto\n                  | epsilon\n    \n    repeticion : condicional\n               | no_condicional\n    \n    condicional : WHILE np_cond_1 '(' hyper_exp ')' np_cond_2 DO '{' loop_estatuto '}' np_cond_3\n    \n    np_cond_1 : epsilon\n    \n    np_cond_2 : epsilon\n    \n    np_cond_3 : epsilon\n    \n    no_condicional : FOR variable '=' hyper_exp np_for_1 TO hyper_exp np_for_2 DO np_for_3 '{' loop_estatuto '}' \n    \n    np_for_1 : epsilon\n    \n    np_for_2 : epsilon\n    \n    np_for_3 : epsilon\n    \n    hyper_exp : super_exp hyper_exp_1\n    \n    hyper_exp_1 : '&' np_push_operator_stack super_exp\n                | '|' np_push_operator_stack super_exp\n                | epsilon\n    \n    super_exp : exp super_exp_1\n    \n    super_exp_1 : '<' np_push_operator_stack exp\n                | '>' np_push_operator_stack exp\n                | EQUAL_TO np_push_operator_stack exp\n                | NOT_EQUAL_TO np_push_operator_stack exp\n                | epsilon\n    \n    exp : term exp_1\n    \n    exp_1 : '+' np_push_operator_stack term\n          | '-' np_push_operator_stack term\n          | epsilon\n    \n    term : factor term_1\n    \n    term_1 : '*' np_push_operator_stack factor \n           | '/' np_push_operator_stack factor\n           | epsilon\n    \n    np_push_operator_stack : epsilon\n    \n    factor : constant\n           | variable\n           | '(' hyper_exp ')'\n    \n    constant : VAL_INT np_push_const_int\n             | VAL_FLOAT np_push_const_float\n             | VAL_CHAR np_push_const_char\n    \n    np_push_const_int : epsilon\n    \n    np_push_const_float : epsilon\n    \n    np_push_const_char : epsilon\n    \n    np_single_var_process : epsilon\n    epsilon : "
    
_lr_action_items = {'DO':([84,85,87,95,96,98,100,101,102,103,104,105,124,125,128,131,135,136,139,140,141,142,143,146,147,148,165,179,193,194,195,196,197,198,199,200,201,202,204,205,214,221,222,],[-8,-103,-104,-94,-104,-104,-104,-104,-104,-95,-104,-104,-78,-75,-92,-89,-84,-79,-98,-101,-102,-99,-88,-85,-100,-97,-96,-104,-76,-77,-90,-91,-82,-83,-80,-81,-86,-87,212,-69,-104,227,-73,]),'RETURN':([47,57,58,60,61,63,65,69,70,71,80,157,168,178,185,215,216,219,228,230,233,235,238,239,240,244,245,247,],[52,-42,52,-41,-66,-40,-65,-38,-44,-43,-39,-45,-51,-52,-57,52,52,52,-104,-104,-58,-60,-67,-70,52,52,-71,-59,]),'VARS':([8,189,],[9,9,]),'THEN':([158,186,187,],[-104,208,-61,]),'READ':([47,57,58,60,61,63,65,69,70,71,80,157,168,178,185,215,216,219,228,230,233,235,238,239,240,244,245,247,],[53,-42,53,-41,-66,-40,-65,-38,-44,-43,-39,-45,-51,-52,-57,53,53,53,-104,-104,-58,-60,-67,-70,53,53,-71,-59,]),'VOID':([16,],[26,]),'CHAR':([9,13,14,16,23,34,75,92,93,94,192,],[-104,-10,22,22,22,22,-104,-13,22,-28,22,]),'WHILE':([47,57,58,60,61,63,65,69,70,71,80,157,168,178,185,215,216,219,228,230,233,235,238,239,240,244,245,247,],[54,-42,54,-41,-66,-40,-65,-38,-44,-43,-39,-45,-51,-52,-57,54,54,54,-104,-104,-58,-60,-67,-70,54,54,-71,-59,]),'PROGRAM':([0,],[1,]),'&':([84,85,87,95,96,98,100,101,102,103,104,105,128,131,135,136,139,140,141,142,143,146,147,148,165,195,196,197,198,199,200,201,202,],[-8,-103,-104,-94,123,-104,-104,-104,-104,-95,-104,-104,-92,-89,-84,-79,-98,-101,-102,-99,-88,-85,-100,-97,-96,-90,-91,-82,-83,-80,-81,-86,-87,]),')':([38,75,83,84,85,87,93,94,95,96,98,99,100,101,102,103,104,105,106,107,111,113,115,117,119,121,122,124,125,127,128,131,135,136,139,140,141,142,143,146,147,148,149,150,152,154,161,165,175,177,181,182,190,191,193,194,195,196,197,198,199,200,201,202,203,206,211,213,217,218,220,225,],[42,-104,112,-8,-103,-104,-104,-28,-94,-104,-104,132,-104,-104,-104,-95,-104,-104,-104,151,153,-104,156,158,160,-29,-30,-78,-75,165,-92,-89,-84,-79,-98,-101,-102,-99,-88,-85,-100,-97,-104,-56,179,-104,-104,-96,-53,-55,-50,-48,-31,-33,-76,-77,-90,-91,-82,-83,-80,-81,-86,-87,-104,-104,-104,-104,-104,-54,-49,-32,]),'(':([29,41,45,46,50,51,52,53,54,59,66,68,76,78,79,83,88,89,90,97,108,114,123,126,129,130,133,134,137,138,144,145,162,163,164,166,167,169,170,171,172,173,174,180,207,],[38,-104,-25,-104,-26,75,76,77,-104,83,88,90,97,108,-68,97,97,97,97,97,97,97,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-93,97,97,97,97,97,97,97,97,97,97,97,97,]),'+':([84,85,87,95,98,101,102,103,104,105,128,131,139,140,141,142,147,148,165,195,196,],[-8,-103,-104,-94,-104,-104,-104,-95,144,-104,-92,-89,-98,-101,-102,-99,-100,-97,-96,-90,-91,]),'*':([84,85,87,95,98,101,102,103,105,139,140,141,142,147,148,165,],[-8,-103,-104,-94,129,-104,-104,-95,-104,-98,-101,-102,-99,-100,-97,-96,]),'-':([84,85,87,95,98,101,102,103,104,105,128,131,139,140,141,142,147,148,165,195,196,],[-8,-103,-104,-94,-104,-104,-104,-95,145,-104,-92,-89,-98,-101,-102,-99,-100,-97,-96,-90,-91,]),',':([39,43,44,48,49,84,85,87,91,95,96,98,100,101,102,103,104,105,106,113,118,124,125,128,131,135,136,139,140,141,142,143,146,147,148,149,150,154,159,161,165,193,194,195,196,197,198,199,200,201,202,203,206,211,213,217,],[-104,-17,-104,73,-18,-8,-103,-104,-104,-94,-104,-104,-104,-104,-104,-95,-104,-104,-104,-104,-104,-78,-75,-92,-89,-84,-79,-98,-101,-102,-99,-88,-85,-100,-97,176,-56,180,73,192,-96,-76,-77,-90,-91,-82,-83,-80,-81,-86,-87,-104,-104,176,180,192,]),'/':([84,85,87,95,98,101,102,103,105,139,140,141,142,147,148,165,],[-8,-103,-104,-94,130,-104,-104,-95,-104,-98,-101,-102,-99,-100,-97,-96,]),'TO':([84,85,87,95,96,98,100,101,102,103,104,105,124,125,128,131,135,136,139,140,141,142,143,146,147,148,155,165,183,184,193,194,195,196,197,198,199,200,201,202,],[-8,-103,-104,-94,-104,-104,-104,-104,-104,-95,-104,-104,-78,-75,-92,-89,-84,-79,-98,-101,-102,-99,-88,-85,-100,-97,-104,-96,207,-72,-76,-77,-90,-91,-82,-83,-80,-81,-86,-87,]),';':([5,6,7,39,43,44,48,49,55,72,74,84,85,87,91,95,96,98,100,101,102,103,104,105,112,116,118,124,125,128,131,132,135,136,139,140,141,142,143,146,147,148,151,153,156,159,160,165,188,193,194,195,196,197,198,199,200,201,202,],[-104,8,-3,-104,-17,-104,-104,-18,80,-15,92,-8,-103,-104,-104,-94,-104,-104,-104,-104,-104,-95,-104,-104,-46,157,-104,-78,-75,-92,-89,168,-84,-79,-98,-101,-102,-99,-88,-85,-100,-97,178,-47,185,-104,189,-96,-14,-76,-77,-90,-91,-82,-83,-80,-81,-86,-87,]),'=':([59,67,84,85,86,87,],[-104,89,-8,-103,114,-104,]),'<':([84,85,87,95,98,100,101,102,103,104,105,128,131,139,140,141,142,143,146,147,148,165,195,196,201,202,],[-8,-103,-104,-94,-104,137,-104,-104,-95,-104,-104,-92,-89,-98,-101,-102,-99,-88,-85,-100,-97,-96,-90,-91,-86,-87,]),'$end':([2,30,81,109,110,],[0,-1,-104,-5,-4,]),'FUNCTION':([8,10,11,12,15,23,33,34,35,40,92,229,236,237,],[-104,-6,-7,16,16,-104,-12,-104,-9,-11,-13,-104,-21,-27,]),'EQUAL_TO':([84,85,87,95,98,100,101,102,103,104,105,128,131,139,140,141,142,143,146,147,148,165,195,196,201,202,],[-8,-103,-104,-94,-104,133,-104,-104,-95,-104,-104,-92,-89,-98,-101,-102,-99,-88,-85,-100,-97,-96,-90,-91,-86,-87,]),'FOR':([47,57,58,60,61,63,65,69,70,71,80,157,168,178,185,215,216,219,228,230,233,235,238,239,240,244,245,247,],[62,-42,62,-41,-66,-40,-65,-38,-44,-43,-39,-45,-51,-52,-57,62,62,62,-104,-104,-58,-60,-67,-70,62,62,-71,-59,]),'VAL_CHAR':([76,83,88,89,90,97,108,114,123,126,129,130,133,134,137,138,144,145,162,163,164,166,167,169,170,171,172,173,174,180,207,],[102,102,102,102,102,102,102,102,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-93,102,102,102,102,102,102,102,102,102,102,102,102,]),'ELSE':([228,],[234,]),'WRITE':([47,57,58,60,61,63,65,69,70,71,80,157,168,178,185,215,216,219,228,230,233,235,238,239,240,244,245,247,],[66,-42,66,-41,-66,-40,-65,-38,-44,-43,-39,-45,-51,-52,-57,66,66,66,-104,-104,-58,-60,-67,-70,66,66,-71,-59,]),'>':([84,85,87,95,98,100,101,102,103,104,105,128,131,139,140,141,142,143,146,147,148,165,195,196,201,202,],[-8,-103,-104,-94,-104,138,-104,-104,-95,-104,-104,-92,-89,-98,-101,-102,-99,-88,-85,-100,-97,-96,-90,-91,-86,-87,]),'ID':([1,3,4,19,20,21,22,24,26,27,28,31,32,36,37,47,57,58,60,61,62,63,65,69,70,71,73,76,77,80,83,88,89,90,97,108,114,120,123,126,129,130,133,134,137,138,144,145,157,162,163,164,166,167,168,169,170,171,172,173,174,176,178,180,185,207,210,215,216,219,228,230,233,235,238,239,240,244,245,247,],[-104,5,-2,-104,-34,-35,-36,-37,-23,-22,-104,-16,39,41,-24,59,-42,59,-41,-66,87,-40,-65,-38,-44,-43,91,87,87,-39,87,87,87,87,87,87,87,161,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-45,-93,87,87,87,87,-51,87,87,87,87,87,87,87,-52,87,-57,87,217,59,59,59,-104,-104,-58,-60,-67,-70,59,59,-71,-59,]),'IF':([47,57,58,60,61,63,65,69,70,71,80,157,168,178,185,215,216,219,228,230,233,235,238,239,240,244,245,247,],[68,-42,68,-41,-66,-40,-65,-38,-44,-43,-39,-45,-51,-52,-57,68,68,68,-104,-104,-58,-60,-67,-70,68,68,-71,-59,]),'NOT_EQUAL_TO':([84,85,87,95,98,100,101,102,103,104,105,128,131,139,140,141,142,143,146,147,148,165,195,196,201,202,],[-8,-103,-104,-94,-104,134,-104,-104,-95,-104,-104,-92,-89,-98,-101,-102,-99,-88,-85,-100,-97,-96,-90,-91,-86,-87,]),'INT':([9,13,14,16,23,34,75,92,93,94,192,],[-104,-10,20,20,20,20,-104,-13,20,-28,20,]),'VAL_INT':([76,83,88,89,90,97,108,114,123,126,129,130,133,134,137,138,144,145,162,163,164,166,167,169,170,171,172,173,174,180,207,],[105,105,105,105,105,105,105,105,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-93,105,105,105,105,105,105,105,105,105,105,105,105,]),'FLOAT':([9,13,14,16,23,34,75,92,93,94,192,],[-104,-10,21,21,21,21,-104,-13,21,-28,21,]),'BOOL':([9,13,14,16,23,34,75,92,93,94,192,],[-104,-10,24,24,24,24,-104,-13,24,-28,24,]),'VAL_FLOAT':([76,83,88,89,90,97,108,114,123,126,129,130,133,134,137,138,144,145,162,163,164,166,167,169,170,171,172,173,174,180,207,],[101,101,101,101,101,101,101,101,-104,-104,-104,-104,-104,-104,-104,-104,-104,-104,-93,101,101,101,101,101,101,101,101,101,101,101,101,]),'{':([10,11,23,33,34,35,40,42,92,189,208,209,212,227,231,232,234,241,242,],[-6,-7,-104,-12,-104,-9,-11,47,-13,-104,215,216,219,-104,240,-74,-104,-62,244,]),'MAIN':([8,10,11,12,15,17,18,23,25,33,34,35,40,92,229,236,237,],[-104,-6,-7,-104,-104,-20,29,-104,-19,-12,-104,-9,-11,-13,-104,-21,-27,]),'}':([47,56,57,58,60,61,63,64,65,69,70,71,80,82,157,168,178,185,215,216,219,223,224,226,228,230,233,235,238,239,240,243,244,245,246,247,],[-104,81,-42,-104,-41,-66,-40,-64,-65,-38,-44,-43,-39,-63,-45,-51,-52,-57,-104,-104,-104,228,229,230,-104,-104,-58,-60,-67,-70,-104,245,-104,-71,247,-59,]),'|':([84,85,87,95,96,98,100,101,102,103,104,105,128,131,135,136,139,140,141,142,143,146,147,148,165,195,196,197,198,199,200,201,202,],[-8,-103,-104,-94,126,-104,-104,-104,-104,-95,-104,-104,-92,-89,-84,-79,-98,-101,-102,-99,-88,-85,-100,-97,-96,-90,-91,-82,-83,-80,-81,-86,-87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'func_definicion':([12,15,],[15,15,]),'constant':([76,83,88,89,90,97,108,114,163,164,166,167,169,170,171,172,173,174,180,207,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'super_exp_1':([100,],[136,]),'np_start_dirfunc':([5,],[6,]),'np_single_var_process':([59,87,],[84,84,]),'np_prep_func_params':([75,],[93,]),'np_decision_1':([158,],[186,]),'var_opcional':([8,189,],[12,209,]),'func_parametro':([93,],[119,]),'np_func_tipo_retorno':([28,],[36,]),'np_set_curr_var_name':([39,91,],[44,118,]),'func_llamada':([47,58,215,216,219,240,244,],[55,55,55,55,55,55,55,]),'np_add_to_func_dir':([46,],[51,]),'np_kill_func':([229,],[236,]),'loop_estatuto':([47,58,215,216,219,240,244,],[56,82,223,224,226,243,246,]),'variable_loop':([77,],[107,]),'np_var_prep':([9,],[14,]),'np_add_var_to_varstable':([44,118,],[48,159,]),'term_1':([98,],[131,]),'hyper_exp_loop':([83,88,],[111,115,]),'tipo':([14,16,23,34,93,192,],[19,27,19,19,120,210,]),'func_return':([47,58,215,216,219,240,244,],[70,70,70,70,70,70,70,]),'np_push_const_float':([101,],[139,]),'decision':([47,58,215,216,219,240,244,],[57,57,57,57,57,57,57,]),'estatuto':([47,58,215,216,219,240,244,],[58,58,58,58,58,58,58,]),'var_declaracion':([8,189,],[10,10,]),'write':([47,58,215,216,219,240,244,],[60,60,60,60,60,60,60,]),'parametro':([93,],[121,]),'loop_var_declaracion':([23,34,],[35,40,]),'factor':([76,83,88,89,90,97,108,114,163,164,166,167,169,170,171,172,173,174,180,207,],[98,98,98,98,98,98,98,98,98,98,195,196,98,98,98,98,98,98,98,98,]),'loop_parametro':([161,217,],[190,225,]),'variable_loop_1':([149,211,],[175,218,]),'main':([18,],[30,]),'loop_var_decl_mismo_tipo':([48,159,],[74,188,]),'decision_else':([228,],[233,]),'super_exp':([76,83,88,89,90,97,108,114,163,164,180,207,],[96,96,96,96,96,96,96,96,193,194,96,96,]),'hyper_exp':([76,83,88,89,90,97,108,114,180,207,],[99,113,113,116,117,127,152,155,206,214,]),'np_push_const_int':([105,],[148,]),'read':([47,58,215,216,219,240,244,],[63,63,63,63,63,63,63,]),'epsilon':([1,5,8,9,12,15,19,23,28,34,39,41,44,46,47,48,54,58,59,75,81,87,91,93,96,98,100,101,102,104,105,106,113,118,123,126,129,130,133,134,137,138,144,145,149,154,155,158,159,161,179,189,203,206,211,213,214,215,216,217,219,227,228,229,230,234,240,244,],[4,7,11,13,17,17,31,33,37,33,43,45,49,50,64,72,79,64,85,94,109,85,43,122,124,128,135,140,141,143,147,150,150,49,162,162,162,162,162,162,162,162,162,162,177,181,184,187,72,191,205,11,150,150,177,181,222,64,64,191,64,232,235,237,239,241,64,64,]),'condicional':([47,58,215,216,219,240,244,],[65,65,65,65,65,65,65,]),'np_fin_total':([81,],[110,]),'np_cond_3':([230,],[238,]),'np_decision_2':([234,],[242,]),'np_for_3':([227,],[231,]),'np_add_to_input_counter':([106,113,203,206,],[149,154,211,213,]),'var_declaracion_mismo_tipo':([14,23,34,],[23,34,34,]),'np_cond_2':([179,],[204,]),'variable':([47,58,62,76,77,83,88,89,90,97,108,114,163,164,166,167,169,170,171,172,173,174,176,180,207,215,216,219,240,244,],[67,67,86,103,106,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,203,103,103,67,67,67,67,67,]),'np_set_curr_var_type':([19,],[32,]),'np_push_const_char':([102,],[142,]),'no_condicional':([47,58,215,216,219,240,244,],[61,61,61,61,61,61,61,]),'np_cond_1':([54,],[78,]),'term':([76,83,88,89,90,97,108,114,163,164,169,170,171,172,173,174,180,207,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,201,202,104,104,]),'np_push_operator_stack':([123,126,129,130,133,134,137,138,144,145,],[163,164,166,167,169,170,171,172,173,174,]),'func_tipo_retorno':([16,],[28,]),'asignacion':([47,58,215,216,219,240,244,],[69,69,69,69,69,69,69,]),'np_for_2':([214,],[221,]),'np_program_start':([1,],[3,]),'np_for_1':([155,],[183,]),'exp_1':([104,],[146,]),'programa':([0,],[2,]),'exp':([76,83,88,89,90,97,108,114,163,164,169,170,171,172,180,207,],[100,100,100,100,100,100,100,100,100,100,197,198,199,200,100,100,]),'func_programa_loop':([12,15,],[18,25,]),'hyper_exp_1':([96,],[125,]),'repeticion':([47,58,215,216,219,240,244,],[71,71,71,71,71,71,71,]),'hyper_exp_loop_1':([154,213,],[182,220,]),'np_func_id':([41,],[46,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main','programa',8,'p_programa','a_parser.py',37),
  ('np_program_start -> epsilon','np_program_start',1,'p_np_program_start','a_parser.py',42),
  ('np_start_dirfunc -> epsilon','np_start_dirfunc',1,'p_np_start_dirfunc','a_parser.py',59),
  ('main -> MAIN ( ) { loop_estatuto } np_fin_total','main',7,'p_main','a_parser.py',72),
  ('np_fin_total -> epsilon','np_fin_total',1,'p_np_fin_total','a_parser.py',77),
  ('var_opcional -> var_declaracion','var_opcional',1,'p_var_opcional','a_parser.py',93),
  ('var_opcional -> epsilon','var_opcional',1,'p_var_opcional','a_parser.py',94),
  ('variable -> ID np_single_var_process','variable',2,'p_variable','a_parser.py',103),
  ('var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion','var_declaracion',4,'p_var_declaracion','a_parser.py',113),
  ('np_var_prep -> epsilon','np_var_prep',1,'p_np_var_prep','a_parser.py',119),
  ('loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion','loop_var_declaracion',2,'p_loop_var_declaracion','a_parser.py',133),
  ('loop_var_declaracion -> epsilon','loop_var_declaracion',1,'p_loop_var_declaracion','a_parser.py',134),
  ('var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;','var_declaracion_mismo_tipo',7,'p_var_declaracion_mismo_tipo','a_parser.py',140),
  ('loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo','loop_var_decl_mismo_tipo',5,'p_loop_var_decl_mismo_tipo','a_parser.py',147),
  ('loop_var_decl_mismo_tipo -> epsilon','loop_var_decl_mismo_tipo',1,'p_loop_var_decl_mismo_tipo','a_parser.py',148),
  ('np_set_curr_var_type -> epsilon','np_set_curr_var_type',1,'p_np_set_curr_var_type','a_parser.py',154),
  ('np_set_curr_var_name -> epsilon','np_set_curr_var_name',1,'p_np_set_curr_var_name','a_parser.py',163),
  ('np_add_var_to_varstable -> epsilon','np_add_var_to_varstable',1,'p_np_add_var_to_varstable','a_parser.py',171),
  ('func_programa_loop -> func_definicion func_programa_loop','func_programa_loop',2,'p_func_programa_loop','a_parser.py',187),
  ('func_programa_loop -> epsilon','func_programa_loop',1,'p_func_programa_loop','a_parser.py',188),
  ('func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func','func_definicion',16,'p_func_definicion','a_parser.py',194),
  ('func_tipo_retorno -> tipo','func_tipo_retorno',1,'p_func_tipo_retorno','a_parser.py',202),
  ('func_tipo_retorno -> VOID','func_tipo_retorno',1,'p_func_tipo_retorno','a_parser.py',203),
  ('np_func_tipo_retorno -> epsilon','np_func_tipo_retorno',1,'p_np_func_tipo_retorno','a_parser.py',209),
  ('np_func_id -> epsilon','np_func_id',1,'p_np_func_id','a_parser.py',217),
  ('np_add_to_func_dir -> epsilon','np_add_to_func_dir',1,'p_np_add_to_func_dir','a_parser.py',225),
  ('np_kill_func -> epsilon','np_kill_func',1,'p_np_kill_func','a_parser.py',235),
  ('np_prep_func_params -> epsilon','np_prep_func_params',1,'p_np_prep_func_params','a_parser.py',241),
  ('func_parametro -> parametro','func_parametro',1,'p_func_parametro','a_parser.py',251),
  ('func_parametro -> epsilon','func_parametro',1,'p_func_parametro','a_parser.py',252),
  ('parametro -> tipo ID loop_parametro','parametro',3,'p_parametro','a_parser.py',261),
  ('loop_parametro -> , tipo ID loop_parametro','loop_parametro',4,'p_loop_parametro','a_parser.py',279),
  ('loop_parametro -> epsilon','loop_parametro',1,'p_loop_parametro','a_parser.py',280),
  ('tipo -> INT','tipo',1,'p_tipo','a_parser.py',296),
  ('tipo -> FLOAT','tipo',1,'p_tipo','a_parser.py',297),
  ('tipo -> CHAR','tipo',1,'p_tipo','a_parser.py',298),
  ('tipo -> BOOL','tipo',1,'p_tipo','a_parser.py',299),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','a_parser.py',335),
  ('estatuto -> func_llamada ;','estatuto',2,'p_estatuto','a_parser.py',336),
  ('estatuto -> read','estatuto',1,'p_estatuto','a_parser.py',337),
  ('estatuto -> write','estatuto',1,'p_estatuto','a_parser.py',338),
  ('estatuto -> decision','estatuto',1,'p_estatuto','a_parser.py',339),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','a_parser.py',340),
  ('estatuto -> func_return','estatuto',1,'p_estatuto','a_parser.py',341),
  ('asignacion -> variable = hyper_exp ;','asignacion',4,'p_asignacion','a_parser.py',349),
  ('func_llamada -> ID ( )','func_llamada',3,'p_func_llamada','a_parser.py',363),
  ('func_llamada -> ID ( hyper_exp_loop )','func_llamada',4,'p_func_llamada','a_parser.py',364),
  ('hyper_exp_loop -> hyper_exp np_add_to_input_counter hyper_exp_loop_1','hyper_exp_loop',3,'p_hyper_exp_loop','a_parser.py',370),
  ('hyper_exp_loop_1 -> , hyper_exp np_add_to_input_counter hyper_exp_loop_1','hyper_exp_loop_1',4,'p_hyper_exp_loop_1','a_parser.py',376),
  ('hyper_exp_loop_1 -> epsilon','hyper_exp_loop_1',1,'p_hyper_exp_loop_1','a_parser.py',377),
  ('func_return -> RETURN ( hyper_exp ) ;','func_return',5,'p_func_return','a_parser.py',385),
  ('read -> READ ( variable_loop ) ;','read',5,'p_read','a_parser.py',391),
  ('variable_loop -> variable np_add_to_input_counter variable_loop_1','variable_loop',3,'p_variable_loop','a_parser.py',404),
  ('variable_loop_1 -> , variable np_add_to_input_counter variable_loop_1','variable_loop_1',4,'p_variable_loop_1','a_parser.py',411),
  ('variable_loop_1 -> epsilon','variable_loop_1',1,'p_variable_loop_1','a_parser.py',412),
  ('np_add_to_input_counter -> epsilon','np_add_to_input_counter',1,'p_np_add_to_input_counter','a_parser.py',421),
  ('write -> WRITE ( hyper_exp_loop ) ;','write',5,'p_write','a_parser.py',430),
  ('decision -> IF ( hyper_exp ) np_decision_1 THEN { loop_estatuto } decision_else','decision',10,'p_decision','a_parser.py',443),
  ('decision_else -> ELSE np_decision_2 { loop_estatuto }','decision_else',5,'p_decision_else','a_parser.py',453),
  ('decision_else -> epsilon','decision_else',1,'p_decision_else','a_parser.py',454),
  ('np_decision_1 -> epsilon','np_decision_1',1,'p_np_decision_1','a_parser.py',459),
  ('np_decision_2 -> epsilon','np_decision_2',1,'p_np_decision_2','a_parser.py',472),
  ('loop_estatuto -> estatuto loop_estatuto','loop_estatuto',2,'p_loop_estatuto','a_parser.py',489),
  ('loop_estatuto -> epsilon','loop_estatuto',1,'p_loop_estatuto','a_parser.py',490),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','a_parser.py',500),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','a_parser.py',501),
  ('condicional -> WHILE np_cond_1 ( hyper_exp ) np_cond_2 DO { loop_estatuto } np_cond_3','condicional',11,'p_condicional','a_parser.py',507),
  ('np_cond_1 -> epsilon','np_cond_1',1,'p_np_cond_1','a_parser.py',512),
  ('np_cond_2 -> epsilon','np_cond_2',1,'p_np_cond_2','a_parser.py',520),
  ('np_cond_3 -> epsilon','np_cond_3',1,'p_np_cond_3','a_parser.py',534),
  ('no_condicional -> FOR variable = hyper_exp np_for_1 TO hyper_exp np_for_2 DO np_for_3 { loop_estatuto }','no_condicional',13,'p_no_condicional','a_parser.py',551),
  ('np_for_1 -> epsilon','np_for_1',1,'p_np_for_1','a_parser.py',569),
  ('np_for_2 -> epsilon','np_for_2',1,'p_np_for_2','a_parser.py',584),
  ('np_for_3 -> epsilon','np_for_3',1,'p_np_for_3','a_parser.py',597),
  ('hyper_exp -> super_exp hyper_exp_1','hyper_exp',2,'p_hyper_exp','a_parser.py',618),
  ('hyper_exp_1 -> & np_push_operator_stack super_exp','hyper_exp_1',3,'p_hyper_exp_1','a_parser.py',644),
  ('hyper_exp_1 -> | np_push_operator_stack super_exp','hyper_exp_1',3,'p_hyper_exp_1','a_parser.py',645),
  ('hyper_exp_1 -> epsilon','hyper_exp_1',1,'p_hyper_exp_1','a_parser.py',646),
  ('super_exp -> exp super_exp_1','super_exp',2,'p_super_exp','a_parser.py',652),
  ('super_exp_1 -> < np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',677),
  ('super_exp_1 -> > np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',678),
  ('super_exp_1 -> EQUAL_TO np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',679),
  ('super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',680),
  ('super_exp_1 -> epsilon','super_exp_1',1,'p_super_exp_1','a_parser.py',681),
  ('exp -> term exp_1','exp',2,'p_exp','a_parser.py',687),
  ('exp_1 -> + np_push_operator_stack term','exp_1',3,'p_exp_1','a_parser.py',712),
  ('exp_1 -> - np_push_operator_stack term','exp_1',3,'p_exp_1','a_parser.py',713),
  ('exp_1 -> epsilon','exp_1',1,'p_exp_1','a_parser.py',714),
  ('term -> factor term_1','term',2,'p_term','a_parser.py',720),
  ('term_1 -> * np_push_operator_stack factor','term_1',3,'p_term_1','a_parser.py',744),
  ('term_1 -> / np_push_operator_stack factor','term_1',3,'p_term_1','a_parser.py',745),
  ('term_1 -> epsilon','term_1',1,'p_term_1','a_parser.py',746),
  ('np_push_operator_stack -> epsilon','np_push_operator_stack',1,'p_np_push_operator_stack','a_parser.py',750),
  ('factor -> constant','factor',1,'p_factor','a_parser.py',771),
  ('factor -> variable','factor',1,'p_factor','a_parser.py',772),
  ('factor -> ( hyper_exp )','factor',3,'p_factor','a_parser.py',773),
  ('constant -> VAL_INT np_push_const_int','constant',2,'p_constant','a_parser.py',784),
  ('constant -> VAL_FLOAT np_push_const_float','constant',2,'p_constant','a_parser.py',785),
  ('constant -> VAL_CHAR np_push_const_char','constant',2,'p_constant','a_parser.py',786),
  ('np_push_const_int -> epsilon','np_push_const_int',1,'p_np_push_const_int','a_parser.py',792),
  ('np_push_const_float -> epsilon','np_push_const_float',1,'p_np_push_const_float','a_parser.py',800),
  ('np_push_const_char -> epsilon','np_push_const_char',1,'p_np_push_const_char','a_parser.py',808),
  ('np_single_var_process -> epsilon','np_single_var_process',1,'p_np_single_var_process','a_parser.py',816),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','a_parser.py',825),
]
