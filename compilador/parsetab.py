
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BOOL CHAR DO ELSE EQUAL_TO FLOAT FOR FUNCTION ID IF INT MAIN NOT_EQUAL_TO PRINT PROGRAM READ RETURN STRING THEN TO VAL_CHAR VAL_FLOAT VAL_INT VAL_STRING VARS VOID WHILE WRITE\n    programa : PROGRAM np_program_start ID np_start_dirfunc ';' var_opcional func_programa_loop main   \n    \n    np_program_start : epsilon\n    \n    np_start_dirfunc : epsilon\n    \n    main : MAIN np_prep_main '(' ')' '{' loop_estatuto '}' np_fin_total\n    \n    np_prep_main : epsilon\n    \n    np_fin_total : epsilon\n    \n    var_opcional : var_declaracion\n                 | epsilon\n    \n    variable : ID np_single_var_process\n\n    \n    var_declaracion : VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion\n    \n    np_var_prep : epsilon\n    \n    loop_var_declaracion : var_declaracion_mismo_tipo loop_var_declaracion\n                         | epsilon\n    \n    var_declaracion_mismo_tipo :  tipo np_set_curr_var_type ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo ';'\n    \n    array_opcional : '[' VAL_INT np_push_const_int ']'\n                   | epsilon\n    \n    loop_var_decl_mismo_tipo : ',' ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo\n                  | epsilon\n    \n    np_set_curr_var_type : epsilon\n    \n    np_set_curr_var_name : epsilon\n    \n    np_add_var_to_varstable : epsilon\n    \n    func_programa_loop : func_definicion func_programa_loop\n                       | epsilon\n    \n    func_definicion : FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir '(' np_prep_func_params func_parametro ')' ';' var_opcional np_save_curr_func_quad '{' loop_estatuto '}' np_kill_func\n    \n    func_tipo_retorno : tipo\n                      | VOID\n    \n    np_func_tipo_retorno : epsilon\n    \n    np_func_id : epsilon\n    \n    np_add_to_func_dir : epsilon\n    \n    np_save_curr_func_quad : epsilon\n    \n    np_kill_func : epsilon\n    \n    np_prep_func_params : epsilon\n    \n    func_parametro : parametro\n                   | epsilon\n    \n    parametro : tipo ID np_add_param loop_parametro\n    \n    loop_parametro : ',' tipo ID np_add_param loop_parametro\n                   | epsilon\n    \n    np_add_param : epsilon\n    \n    tipo : INT\n         | FLOAT\n         | CHAR\n         | BOOL\n    \n    estatuto : asignacion \n             | func_llamada ';'\n             | read\n             | write\n             | decision\n             | repeticion\n             | func_return \n    \n    asignacion : variable '=' hyper_exp ';'\n    \n    func_llamada : ID np_fc_1 '(' np_push_operator_stack argumento_loop ')' np_pop_operator_stack\n    \n    np_fc_1 : epsilon\n    \n    argumento_loop : hyper_exp np_fc_2 argumento_loop_1\n                   | epsilon\n    \n    argumento_loop_1 : ',' hyper_exp np_fc_2 argumento_loop_1\n                     | epsilon\n    \n    hyper_exp_loop : hyper_exp np_add_to_input_counter hyper_exp_loop_1\n    \n    hyper_exp_loop_1 : ',' hyper_exp np_add_to_input_counter hyper_exp_loop_1\n                     | epsilon\n    \n    np_fc_2 : epsilon\n    \n    func_return : RETURN '(' hyper_exp ')' ';'\n    \n    read : READ '(' variable_loop ')' ';'\n    \n    variable_loop : variable np_add_to_input_counter variable_loop_1\n    \n    variable_loop_1 : ',' variable np_add_to_input_counter variable_loop_1\n                    | epsilon\n    \n    np_add_to_input_counter : epsilon\n    \n    write : WRITE '(' hyper_exp_loop ')' ';'\n    \n    decision : IF '(' hyper_exp ')' np_decision_1 THEN '{' loop_estatuto '}'  decision_else\n    \n    decision_else : ELSE np_decision_2 '{' loop_estatuto '}' \n                  | epsilon\n    \n    np_decision_1 : epsilon\n    \n    np_decision_2 : epsilon\n    \n    loop_estatuto : estatuto loop_estatuto\n                  | epsilon\n    \n    repeticion : condicional\n               | no_condicional\n    \n    condicional : WHILE np_cond_1 '(' hyper_exp ')' np_cond_2 DO '{' loop_estatuto '}' np_cond_3\n    \n    np_cond_1 : epsilon\n    \n    np_cond_2 : epsilon\n    \n    np_cond_3 : epsilon\n    \n    no_condicional : FOR variable '=' hyper_exp np_for_1 TO hyper_exp np_for_2 DO np_for_3 '{' loop_estatuto '}' \n    \n    np_for_1 : epsilon\n    \n    np_for_2 : epsilon\n    \n    np_for_3 : epsilon\n    \n    hyper_exp : super_exp hyper_exp_1\n    \n    hyper_exp_1 : '&' np_push_operator_stack super_exp\n                | '|' np_push_operator_stack super_exp\n                | epsilon\n    \n    super_exp : exp super_exp_1\n    \n    super_exp_1 : '<' np_push_operator_stack exp\n                | '>' np_push_operator_stack exp\n                | EQUAL_TO np_push_operator_stack exp\n                | NOT_EQUAL_TO np_push_operator_stack exp\n                | epsilon\n    \n    exp : term exp_1\n    \n    exp_1 : '+' np_push_operator_stack term\n          | '-' np_push_operator_stack term\n          | epsilon\n    \n    term : factor term_1\n    \n    term_1 : '*' np_push_operator_stack factor \n           | '/' np_push_operator_stack factor\n           | epsilon\n    \n    np_push_operator_stack : epsilon\n    \n    np_pop_operator_stack : epsilon\n    \n    factor : constant\n           | variable\n           | '(' hyper_exp ')'\n           | func_llamada\n    \n    constant : VAL_INT np_push_const_int\n             | VAL_FLOAT np_push_const_float\n             | VAL_CHAR np_push_const_char\n    \n    np_push_const_int : epsilon\n    \n    np_push_const_float : epsilon\n    \n    np_push_const_char : epsilon\n    \n    np_single_var_process : epsilon\n    epsilon : "
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,19,79,101,102,],[0,-1,-116,-4,-6,]),'ID':([2,3,4,22,23,24,25,26,27,28,30,33,34,38,39,49,56,58,60,61,62,63,64,70,71,74,81,82,86,87,88,89,97,110,116,123,124,129,133,135,136,139,140,141,142,145,146,149,150,159,160,173,174,175,176,177,178,179,180,181,182,187,189,191,193,197,223,232,236,241,247,250,253,259,261,262,269,270,271,274,277,278,],[-116,5,-2,-116,-25,-26,-39,-40,-41,-42,-116,41,-27,43,-19,66,66,-43,-45,-46,-47,-48,-49,-75,-76,93,-44,115,93,115,115,115,131,115,-116,115,115,171,-50,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,115,-103,115,115,115,115,115,115,115,115,115,115,-62,93,-67,115,-61,115,115,66,251,66,66,-116,-68,-70,-116,-77,-80,66,66,-81,-69,]),';':([5,6,7,43,47,48,52,54,59,76,77,84,96,98,100,103,104,105,106,107,108,109,111,112,113,114,115,131,132,134,137,138,143,144,147,148,151,153,154,155,156,157,158,161,164,167,170,172,183,204,205,206,207,208,209,210,211,212,213,214,215,228,229,230,242,],[-116,8,-3,-116,-116,-20,-116,-16,81,-116,-21,-9,130,-18,-112,-106,133,-116,-116,-116,-116,-105,-108,-116,-116,-116,-116,-116,-15,-85,-88,-89,-94,-95,-98,-99,-102,-109,-110,-113,-111,-114,-115,187,191,197,201,-116,-107,-116,-86,-87,-90,-91,-92,-93,-96,-97,-100,-101,-116,-116,-51,-104,-17,]),'VARS':([8,201,],[12,12,]),'FUNCTION':([8,9,10,11,14,29,35,36,37,42,130,265,272,273,],[-116,16,-7,-8,16,-116,-116,-10,-13,-12,-14,-116,-24,-31,]),'MAIN':([8,9,10,11,13,14,15,21,29,35,36,37,42,130,265,272,273,],[-116,-116,-7,-8,20,-116,-23,-22,-116,-116,-10,-13,-12,-14,-116,-24,-31,]),'{':([10,11,29,35,36,37,42,44,130,201,220,224,237,239,240,255,260,263,264,267,268,],[-7,-8,-116,-116,-10,-13,-12,49,-14,-116,236,-116,247,250,-30,-116,-116,271,-84,274,-72,]),'INT':([12,16,17,18,29,35,75,94,95,130,226,],[-116,25,25,-11,25,25,-116,25,-32,-14,25,]),'FLOAT':([12,16,17,18,29,35,75,94,95,130,226,],[-116,26,26,-11,26,26,-116,26,-32,-14,26,]),'CHAR':([12,16,17,18,29,35,75,94,95,130,226,],[-116,27,27,-11,27,27,-116,27,-32,-14,27,]),'BOOL':([12,16,17,18,29,35,75,94,95,130,226,],[-116,28,28,-11,28,28,-116,28,-32,-14,28,]),'VOID':([16,],[24,]),'(':([20,31,32,41,45,46,50,51,66,67,68,69,72,73,82,83,85,87,88,89,90,91,110,115,116,123,124,135,136,139,140,141,142,145,146,149,150,158,159,160,173,174,175,176,177,178,179,180,181,182,193,223,232,],[-116,40,-5,-116,-116,-28,75,-29,-116,86,87,88,89,-116,110,116,-52,110,110,110,123,-78,110,-116,-116,110,110,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,-52,110,-103,110,110,110,110,110,110,110,110,110,110,110,110,110,]),')':([40,75,84,93,94,95,100,103,105,106,107,108,109,111,112,113,114,115,116,117,118,119,120,121,122,125,126,127,128,134,137,138,143,144,147,148,151,152,153,154,155,156,157,158,159,160,162,163,165,168,171,183,184,185,186,188,190,192,194,202,203,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,229,230,231,233,234,235,243,244,245,251,252,257,258,266,],[44,-116,-9,-116,-116,-32,-112,-106,-116,-116,-116,-116,-105,-108,-116,-116,-116,-116,-116,161,-116,164,-116,166,167,-115,170,-33,-34,-85,-88,-89,-94,-95,-98,-99,-102,183,-109,-110,-113,-111,-114,-115,-116,-103,-116,-66,-116,198,-116,-107,215,-116,-54,-63,-65,-57,-59,-116,-38,-86,-87,-90,-91,-92,-93,-96,-97,-100,-101,-116,-116,-60,-116,-116,-35,-37,-51,-104,-53,-56,-116,-116,-116,-64,-58,-116,-116,-116,-55,-36,]),'[':([43,47,48,131,172,],[-116,53,-20,-116,53,]),',':([43,47,48,52,54,76,77,84,93,100,103,105,106,107,108,109,111,112,113,114,115,118,120,125,131,132,134,137,138,143,144,147,148,151,153,154,155,156,157,158,162,163,165,171,172,183,185,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,228,229,230,234,235,243,251,252,257,],[-116,-116,-20,-116,-16,97,-21,-9,-116,-112,-106,-116,-116,-116,-116,-105,-108,-116,-116,-116,-116,-116,-116,-115,-116,-15,-85,-88,-89,-94,-95,-98,-99,-102,-109,-110,-113,-111,-114,-115,189,-66,193,-116,-116,-107,-116,226,-38,-116,-86,-87,-90,-91,-92,-93,-96,-97,-100,-101,-116,232,-60,-116,-116,97,-51,-104,189,193,-116,-116,232,226,]),'}':([49,55,56,57,58,60,61,62,63,64,70,71,80,81,133,187,191,197,236,246,247,250,253,254,256,259,261,262,269,270,271,274,275,276,277,278,],[-116,79,-116,-74,-43,-45,-46,-47,-48,-49,-75,-76,-73,-44,-50,-62,-67,-61,-116,253,-116,-116,-116,262,265,-68,-70,-116,-77,-80,-116,-116,277,278,-81,-69,]),'READ':([49,56,58,60,61,62,63,64,70,71,81,133,187,191,197,236,247,250,253,259,261,262,269,270,271,274,277,278,],[67,67,-43,-45,-46,-47,-48,-49,-75,-76,-44,-50,-62,-67,-61,67,67,67,-116,-68,-70,-116,-77,-80,67,67,-81,-69,]),'WRITE':([49,56,58,60,61,62,63,64,70,71,81,133,187,191,197,236,247,250,253,259,261,262,269,270,271,274,277,278,],[68,68,-43,-45,-46,-47,-48,-49,-75,-76,-44,-50,-62,-67,-61,68,68,68,-116,-68,-70,-116,-77,-80,68,68,-81,-69,]),'IF':([49,56,58,60,61,62,63,64,70,71,81,133,187,191,197,236,247,250,253,259,261,262,269,270,271,274,277,278,],[69,69,-43,-45,-46,-47,-48,-49,-75,-76,-44,-50,-62,-67,-61,69,69,69,-116,-68,-70,-116,-77,-80,69,69,-81,-69,]),'RETURN':([49,56,58,60,61,62,63,64,70,71,81,133,187,191,197,236,247,250,253,259,261,262,269,270,271,274,277,278,],[72,72,-43,-45,-46,-47,-48,-49,-75,-76,-44,-50,-62,-67,-61,72,72,72,-116,-68,-70,-116,-77,-80,72,72,-81,-69,]),'WHILE':([49,56,58,60,61,62,63,64,70,71,81,133,187,191,197,236,247,250,253,259,261,262,269,270,271,274,277,278,],[73,73,-43,-45,-46,-47,-48,-49,-75,-76,-44,-50,-62,-67,-61,73,73,73,-116,-68,-70,-116,-77,-80,73,73,-81,-69,]),'FOR':([49,56,58,60,61,62,63,64,70,71,81,133,187,191,197,236,247,250,253,259,261,262,269,270,271,274,277,278,],[74,74,-43,-45,-46,-47,-48,-49,-75,-76,-44,-50,-62,-67,-61,74,74,74,-116,-68,-70,-116,-77,-80,74,74,-81,-69,]),'VAL_INT':([53,82,87,88,89,110,116,123,124,135,136,139,140,141,142,145,146,149,150,159,160,173,174,175,176,177,178,179,180,181,182,193,223,232,],[78,112,112,112,112,112,-116,112,112,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,112,-103,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'=':([65,66,84,85,92,93,125,],[82,-116,-9,-115,124,-116,-115,]),']':([78,99,100,],[-116,132,-112,]),'VAL_FLOAT':([82,87,88,89,110,116,123,124,135,136,139,140,141,142,145,146,149,150,159,160,173,174,175,176,177,178,179,180,181,182,193,223,232,],[113,113,113,113,113,-116,113,113,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,113,-103,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'VAL_CHAR':([82,87,88,89,110,116,123,124,135,136,139,140,141,142,145,146,149,150,159,160,173,174,175,176,177,178,179,180,181,182,193,223,232,],[114,114,114,114,114,-116,114,114,-116,-116,-116,-116,-116,-116,-116,-116,-116,-116,114,-103,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'*':([84,100,103,108,109,111,112,113,114,115,153,154,155,156,157,158,183,215,229,230,],[-9,-112,-106,149,-105,-108,-116,-116,-116,-116,-109,-110,-113,-111,-114,-115,-107,-116,-51,-104,]),'/':([84,100,103,108,109,111,112,113,114,115,153,154,155,156,157,158,183,215,229,230,],[-9,-112,-106,150,-105,-108,-116,-116,-116,-116,-109,-110,-113,-111,-114,-115,-107,-116,-51,-104,]),'+':([84,100,103,107,108,109,111,112,113,114,115,148,151,153,154,155,156,157,158,183,213,214,215,229,230,],[-9,-112,-106,145,-116,-105,-108,-116,-116,-116,-116,-99,-102,-109,-110,-113,-111,-114,-115,-107,-100,-101,-116,-51,-104,]),'-':([84,100,103,107,108,109,111,112,113,114,115,148,151,153,154,155,156,157,158,183,213,214,215,229,230,],[-9,-112,-106,146,-116,-105,-108,-116,-116,-116,-116,-99,-102,-109,-110,-113,-111,-114,-115,-107,-100,-101,-116,-51,-104,]),'<':([84,100,103,106,107,108,109,111,112,113,114,115,144,147,148,151,153,154,155,156,157,158,183,211,212,213,214,215,229,230,],[-9,-112,-106,139,-116,-116,-105,-108,-116,-116,-116,-116,-95,-98,-99,-102,-109,-110,-113,-111,-114,-115,-107,-96,-97,-100,-101,-116,-51,-104,]),'>':([84,100,103,106,107,108,109,111,112,113,114,115,144,147,148,151,153,154,155,156,157,158,183,211,212,213,214,215,229,230,],[-9,-112,-106,140,-116,-116,-105,-108,-116,-116,-116,-116,-95,-98,-99,-102,-109,-110,-113,-111,-114,-115,-107,-96,-97,-100,-101,-116,-51,-104,]),'EQUAL_TO':([84,100,103,106,107,108,109,111,112,113,114,115,144,147,148,151,153,154,155,156,157,158,183,211,212,213,214,215,229,230,],[-9,-112,-106,141,-116,-116,-105,-108,-116,-116,-116,-116,-95,-98,-99,-102,-109,-110,-113,-111,-114,-115,-107,-96,-97,-100,-101,-116,-51,-104,]),'NOT_EQUAL_TO':([84,100,103,106,107,108,109,111,112,113,114,115,144,147,148,151,153,154,155,156,157,158,183,211,212,213,214,215,229,230,],[-9,-112,-106,142,-116,-116,-105,-108,-116,-116,-116,-116,-95,-98,-99,-102,-109,-110,-113,-111,-114,-115,-107,-96,-97,-100,-101,-116,-51,-104,]),'&':([84,100,103,105,106,107,108,109,111,112,113,114,115,138,143,144,147,148,151,153,154,155,156,157,158,183,207,208,209,210,211,212,213,214,215,229,230,],[-9,-112,-106,135,-116,-116,-116,-105,-108,-116,-116,-116,-116,-89,-94,-95,-98,-99,-102,-109,-110,-113,-111,-114,-115,-107,-90,-91,-92,-93,-96,-97,-100,-101,-116,-51,-104,]),'|':([84,100,103,105,106,107,108,109,111,112,113,114,115,138,143,144,147,148,151,153,154,155,156,157,158,183,207,208,209,210,211,212,213,214,215,229,230,],[-9,-112,-106,136,-116,-116,-116,-105,-108,-116,-116,-116,-116,-89,-94,-95,-98,-99,-102,-109,-110,-113,-111,-114,-115,-107,-90,-91,-92,-93,-96,-97,-100,-101,-116,-51,-104,]),'TO':([84,100,103,105,106,107,108,109,111,112,113,114,115,134,137,138,143,144,147,148,151,153,154,155,156,157,158,169,183,199,200,205,206,207,208,209,210,211,212,213,214,215,229,230,],[-9,-112,-106,-116,-116,-116,-116,-105,-108,-116,-116,-116,-116,-85,-88,-89,-94,-95,-98,-99,-102,-109,-110,-113,-111,-114,-115,-116,-107,223,-82,-86,-87,-90,-91,-92,-93,-96,-97,-100,-101,-116,-51,-104,]),'DO':([84,100,103,105,106,107,108,109,111,112,113,114,115,134,137,138,143,144,147,148,151,153,154,155,156,157,158,183,198,205,206,207,208,209,210,211,212,213,214,215,221,222,229,230,238,248,249,],[-9,-112,-106,-116,-116,-116,-116,-105,-108,-116,-116,-116,-116,-85,-88,-89,-94,-95,-98,-99,-102,-109,-110,-113,-111,-114,-115,-107,-116,-86,-87,-90,-91,-92,-93,-96,-97,-100,-101,-116,237,-79,-51,-104,-116,255,-83,]),'THEN':([166,195,196,],[-116,220,-71,]),'ELSE':([253,],[260,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'np_program_start':([2,],[3,]),'epsilon':([2,5,8,9,12,14,20,22,29,30,35,41,43,45,47,49,52,56,66,73,75,76,78,79,93,94,105,106,107,108,112,113,114,115,116,118,120,131,135,136,139,140,141,142,145,146,149,150,159,162,165,166,169,171,172,185,198,201,202,204,215,216,218,219,224,228,234,235,236,238,243,247,250,251,252,253,255,257,260,262,265,271,274,],[4,7,11,15,18,15,32,34,37,39,37,46,48,51,54,57,77,57,85,91,95,98,100,102,125,128,137,143,147,151,100,155,157,158,160,163,163,48,160,160,160,160,160,160,160,160,160,160,186,190,194,196,200,203,54,217,222,11,227,77,230,233,163,163,240,98,190,194,57,249,217,57,57,203,233,261,264,227,268,270,273,57,57,]),'np_start_dirfunc':([5,],[6,]),'var_opcional':([8,201,],[9,224,]),'var_declaracion':([8,201,],[10,10,]),'func_programa_loop':([9,14,],[13,21,]),'func_definicion':([9,14,],[14,14,]),'np_var_prep':([12,],[17,]),'main':([13,],[19,]),'func_tipo_retorno':([16,],[22,]),'tipo':([16,17,29,35,94,226,],[23,30,30,30,129,241,]),'var_declaracion_mismo_tipo':([17,29,35,],[29,35,35,]),'np_prep_main':([20,],[31,]),'np_func_tipo_retorno':([22,],[33,]),'loop_var_declaracion':([29,35,],[36,42,]),'np_set_curr_var_type':([30,],[38,]),'np_func_id':([41,],[45,]),'np_set_curr_var_name':([43,131,],[47,172,]),'np_add_to_func_dir':([45,],[50,]),'array_opcional':([47,172,],[52,204,]),'loop_estatuto':([49,56,236,247,250,271,274,],[55,80,246,254,256,275,276,]),'estatuto':([49,56,236,247,250,271,274,],[56,56,56,56,56,56,56,]),'asignacion':([49,56,236,247,250,271,274,],[58,58,58,58,58,58,58,]),'func_llamada':([49,56,82,87,88,89,110,123,124,159,173,174,175,176,177,178,179,180,181,182,193,223,232,236,247,250,271,274,],[59,59,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,59,59,59,59,59,]),'read':([49,56,236,247,250,271,274,],[60,60,60,60,60,60,60,]),'write':([49,56,236,247,250,271,274,],[61,61,61,61,61,61,61,]),'decision':([49,56,236,247,250,271,274,],[62,62,62,62,62,62,62,]),'repeticion':([49,56,236,247,250,271,274,],[63,63,63,63,63,63,63,]),'func_return':([49,56,236,247,250,271,274,],[64,64,64,64,64,64,64,]),'variable':([49,56,74,82,86,87,88,89,110,123,124,159,173,174,175,176,177,178,179,180,181,182,189,193,223,232,236,247,250,271,274,],[65,65,92,103,118,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,218,103,103,103,65,65,65,65,65,]),'condicional':([49,56,236,247,250,271,274,],[70,70,70,70,70,70,70,]),'no_condicional':([49,56,236,247,250,271,274,],[71,71,71,71,71,71,71,]),'np_add_var_to_varstable':([52,204,],[76,228,]),'np_fc_1':([66,115,],[83,83,]),'np_single_var_process':([66,93,115,],[84,84,84,]),'np_cond_1':([73,],[90,]),'np_prep_func_params':([75,],[94,]),'loop_var_decl_mismo_tipo':([76,228,],[96,242,]),'np_push_const_int':([78,112,],[99,153,]),'np_fin_total':([79,],[101,]),'hyper_exp':([82,87,88,89,110,123,124,159,193,223,232,],[104,120,121,122,152,168,169,185,219,238,243,]),'super_exp':([82,87,88,89,110,123,124,159,173,174,193,223,232,],[105,105,105,105,105,105,105,105,205,206,105,105,105,]),'exp':([82,87,88,89,110,123,124,159,173,174,175,176,177,178,193,223,232,],[106,106,106,106,106,106,106,106,106,106,207,208,209,210,106,106,106,]),'term':([82,87,88,89,110,123,124,159,173,174,175,176,177,178,179,180,193,223,232,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,211,212,107,107,107,]),'factor':([82,87,88,89,110,123,124,159,173,174,175,176,177,178,179,180,181,182,193,223,232,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,213,214,108,108,108,]),'constant':([82,87,88,89,110,123,124,159,173,174,175,176,177,178,179,180,181,182,193,223,232,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,]),'variable_loop':([86,],[117,]),'hyper_exp_loop':([87,],[119,]),'func_parametro':([94,],[126,]),'parametro':([94,],[127,]),'hyper_exp_1':([105,],[134,]),'super_exp_1':([106,],[138,]),'exp_1':([107,],[144,]),'term_1':([108,],[148,]),'np_push_const_float':([113,],[154,]),'np_push_const_char':([114,],[156,]),'np_push_operator_stack':([116,135,136,139,140,141,142,145,146,149,150,],[159,173,174,175,176,177,178,179,180,181,182,]),'np_add_to_input_counter':([118,120,218,219,],[162,165,234,235,]),'argumento_loop':([159,],[184,]),'variable_loop_1':([162,234,],[188,244,]),'hyper_exp_loop_1':([165,235,],[192,245,]),'np_decision_1':([166,],[195,]),'np_for_1':([169,],[199,]),'np_add_param':([171,251,],[202,257,]),'np_fc_2':([185,243,],[216,252,]),'np_cond_2':([198,],[221,]),'loop_parametro':([202,257,],[225,266,]),'np_pop_operator_stack':([215,],[229,]),'argumento_loop_1':([216,252,],[231,258,]),'np_save_curr_func_quad':([224,],[239,]),'np_for_2':([238,],[248,]),'decision_else':([253,],[259,]),'np_for_3':([255,],[263,]),'np_decision_2':([260,],[267,]),'np_cond_3':([262,],[269,]),'np_kill_func':([265,],[272,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main','programa',8,'p_programa','a_parser.py',45),
  ('np_program_start -> epsilon','np_program_start',1,'p_np_program_start','a_parser.py',50),
  ('np_start_dirfunc -> epsilon','np_start_dirfunc',1,'p_np_start_dirfunc','a_parser.py',70),
  ('main -> MAIN np_prep_main ( ) { loop_estatuto } np_fin_total','main',8,'p_main','a_parser.py',85),
  ('np_prep_main -> epsilon','np_prep_main',1,'p_np_prep_main','a_parser.py',89),
  ('np_fin_total -> epsilon','np_fin_total',1,'p_np_fin_total','a_parser.py',103),
  ('var_opcional -> var_declaracion','var_opcional',1,'p_var_opcional','a_parser.py',138),
  ('var_opcional -> epsilon','var_opcional',1,'p_var_opcional','a_parser.py',139),
  ('variable -> ID np_single_var_process','variable',2,'p_variable','a_parser.py',148),
  ('var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion','var_declaracion',4,'p_var_declaracion','a_parser.py',158),
  ('np_var_prep -> epsilon','np_var_prep',1,'p_np_var_prep','a_parser.py',164),
  ('loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion','loop_var_declaracion',2,'p_loop_var_declaracion','a_parser.py',178),
  ('loop_var_declaracion -> epsilon','loop_var_declaracion',1,'p_loop_var_declaracion','a_parser.py',179),
  ('var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo ;','var_declaracion_mismo_tipo',8,'p_var_declaracion_mismo_tipo','a_parser.py',185),
  ('array_opcional -> [ VAL_INT np_push_const_int ]','array_opcional',4,'p_array_opcional','a_parser.py',190),
  ('array_opcional -> epsilon','array_opcional',1,'p_array_opcional','a_parser.py',191),
  ('loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo','loop_var_decl_mismo_tipo',6,'p_loop_var_decl_mismo_tipo','a_parser.py',203),
  ('loop_var_decl_mismo_tipo -> epsilon','loop_var_decl_mismo_tipo',1,'p_loop_var_decl_mismo_tipo','a_parser.py',204),
  ('np_set_curr_var_type -> epsilon','np_set_curr_var_type',1,'p_np_set_curr_var_type','a_parser.py',210),
  ('np_set_curr_var_name -> epsilon','np_set_curr_var_name',1,'p_np_set_curr_var_name','a_parser.py',219),
  ('np_add_var_to_varstable -> epsilon','np_add_var_to_varstable',1,'p_np_add_var_to_varstable','a_parser.py',227),
  ('func_programa_loop -> func_definicion func_programa_loop','func_programa_loop',2,'p_func_programa_loop','a_parser.py',243),
  ('func_programa_loop -> epsilon','func_programa_loop',1,'p_func_programa_loop','a_parser.py',244),
  ('func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional np_save_curr_func_quad { loop_estatuto } np_kill_func','func_definicion',17,'p_func_definicion','a_parser.py',250),
  ('func_tipo_retorno -> tipo','func_tipo_retorno',1,'p_func_tipo_retorno','a_parser.py',258),
  ('func_tipo_retorno -> VOID','func_tipo_retorno',1,'p_func_tipo_retorno','a_parser.py',259),
  ('np_func_tipo_retorno -> epsilon','np_func_tipo_retorno',1,'p_np_func_tipo_retorno','a_parser.py',265),
  ('np_func_id -> epsilon','np_func_id',1,'p_np_func_id','a_parser.py',273),
  ('np_add_to_func_dir -> epsilon','np_add_to_func_dir',1,'p_np_add_to_func_dir','a_parser.py',281),
  ('np_save_curr_func_quad -> epsilon','np_save_curr_func_quad',1,'p_np_save_curr_func_quad','a_parser.py',300),
  ('np_kill_func -> epsilon','np_kill_func',1,'p_np_kill_func','a_parser.py',308),
  ('np_prep_func_params -> epsilon','np_prep_func_params',1,'p_np_prep_func_params','a_parser.py',314),
  ('func_parametro -> parametro','func_parametro',1,'p_func_parametro','a_parser.py',324),
  ('func_parametro -> epsilon','func_parametro',1,'p_func_parametro','a_parser.py',325),
  ('parametro -> tipo ID np_add_param loop_parametro','parametro',4,'p_parametro','a_parser.py',334),
  ('loop_parametro -> , tipo ID np_add_param loop_parametro','loop_parametro',5,'p_loop_parametro','a_parser.py',341),
  ('loop_parametro -> epsilon','loop_parametro',1,'p_loop_parametro','a_parser.py',342),
  ('np_add_param -> epsilon','np_add_param',1,'p_np_add_param','a_parser.py',347),
  ('tipo -> INT','tipo',1,'p_tipo','a_parser.py',356),
  ('tipo -> FLOAT','tipo',1,'p_tipo','a_parser.py',357),
  ('tipo -> CHAR','tipo',1,'p_tipo','a_parser.py',358),
  ('tipo -> BOOL','tipo',1,'p_tipo','a_parser.py',359),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','a_parser.py',395),
  ('estatuto -> func_llamada ;','estatuto',2,'p_estatuto','a_parser.py',396),
  ('estatuto -> read','estatuto',1,'p_estatuto','a_parser.py',397),
  ('estatuto -> write','estatuto',1,'p_estatuto','a_parser.py',398),
  ('estatuto -> decision','estatuto',1,'p_estatuto','a_parser.py',399),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','a_parser.py',400),
  ('estatuto -> func_return','estatuto',1,'p_estatuto','a_parser.py',401),
  ('asignacion -> variable = hyper_exp ;','asignacion',4,'p_asignacion','a_parser.py',409),
  ('func_llamada -> ID np_fc_1 ( np_push_operator_stack argumento_loop ) np_pop_operator_stack','func_llamada',7,'p_func_llamada','a_parser.py',423),
  ('np_fc_1 -> epsilon','np_fc_1',1,'p_np_fc_1','a_parser.py',450),
  ('argumento_loop -> hyper_exp np_fc_2 argumento_loop_1','argumento_loop',3,'p_argumento_loop','a_parser.py',469),
  ('argumento_loop -> epsilon','argumento_loop',1,'p_argumento_loop','a_parser.py',470),
  ('argumento_loop_1 -> , hyper_exp np_fc_2 argumento_loop_1','argumento_loop_1',4,'p_argumento_loop_1','a_parser.py',474),
  ('argumento_loop_1 -> epsilon','argumento_loop_1',1,'p_argumento_loop_1','a_parser.py',475),
  ('hyper_exp_loop -> hyper_exp np_add_to_input_counter hyper_exp_loop_1','hyper_exp_loop',3,'p_hyper_exp_loop','a_parser.py',481),
  ('hyper_exp_loop_1 -> , hyper_exp np_add_to_input_counter hyper_exp_loop_1','hyper_exp_loop_1',4,'p_hyper_exp_loop_1','a_parser.py',487),
  ('hyper_exp_loop_1 -> epsilon','hyper_exp_loop_1',1,'p_hyper_exp_loop_1','a_parser.py',488),
  ('np_fc_2 -> epsilon','np_fc_2',1,'p_np_fc_2','a_parser.py',493),
  ('func_return -> RETURN ( hyper_exp ) ;','func_return',5,'p_func_return','a_parser.py',519),
  ('read -> READ ( variable_loop ) ;','read',5,'p_read','a_parser.py',531),
  ('variable_loop -> variable np_add_to_input_counter variable_loop_1','variable_loop',3,'p_variable_loop','a_parser.py',544),
  ('variable_loop_1 -> , variable np_add_to_input_counter variable_loop_1','variable_loop_1',4,'p_variable_loop_1','a_parser.py',551),
  ('variable_loop_1 -> epsilon','variable_loop_1',1,'p_variable_loop_1','a_parser.py',552),
  ('np_add_to_input_counter -> epsilon','np_add_to_input_counter',1,'p_np_add_to_input_counter','a_parser.py',561),
  ('write -> WRITE ( hyper_exp_loop ) ;','write',5,'p_write','a_parser.py',570),
  ('decision -> IF ( hyper_exp ) np_decision_1 THEN { loop_estatuto } decision_else','decision',10,'p_decision','a_parser.py',583),
  ('decision_else -> ELSE np_decision_2 { loop_estatuto }','decision_else',5,'p_decision_else','a_parser.py',593),
  ('decision_else -> epsilon','decision_else',1,'p_decision_else','a_parser.py',594),
  ('np_decision_1 -> epsilon','np_decision_1',1,'p_np_decision_1','a_parser.py',599),
  ('np_decision_2 -> epsilon','np_decision_2',1,'p_np_decision_2','a_parser.py',612),
  ('loop_estatuto -> estatuto loop_estatuto','loop_estatuto',2,'p_loop_estatuto','a_parser.py',629),
  ('loop_estatuto -> epsilon','loop_estatuto',1,'p_loop_estatuto','a_parser.py',630),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','a_parser.py',640),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','a_parser.py',641),
  ('condicional -> WHILE np_cond_1 ( hyper_exp ) np_cond_2 DO { loop_estatuto } np_cond_3','condicional',11,'p_condicional','a_parser.py',647),
  ('np_cond_1 -> epsilon','np_cond_1',1,'p_np_cond_1','a_parser.py',652),
  ('np_cond_2 -> epsilon','np_cond_2',1,'p_np_cond_2','a_parser.py',660),
  ('np_cond_3 -> epsilon','np_cond_3',1,'p_np_cond_3','a_parser.py',674),
  ('no_condicional -> FOR variable = hyper_exp np_for_1 TO hyper_exp np_for_2 DO np_for_3 { loop_estatuto }','no_condicional',13,'p_no_condicional','a_parser.py',691),
  ('np_for_1 -> epsilon','np_for_1',1,'p_np_for_1','a_parser.py',708),
  ('np_for_2 -> epsilon','np_for_2',1,'p_np_for_2','a_parser.py',723),
  ('np_for_3 -> epsilon','np_for_3',1,'p_np_for_3','a_parser.py',736),
  ('hyper_exp -> super_exp hyper_exp_1','hyper_exp',2,'p_hyper_exp','a_parser.py',758),
  ('hyper_exp_1 -> & np_push_operator_stack super_exp','hyper_exp_1',3,'p_hyper_exp_1','a_parser.py',784),
  ('hyper_exp_1 -> | np_push_operator_stack super_exp','hyper_exp_1',3,'p_hyper_exp_1','a_parser.py',785),
  ('hyper_exp_1 -> epsilon','hyper_exp_1',1,'p_hyper_exp_1','a_parser.py',786),
  ('super_exp -> exp super_exp_1','super_exp',2,'p_super_exp','a_parser.py',792),
  ('super_exp_1 -> < np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',817),
  ('super_exp_1 -> > np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',818),
  ('super_exp_1 -> EQUAL_TO np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',819),
  ('super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',820),
  ('super_exp_1 -> epsilon','super_exp_1',1,'p_super_exp_1','a_parser.py',821),
  ('exp -> term exp_1','exp',2,'p_exp','a_parser.py',827),
  ('exp_1 -> + np_push_operator_stack term','exp_1',3,'p_exp_1','a_parser.py',852),
  ('exp_1 -> - np_push_operator_stack term','exp_1',3,'p_exp_1','a_parser.py',853),
  ('exp_1 -> epsilon','exp_1',1,'p_exp_1','a_parser.py',854),
  ('term -> factor term_1','term',2,'p_term','a_parser.py',860),
  ('term_1 -> * np_push_operator_stack factor','term_1',3,'p_term_1','a_parser.py',884),
  ('term_1 -> / np_push_operator_stack factor','term_1',3,'p_term_1','a_parser.py',885),
  ('term_1 -> epsilon','term_1',1,'p_term_1','a_parser.py',886),
  ('np_push_operator_stack -> epsilon','np_push_operator_stack',1,'p_np_push_operator_stack','a_parser.py',892),
  ('np_pop_operator_stack -> epsilon','np_pop_operator_stack',1,'p_np_pop_operator_stack','a_parser.py',900),
  ('factor -> constant','factor',1,'p_factor','a_parser.py',921),
  ('factor -> variable','factor',1,'p_factor','a_parser.py',922),
  ('factor -> ( hyper_exp )','factor',3,'p_factor','a_parser.py',923),
  ('factor -> func_llamada','factor',1,'p_factor','a_parser.py',924),
  ('constant -> VAL_INT np_push_const_int','constant',2,'p_constant','a_parser.py',935),
  ('constant -> VAL_FLOAT np_push_const_float','constant',2,'p_constant','a_parser.py',936),
  ('constant -> VAL_CHAR np_push_const_char','constant',2,'p_constant','a_parser.py',937),
  ('np_push_const_int -> epsilon','np_push_const_int',1,'p_np_push_const_int','a_parser.py',943),
  ('np_push_const_float -> epsilon','np_push_const_float',1,'p_np_push_const_float','a_parser.py',951),
  ('np_push_const_char -> epsilon','np_push_const_char',1,'p_np_push_const_char','a_parser.py',959),
  ('np_single_var_process -> epsilon','np_single_var_process',1,'p_np_single_var_process','a_parser.py',967),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','a_parser.py',976),
]
