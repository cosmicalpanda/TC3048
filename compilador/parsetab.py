
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "ABS BOOL CEIL CHAR COS COSH DO ELSE EQUAL_TO FLOAT FLOOR FOR FUNCTION ID IF INT LEN LOG MAIN MAX MEDIA MEDIANA MIN MODA NOT_EQUAL_TO POW PROGRAM RAND READ RETURN SEN SENH STRING TAN TANH THEN TO VAL_CHAR VAL_FLOAT VAL_INT VAL_STRING VARIANZA VARS VOID WHILE WRITE\n    programa : PROGRAM np_program_start ID np_start_dirfunc ';' var_opcional func_programa_loop main   \n    \n    np_program_start : epsilon\n    \n    np_start_dirfunc : epsilon\n    \n    main : MAIN np_prep_main '(' ')' '{' loop_estatuto '}' np_fin_total\n    \n    np_prep_main : epsilon\n    \n    np_fin_total : epsilon\n    \n    var_opcional : var_declaracion\n                 | epsilon\n    \n    variable : ID np_single_var_process\n             | ID '[' np_push_operator_stack hyper_exp ']' np_pop_operator_stack np_array_var_process\n\n    \n    var_declaracion : VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion\n    \n    np_var_prep : epsilon\n    \n    loop_var_declaracion : var_declaracion_mismo_tipo loop_var_declaracion\n                         | epsilon\n    \n    var_declaracion_mismo_tipo :  tipo np_set_curr_var_type ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo ';'\n    \n    array_opcional : '[' VAL_INT np_push_const_int ']'\n                   | epsilon\n    \n    loop_var_decl_mismo_tipo : ',' ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo\n                  | epsilon\n    \n    np_set_curr_var_type : epsilon\n    \n    np_set_curr_var_name : epsilon\n    \n    np_add_var_to_varstable : epsilon\n    \n    func_programa_loop : func_definicion func_programa_loop\n                       | epsilon\n    \n    func_definicion : FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir '(' np_prep_func_params func_parametro ')' ';' var_opcional np_save_curr_func_quad '{' loop_estatuto '}' np_kill_func\n    \n    func_tipo_retorno : tipo\n                      | VOID\n    \n    np_func_tipo_retorno : epsilon\n    \n    np_func_id : epsilon\n    \n    np_add_to_func_dir : epsilon\n    \n    np_save_curr_func_quad : epsilon\n    \n    np_kill_func : epsilon\n    \n    np_prep_func_params : epsilon\n    \n    func_parametro : parametro\n                   | epsilon\n    \n    parametro : tipo ID np_add_param loop_parametro\n    \n    loop_parametro : ',' tipo ID np_add_param loop_parametro\n                   | epsilon\n    \n    np_add_param : epsilon\n    \n    tipo : INT\n         | FLOAT\n         | CHAR\n         | BOOL\n    \n    estatuto : asignacion \n             | func_llamada ';'\n             | read\n             | write\n             | decision\n             | repeticion\n             | func_return \n    \n    asignacion : variable '=' hyper_exp ';'\n    \n    func_llamada : ID np_fc_1 '(' np_push_operator_stack argumento_loop ')' np_pop_operator_stack\n    \n    np_fc_1 : epsilon\n    \n    argumento_loop : hyper_exp np_fc_2 argumento_loop_1\n                   | epsilon\n    \n    argumento_loop_1 : ',' hyper_exp np_fc_2 argumento_loop_1\n                     | epsilon\n    \n    hyper_exp_loop : hyper_exp np_add_to_input_counter hyper_exp_loop_1\n    \n    hyper_exp_loop_1 : ',' hyper_exp np_add_to_input_counter hyper_exp_loop_1\n                     | epsilon\n    \n    np_fc_2 : epsilon\n    \n    func_return : RETURN '(' hyper_exp ')' ';'\n    \n    read : READ '(' variable_loop ')' ';'\n    \n    variable_loop : variable np_add_to_input_counter variable_loop_1\n    \n    variable_loop_1 : ',' variable np_add_to_input_counter variable_loop_1\n                    | epsilon\n    \n    np_add_to_input_counter : epsilon\n    \n    write : WRITE '(' hyper_exp_loop ')' ';'\n    \n    decision : IF '(' hyper_exp ')' np_decision_1 THEN '{' loop_estatuto '}'  decision_else\n    \n    decision_else : ELSE np_decision_2 '{' loop_estatuto '}' \n                  | epsilon\n    \n    np_decision_1 : epsilon\n    \n    np_decision_2 : epsilon\n    \n    loop_estatuto : estatuto loop_estatuto\n                  | epsilon\n    \n    repeticion : condicional\n               | no_condicional\n    \n    condicional : WHILE np_cond_1 '(' hyper_exp ')' np_cond_2 DO '{' loop_estatuto '}' np_cond_3\n    \n    np_cond_1 : epsilon\n    \n    np_cond_2 : epsilon\n    \n    np_cond_3 : epsilon\n    \n    no_condicional : FOR variable '=' hyper_exp np_for_1 TO hyper_exp np_for_2 DO np_for_3 '{' loop_estatuto '}' \n    \n    np_for_1 : epsilon\n    \n    np_for_2 : epsilon\n    \n    np_for_3 : epsilon\n    \n    hyper_exp : super_exp hyper_exp_1\n    \n    hyper_exp_1 : '&' np_push_operator_stack super_exp\n                | '|' np_push_operator_stack super_exp\n                | epsilon\n    \n    super_exp : exp super_exp_1\n    \n    super_exp_1 : '<' np_push_operator_stack exp\n                | '>' np_push_operator_stack exp\n                | EQUAL_TO np_push_operator_stack exp\n                | NOT_EQUAL_TO np_push_operator_stack exp\n                | epsilon\n    \n    exp : term exp_1\n    \n    exp_1 : '+' np_push_operator_stack term\n          | '-' np_push_operator_stack term\n          | epsilon\n    \n    term : factor term_1\n    \n    term_1 : '*' np_push_operator_stack factor \n           | '/' np_push_operator_stack factor\n           | epsilon\n    \n    np_push_operator_stack : epsilon\n    \n    np_pop_operator_stack : epsilon\n    \n    factor : constant\n           | variable\n           | '(' hyper_exp ')'\n           | func_llamada\n           | read\n           | func_mat\n    \n    constant : VAL_INT np_push_const_int\n             | VAL_FLOAT np_push_const_float\n             | VAL_CHAR np_push_const_char\n    \n    np_push_const_int : epsilon\n    \n    np_push_const_float : epsilon\n    \n    np_push_const_char : epsilon\n    \n    np_single_var_process : epsilon\n    \n    np_array_var_process : epsilon\n    \n    func_mat : fm_1_param\n             | fm_2_param\n    \n    fm_1_param : MEDIA '(' ID ')' np_arr_input\n               | MEDIANA '(' ID ')' np_arr_input\n               | MODA '(' ID ')' np_arr_input\n               | LEN '(' ID ')' np_arr_input\n               | VARIANZA '(' ID ')' np_arr_input\n               | SEN '(' hyper_exp ')' np_he_input\n               | COS '(' hyper_exp ')' np_he_input\n               | TAN '(' hyper_exp ')' np_he_input\n               | SENH '(' hyper_exp ')' np_he_input\n               | COSH '(' hyper_exp ')' np_he_input\n               | TANH '(' hyper_exp ')' np_he_input\n               | LOG '(' hyper_exp ')' np_he_input\n               | ABS '(' hyper_exp ')' np_he_input\n               | FLOOR '(' hyper_exp ')' np_he_input\n               | CEIL '(' hyper_exp ')' np_he_input\n    \n    np_he_input : epsilon\n    \n    np_arr_input : epsilon\n    \n    fm_2_param : RAND '(' hyper_exp ',' hyper_exp ')' np_int_input\n               | POW '(' hyper_exp ',' hyper_exp ')' np_int_input\n               | MIN '(' hyper_exp ',' hyper_exp ')' np_same_input\n               | MAX '(' hyper_exp ',' hyper_exp ')' np_same_input\n    \n    np_int_input : epsilon\n    \n    np_same_input : epsilon\n    epsilon : "
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,19,79,102,103,],[0,-1,-145,-4,-6,]),'ID':([2,3,4,22,23,24,25,26,27,28,30,33,34,38,39,49,56,58,60,61,62,63,64,70,71,74,81,82,85,87,88,89,90,98,111,140,141,142,149,150,155,159,161,162,165,166,167,168,171,172,175,176,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,226,227,252,254,256,258,262,295,296,297,298,309,338,344,349,359,362,371,377,379,380,387,388,389,392,395,396,],[-145,5,-2,-145,-26,-27,-40,-41,-42,-43,-145,41,-28,43,-20,66,66,-44,-46,-47,-48,-49,-50,-76,-77,94,-45,118,-145,94,118,118,118,157,118,-145,118,-104,118,118,216,-51,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,229,230,231,232,233,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,118,-63,94,-68,118,-62,118,118,118,118,118,118,66,363,66,66,-145,-69,-71,-145,-78,-81,66,66,-82,-70,]),';':([5,6,7,43,47,48,52,54,59,76,77,84,97,99,101,104,105,106,107,108,109,110,112,113,114,115,116,117,118,119,120,157,158,160,163,164,169,170,173,174,177,179,180,181,182,183,184,206,209,212,215,217,228,251,252,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,299,302,303,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,336,340,341,350,351,352,353,354,364,365,366,367,368,369,],[-145,8,-3,-145,-145,-21,-145,-17,81,-145,-22,-9,156,-19,-115,-107,159,-145,-145,-145,-145,-106,-109,-110,-111,-145,-145,-145,-145,-120,-121,-145,-16,-86,-89,-90,-95,-96,-99,-100,-103,-112,-113,-116,-114,-117,-118,252,256,262,266,-145,-108,-145,-63,-145,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-105,-145,-122,-138,-123,-124,-125,-126,-127,-137,-128,-129,-130,-131,-132,-133,-134,-135,-136,-52,-10,-119,-18,-145,-145,-145,-145,-139,-143,-140,-141,-144,-142,]),'VARS':([8,266,],[12,12,]),'FUNCTION':([8,9,10,11,14,29,35,36,37,42,156,383,390,391,],[-145,16,-7,-8,16,-145,-145,-11,-14,-13,-15,-145,-25,-32,]),'MAIN':([8,9,10,11,13,14,15,21,29,35,36,37,42,156,383,390,391,],[-145,-145,-7,-8,20,-145,-24,-23,-145,-145,-11,-14,-13,-15,-145,-25,-32,]),'{':([10,11,29,35,36,37,42,44,156,266,306,310,345,347,348,373,378,381,382,385,386,],[-7,-8,-145,-145,-11,-14,-13,49,-15,-145,344,-145,359,362,-31,-145,-145,389,-85,392,-73,]),'INT':([12,16,17,18,29,35,75,95,96,156,312,],[-145,25,25,-12,25,25,-145,25,-33,-15,25,]),'FLOAT':([12,16,17,18,29,35,75,95,96,156,312,],[-145,26,26,-12,26,26,-145,26,-33,-15,26,]),'CHAR':([12,16,17,18,29,35,75,95,96,156,312,],[-145,27,27,-12,27,27,-145,27,-33,-15,27,]),'BOOL':([12,16,17,18,29,35,75,95,96,156,312,],[-145,28,28,-12,28,28,-145,28,-33,-15,28,]),'VOID':([16,],[24,]),'(':([20,31,32,41,45,46,50,51,66,67,68,69,72,73,82,83,85,86,88,89,90,91,92,111,118,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,149,150,161,162,165,166,167,168,171,172,175,176,184,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,226,227,258,295,296,297,298,309,338,],[-145,40,-5,-145,-145,-29,75,-30,-145,87,88,89,90,-145,111,140,-145,-53,111,111,111,149,-79,111,-145,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,-145,111,-104,111,111,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-53,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),')':([40,75,84,94,95,96,101,104,106,107,108,109,110,112,113,114,115,116,117,118,119,120,140,142,143,144,145,146,147,148,151,152,153,154,160,163,164,169,170,173,174,177,178,179,180,181,182,183,184,204,207,208,210,213,216,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,248,249,250,251,252,253,255,257,259,267,268,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,299,300,301,302,303,304,305,311,313,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,339,340,341,342,343,351,352,353,354,355,356,357,363,364,365,366,367,368,369,370,375,376,384,],[44,-145,-9,-145,-145,-33,-115,-107,-145,-145,-145,-145,-106,-109,-110,-111,-145,-145,-145,-145,-120,-121,-145,-104,206,-145,209,-145,211,212,-118,215,-34,-35,-86,-89,-90,-95,-96,-99,-100,-103,228,-112,-113,-116,-114,-117,-118,-145,-145,-67,-145,263,-145,-108,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,299,-145,-55,-145,-63,-64,-66,-58,-60,-145,-39,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-61,-145,-105,-145,-145,-36,-38,-122,-138,-123,-124,-125,-126,-127,-137,-128,-129,-130,-131,-132,-133,-134,-135,-136,351,352,353,354,-52,-54,-57,-10,-119,-145,-145,-145,-145,-145,-145,-145,-65,-59,-145,-139,-143,-140,-141,-144,-142,-145,-145,-56,-37,]),'[':([43,47,48,66,94,118,157,217,],[-145,53,-21,85,85,85,-145,53,]),',':([43,47,48,52,54,76,77,84,94,101,104,106,107,108,109,110,112,113,114,115,116,117,118,119,120,144,146,151,157,158,160,163,164,169,170,173,174,177,179,180,181,182,183,184,207,208,210,216,217,228,244,245,246,247,249,251,252,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,299,300,301,302,303,304,305,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,336,340,341,342,343,351,352,353,354,355,363,364,365,366,367,368,369,370,375,],[-145,-145,-21,-145,-17,98,-22,-9,-145,-115,-107,-145,-145,-145,-145,-106,-109,-110,-111,-145,-145,-145,-145,-120,-121,-145,-145,-118,-145,-16,-86,-89,-90,-95,-96,-99,-100,-103,-112,-113,-116,-114,-117,-118,254,-67,258,-145,-145,-108,295,296,297,298,-145,-145,-63,312,-39,-145,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,338,-61,-145,-105,-145,-145,98,-122,-138,-123,-124,-125,-126,-127,-137,-128,-129,-130,-131,-132,-133,-134,-135,-136,-52,-10,-119,254,258,-145,-145,-145,-145,-145,-145,-139,-143,-140,-141,-144,-142,338,312,]),'}|':([84,101,104,106,107,108,109,110,112,113,114,115,116,117,118,119,120,164,169,170,173,174,177,179,180,181,182,183,184,228,251,252,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,299,302,303,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,336,340,341,351,352,353,354,364,365,366,367,368,369,],[-9,-115,-107,162,-145,-145,-145,-106,-109,-110,-111,-145,-145,-145,-145,-120,-121,-90,-95,-96,-99,-100,-103,-112,-113,-116,-114,-117,-118,-108,-145,-63,-91,-92,-93,-94,-97,-98,-101,-102,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-105,-122,-138,-123,-124,-125,-126,-127,-137,-128,-129,-130,-131,-132,-133,-134,-135,-136,-52,-10,-119,-145,-145,-145,-145,-139,-143,-140,-141,-144,-142,]),'TO':([84,101,104,106,107,108,109,110,112,113,114,115,116,117,118,119,120,160,163,164,169,170,173,174,177,179,180,181,182,183,184,214,228,251,252,264,265,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,299,302,303,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,336,340,341,351,352,353,354,364,365,366,367,368,369,],[-9,-115,-107,-145,-145,-145,-145,-106,-109,-110,-111,-145,-145,-145,-145,-120,-121,-86,-89,-90,-95,-96,-99,-100,-103,-112,-113,-116,-114,-117,-118,-145,-108,-145,-63,309,-83,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-105,-122,-138,-123,-124,-125,-126,-127,-137,-128,-129,-130,-131,-132,-133,-134,-135,-136,-52,-10,-119,-145,-145,-145,-145,-139,-143,-140,-141,-144,-142,]),'DO':([84,101,104,106,107,108,109,110,112,113,114,115,116,117,118,119,120,160,163,164,169,170,173,174,177,179,180,181,182,183,184,228,251,252,263,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,299,302,303,307,308,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,336,340,341,346,351,352,353,354,360,361,364,365,366,367,368,369,],[-9,-115,-107,-145,-145,-145,-145,-106,-109,-110,-111,-145,-145,-145,-145,-120,-121,-86,-89,-90,-95,-96,-99,-100,-103,-112,-113,-116,-114,-117,-118,-108,-145,-63,-145,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,-105,345,-80,-122,-138,-123,-124,-125,-126,-127,-137,-128,-129,-130,-131,-132,-133,-134,-135,-136,-52,-10,-119,-145,-145,-145,-145,-145,373,-84,-139,-143,-140,-141,-144,-142,]),'THEN':([211,260,261,],[-145,306,-72,]),'ELSE':([371,],[378,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'np_program_start':([2,],[3,]),'epsilon':([2,5,8,9,12,14,20,22,29,30,35,41,43,45,47,49,52,56,66,73,75,76,78,79,85,94,95,106,107,108,109,115,116,117,118,140,144,146,157,161,162,165,166,167,168,171,172,175,176,204,207,210,211,214,216,217,249,251,263,266,267,269,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,299,300,302,304,305,310,314,342,343,344,346,351,352,353,354,355,359,362,363,370,371,373,375,378,380,383,389,392,],[4,7,11,15,18,15,32,34,37,39,37,46,48,51,54,57,77,57,86,92,96,99,101,103,142,151,154,163,169,173,177,101,181,183,184,142,208,208,48,142,142,142,142,142,142,142,142,142,142,250,255,259,261,265,268,54,301,303,308,11,313,77,316,316,316,316,316,322,322,322,322,322,322,322,322,322,322,303,339,341,208,208,348,99,255,259,57,361,365,365,368,368,301,57,57,268,339,379,382,313,386,388,391,57,57,]),'np_start_dirfunc':([5,],[6,]),'var_opcional':([8,266,],[9,310,]),'var_declaracion':([8,266,],[10,10,]),'func_programa_loop':([9,14,],[13,21,]),'func_definicion':([9,14,],[14,14,]),'np_var_prep':([12,],[17,]),'main':([13,],[19,]),'func_tipo_retorno':([16,],[22,]),'tipo':([16,17,29,35,95,312,],[23,30,30,30,155,349,]),'var_declaracion_mismo_tipo':([17,29,35,],[29,35,35,]),'np_prep_main':([20,],[31,]),'np_func_tipo_retorno':([22,],[33,]),'loop_var_declaracion':([29,35,],[36,42,]),'np_set_curr_var_type':([30,],[38,]),'np_func_id':([41,],[45,]),'np_set_curr_var_name':([43,157,],[47,217,]),'np_add_to_func_dir':([45,],[50,]),'array_opcional':([47,217,],[52,269,]),'loop_estatuto':([49,56,344,359,362,389,392,],[55,80,358,372,374,393,394,]),'estatuto':([49,56,344,359,362,389,392,],[56,56,56,56,56,56,56,]),'asignacion':([49,56,344,359,362,389,392,],[58,58,58,58,58,58,58,]),'func_llamada':([49,56,82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,226,227,258,295,296,297,298,309,338,344,359,362,389,392,],[59,59,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,59,59,59,59,59,]),'read':([49,56,82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,226,227,258,295,296,297,298,309,338,344,359,362,389,392,],[60,60,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,60,60,60,60,60,]),'write':([49,56,344,359,362,389,392,],[61,61,61,61,61,61,61,]),'decision':([49,56,344,359,362,389,392,],[62,62,62,62,62,62,62,]),'repeticion':([49,56,344,359,362,389,392,],[63,63,63,63,63,63,63,]),'func_return':([49,56,344,359,362,389,392,],[64,64,64,64,64,64,64,]),'variable':([49,56,74,82,87,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,226,227,254,258,295,296,297,298,309,338,344,359,362,389,392,],[65,65,93,104,144,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,304,104,104,104,104,104,104,104,65,65,65,65,65,]),'condicional':([49,56,344,359,362,389,392,],[70,70,70,70,70,70,70,]),'no_condicional':([49,56,344,359,362,389,392,],[71,71,71,71,71,71,71,]),'np_add_var_to_varstable':([52,269,],[76,314,]),'np_fc_1':([66,118,],[83,83,]),'np_single_var_process':([66,94,118,],[84,84,84,]),'np_cond_1':([73,],[91,]),'np_prep_func_params':([75,],[95,]),'loop_var_decl_mismo_tipo':([76,314,],[97,350,]),'np_push_const_int':([78,115,],[100,179,]),'np_fin_total':([79,],[102,]),'hyper_exp':([82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,258,295,296,297,298,309,338,],[105,146,147,148,178,205,213,214,234,235,236,237,238,239,240,241,242,243,244,245,246,247,249,305,332,333,334,335,346,355,]),'super_exp':([82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,258,295,296,297,298,309,338,],[106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,270,271,106,106,106,106,106,106,106,]),'exp':([82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,258,295,296,297,298,309,338,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,272,273,274,275,107,107,107,107,107,107,107,]),'term':([82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,258,295,296,297,298,309,338,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,276,277,108,108,108,108,108,108,108,]),'factor':([82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,226,227,258,295,296,297,298,309,338,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,278,279,109,109,109,109,109,109,109,]),'constant':([82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,226,227,258,295,296,297,298,309,338,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'func_mat':([82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,226,227,258,295,296,297,298,309,338,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'fm_1_param':([82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,226,227,258,295,296,297,298,309,338,],[119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,119,]),'fm_2_param':([82,88,89,90,111,141,149,150,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,218,219,220,221,222,223,224,225,226,227,258,295,296,297,298,309,338,],[120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,]),'np_push_operator_stack':([85,140,161,162,165,166,167,168,171,172,175,176,],[141,204,218,219,220,221,222,223,224,225,226,227,]),'variable_loop':([87,],[143,]),'hyper_exp_loop':([88,],[145,]),'func_parametro':([95,],[152,]),'parametro':([95,],[153,]),'hyper_exp_1':([106,],[160,]),'super_exp_1':([107,],[164,]),'exp_1':([108,],[170,]),'term_1':([109,],[174,]),'np_push_const_float':([116,],[180,]),'np_push_const_char':([117,],[182,]),'np_add_to_input_counter':([144,146,304,305,],[207,210,342,343,]),'argumento_loop':([204,],[248,]),'variable_loop_1':([207,342,],[253,356,]),'hyper_exp_loop_1':([210,343,],[257,357,]),'np_decision_1':([211,],[260,]),'np_for_1':([214,],[264,]),'np_add_param':([216,363,],[267,375,]),'np_fc_2':([249,355,],[300,370,]),'np_pop_operator_stack':([251,299,],[302,336,]),'np_cond_2':([263,],[307,]),'loop_parametro':([267,375,],[311,384,]),'np_arr_input':([280,281,282,283,284,],[315,317,318,319,320,]),'np_he_input':([285,286,287,288,289,290,291,292,293,294,],[321,323,324,325,326,327,328,329,330,331,]),'argumento_loop_1':([300,370,],[337,376,]),'np_array_var_process':([302,],[340,]),'np_save_curr_func_quad':([310,],[347,]),'np_for_2':([346,],[360,]),'np_int_input':([351,352,],[364,366,]),'np_same_input':([353,354,],[367,369,]),'decision_else':([371,],[377,]),'np_for_3':([373,],[381,]),'np_decision_2':([378,],[385,]),'np_cond_3':([380,],[387,]),'np_kill_func':([383,],[390,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main','programa',8,'p_programa','a_parser.py',48),
  ('np_program_start -> epsilon','np_program_start',1,'p_np_program_start','a_parser.py',53),
  ('np_start_dirfunc -> epsilon','np_start_dirfunc',1,'p_np_start_dirfunc','a_parser.py',75),
  ('main -> MAIN np_prep_main ( ) { loop_estatuto } np_fin_total','main',8,'p_main','a_parser.py',90),
  ('np_prep_main -> epsilon','np_prep_main',1,'p_np_prep_main','a_parser.py',94),
  ('np_fin_total -> epsilon','np_fin_total',1,'p_np_fin_total','a_parser.py',112),
  ('var_opcional -> var_declaracion','var_opcional',1,'p_var_opcional','a_parser.py',149),
  ('var_opcional -> epsilon','var_opcional',1,'p_var_opcional','a_parser.py',150),
  ('variable -> ID np_single_var_process','variable',2,'p_variable','a_parser.py',159),
  ('variable -> ID [ np_push_operator_stack hyper_exp ] np_pop_operator_stack np_array_var_process','variable',7,'p_variable','a_parser.py',160),
  ('var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion','var_declaracion',4,'p_var_declaracion','a_parser.py',170),
  ('np_var_prep -> epsilon','np_var_prep',1,'p_np_var_prep','a_parser.py',176),
  ('loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion','loop_var_declaracion',2,'p_loop_var_declaracion','a_parser.py',190),
  ('loop_var_declaracion -> epsilon','loop_var_declaracion',1,'p_loop_var_declaracion','a_parser.py',191),
  ('var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo ;','var_declaracion_mismo_tipo',8,'p_var_declaracion_mismo_tipo','a_parser.py',197),
  ('array_opcional -> [ VAL_INT np_push_const_int ]','array_opcional',4,'p_array_opcional','a_parser.py',202),
  ('array_opcional -> epsilon','array_opcional',1,'p_array_opcional','a_parser.py',203),
  ('loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo','loop_var_decl_mismo_tipo',6,'p_loop_var_decl_mismo_tipo','a_parser.py',215),
  ('loop_var_decl_mismo_tipo -> epsilon','loop_var_decl_mismo_tipo',1,'p_loop_var_decl_mismo_tipo','a_parser.py',216),
  ('np_set_curr_var_type -> epsilon','np_set_curr_var_type',1,'p_np_set_curr_var_type','a_parser.py',222),
  ('np_set_curr_var_name -> epsilon','np_set_curr_var_name',1,'p_np_set_curr_var_name','a_parser.py',231),
  ('np_add_var_to_varstable -> epsilon','np_add_var_to_varstable',1,'p_np_add_var_to_varstable','a_parser.py',239),
  ('func_programa_loop -> func_definicion func_programa_loop','func_programa_loop',2,'p_func_programa_loop','a_parser.py',255),
  ('func_programa_loop -> epsilon','func_programa_loop',1,'p_func_programa_loop','a_parser.py',256),
  ('func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional np_save_curr_func_quad { loop_estatuto } np_kill_func','func_definicion',17,'p_func_definicion','a_parser.py',262),
  ('func_tipo_retorno -> tipo','func_tipo_retorno',1,'p_func_tipo_retorno','a_parser.py',270),
  ('func_tipo_retorno -> VOID','func_tipo_retorno',1,'p_func_tipo_retorno','a_parser.py',271),
  ('np_func_tipo_retorno -> epsilon','np_func_tipo_retorno',1,'p_np_func_tipo_retorno','a_parser.py',277),
  ('np_func_id -> epsilon','np_func_id',1,'p_np_func_id','a_parser.py',285),
  ('np_add_to_func_dir -> epsilon','np_add_to_func_dir',1,'p_np_add_to_func_dir','a_parser.py',293),
  ('np_save_curr_func_quad -> epsilon','np_save_curr_func_quad',1,'p_np_save_curr_func_quad','a_parser.py',312),
  ('np_kill_func -> epsilon','np_kill_func',1,'p_np_kill_func','a_parser.py',320),
  ('np_prep_func_params -> epsilon','np_prep_func_params',1,'p_np_prep_func_params','a_parser.py',327),
  ('func_parametro -> parametro','func_parametro',1,'p_func_parametro','a_parser.py',337),
  ('func_parametro -> epsilon','func_parametro',1,'p_func_parametro','a_parser.py',338),
  ('parametro -> tipo ID np_add_param loop_parametro','parametro',4,'p_parametro','a_parser.py',347),
  ('loop_parametro -> , tipo ID np_add_param loop_parametro','loop_parametro',5,'p_loop_parametro','a_parser.py',354),
  ('loop_parametro -> epsilon','loop_parametro',1,'p_loop_parametro','a_parser.py',355),
  ('np_add_param -> epsilon','np_add_param',1,'p_np_add_param','a_parser.py',360),
  ('tipo -> INT','tipo',1,'p_tipo','a_parser.py',369),
  ('tipo -> FLOAT','tipo',1,'p_tipo','a_parser.py',370),
  ('tipo -> CHAR','tipo',1,'p_tipo','a_parser.py',371),
  ('tipo -> BOOL','tipo',1,'p_tipo','a_parser.py',372),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','a_parser.py',408),
  ('estatuto -> func_llamada ;','estatuto',2,'p_estatuto','a_parser.py',409),
  ('estatuto -> read','estatuto',1,'p_estatuto','a_parser.py',410),
  ('estatuto -> write','estatuto',1,'p_estatuto','a_parser.py',411),
  ('estatuto -> decision','estatuto',1,'p_estatuto','a_parser.py',412),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','a_parser.py',413),
  ('estatuto -> func_return','estatuto',1,'p_estatuto','a_parser.py',414),
  ('asignacion -> variable = hyper_exp ;','asignacion',4,'p_asignacion','a_parser.py',422),
  ('func_llamada -> ID np_fc_1 ( np_push_operator_stack argumento_loop ) np_pop_operator_stack','func_llamada',7,'p_func_llamada','a_parser.py',436),
  ('np_fc_1 -> epsilon','np_fc_1',1,'p_np_fc_1','a_parser.py',463),
  ('argumento_loop -> hyper_exp np_fc_2 argumento_loop_1','argumento_loop',3,'p_argumento_loop','a_parser.py',482),
  ('argumento_loop -> epsilon','argumento_loop',1,'p_argumento_loop','a_parser.py',483),
  ('argumento_loop_1 -> , hyper_exp np_fc_2 argumento_loop_1','argumento_loop_1',4,'p_argumento_loop_1','a_parser.py',487),
  ('argumento_loop_1 -> epsilon','argumento_loop_1',1,'p_argumento_loop_1','a_parser.py',488),
  ('hyper_exp_loop -> hyper_exp np_add_to_input_counter hyper_exp_loop_1','hyper_exp_loop',3,'p_hyper_exp_loop','a_parser.py',494),
  ('hyper_exp_loop_1 -> , hyper_exp np_add_to_input_counter hyper_exp_loop_1','hyper_exp_loop_1',4,'p_hyper_exp_loop_1','a_parser.py',500),
  ('hyper_exp_loop_1 -> epsilon','hyper_exp_loop_1',1,'p_hyper_exp_loop_1','a_parser.py',501),
  ('np_fc_2 -> epsilon','np_fc_2',1,'p_np_fc_2','a_parser.py',506),
  ('func_return -> RETURN ( hyper_exp ) ;','func_return',5,'p_func_return','a_parser.py',532),
  ('read -> READ ( variable_loop ) ;','read',5,'p_read','a_parser.py',544),
  ('variable_loop -> variable np_add_to_input_counter variable_loop_1','variable_loop',3,'p_variable_loop','a_parser.py',558),
  ('variable_loop_1 -> , variable np_add_to_input_counter variable_loop_1','variable_loop_1',4,'p_variable_loop_1','a_parser.py',565),
  ('variable_loop_1 -> epsilon','variable_loop_1',1,'p_variable_loop_1','a_parser.py',566),
  ('np_add_to_input_counter -> epsilon','np_add_to_input_counter',1,'p_np_add_to_input_counter','a_parser.py',575),
  ('write -> WRITE ( hyper_exp_loop ) ;','write',5,'p_write','a_parser.py',584),
  ('decision -> IF ( hyper_exp ) np_decision_1 THEN { loop_estatuto } decision_else','decision',10,'p_decision','a_parser.py',597),
  ('decision_else -> ELSE np_decision_2 { loop_estatuto }','decision_else',5,'p_decision_else','a_parser.py',609),
  ('decision_else -> epsilon','decision_else',1,'p_decision_else','a_parser.py',610),
  ('np_decision_1 -> epsilon','np_decision_1',1,'p_np_decision_1','a_parser.py',615),
  ('np_decision_2 -> epsilon','np_decision_2',1,'p_np_decision_2','a_parser.py',628),
  ('loop_estatuto -> estatuto loop_estatuto','loop_estatuto',2,'p_loop_estatuto','a_parser.py',645),
  ('loop_estatuto -> epsilon','loop_estatuto',1,'p_loop_estatuto','a_parser.py',646),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','a_parser.py',656),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','a_parser.py',657),
  ('condicional -> WHILE np_cond_1 ( hyper_exp ) np_cond_2 DO { loop_estatuto } np_cond_3','condicional',11,'p_condicional','a_parser.py',663),
  ('np_cond_1 -> epsilon','np_cond_1',1,'p_np_cond_1','a_parser.py',668),
  ('np_cond_2 -> epsilon','np_cond_2',1,'p_np_cond_2','a_parser.py',676),
  ('np_cond_3 -> epsilon','np_cond_3',1,'p_np_cond_3','a_parser.py',690),
  ('no_condicional -> FOR variable = hyper_exp np_for_1 TO hyper_exp np_for_2 DO np_for_3 { loop_estatuto }','no_condicional',13,'p_no_condicional','a_parser.py',707),
  ('np_for_1 -> epsilon','np_for_1',1,'p_np_for_1','a_parser.py',734),
  ('np_for_2 -> epsilon','np_for_2',1,'p_np_for_2','a_parser.py',750),
  ('np_for_3 -> epsilon','np_for_3',1,'p_np_for_3','a_parser.py',763),
  ('hyper_exp -> super_exp hyper_exp_1','hyper_exp',2,'p_hyper_exp','a_parser.py',786),
  ('hyper_exp_1 -> & np_push_operator_stack super_exp','hyper_exp_1',3,'p_hyper_exp_1','a_parser.py',812),
  ('hyper_exp_1 -> | np_push_operator_stack super_exp','hyper_exp_1',3,'p_hyper_exp_1','a_parser.py',813),
  ('hyper_exp_1 -> epsilon','hyper_exp_1',1,'p_hyper_exp_1','a_parser.py',814),
  ('super_exp -> exp super_exp_1','super_exp',2,'p_super_exp','a_parser.py',820),
  ('super_exp_1 -> < np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',845),
  ('super_exp_1 -> > np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',846),
  ('super_exp_1 -> EQUAL_TO np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',847),
  ('super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',848),
  ('super_exp_1 -> epsilon','super_exp_1',1,'p_super_exp_1','a_parser.py',849),
  ('exp -> term exp_1','exp',2,'p_exp','a_parser.py',855),
  ('exp_1 -> + np_push_operator_stack term','exp_1',3,'p_exp_1','a_parser.py',880),
  ('exp_1 -> - np_push_operator_stack term','exp_1',3,'p_exp_1','a_parser.py',881),
  ('exp_1 -> epsilon','exp_1',1,'p_exp_1','a_parser.py',882),
  ('term -> factor term_1','term',2,'p_term','a_parser.py',888),
  ('term_1 -> * np_push_operator_stack factor','term_1',3,'p_term_1','a_parser.py',912),
  ('term_1 -> / np_push_operator_stack factor','term_1',3,'p_term_1','a_parser.py',913),
  ('term_1 -> epsilon','term_1',1,'p_term_1','a_parser.py',914),
  ('np_push_operator_stack -> epsilon','np_push_operator_stack',1,'p_np_push_operator_stack','a_parser.py',920),
  ('np_pop_operator_stack -> epsilon','np_pop_operator_stack',1,'p_np_pop_operator_stack','a_parser.py',928),
  ('factor -> constant','factor',1,'p_factor','a_parser.py',949),
  ('factor -> variable','factor',1,'p_factor','a_parser.py',950),
  ('factor -> ( hyper_exp )','factor',3,'p_factor','a_parser.py',951),
  ('factor -> func_llamada','factor',1,'p_factor','a_parser.py',952),
  ('factor -> read','factor',1,'p_factor','a_parser.py',953),
  ('factor -> func_mat','factor',1,'p_factor','a_parser.py',954),
  ('constant -> VAL_INT np_push_const_int','constant',2,'p_constant','a_parser.py',965),
  ('constant -> VAL_FLOAT np_push_const_float','constant',2,'p_constant','a_parser.py',966),
  ('constant -> VAL_CHAR np_push_const_char','constant',2,'p_constant','a_parser.py',967),
  ('np_push_const_int -> epsilon','np_push_const_int',1,'p_np_push_const_int','a_parser.py',973),
  ('np_push_const_float -> epsilon','np_push_const_float',1,'p_np_push_const_float','a_parser.py',981),
  ('np_push_const_char -> epsilon','np_push_const_char',1,'p_np_push_const_char','a_parser.py',989),
  ('np_single_var_process -> epsilon','np_single_var_process',1,'p_np_single_var_process','a_parser.py',997),
  ('np_array_var_process -> epsilon','np_array_var_process',1,'p_np_array_var_process','a_parser.py',1007),
  ('func_mat -> fm_1_param','func_mat',1,'p_func_mat','a_parser.py',1036),
  ('func_mat -> fm_2_param','func_mat',1,'p_func_mat','a_parser.py',1037),
  ('fm_1_param -> MEDIA ( ID ) np_arr_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1042),
  ('fm_1_param -> MEDIANA ( ID ) np_arr_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1043),
  ('fm_1_param -> MODA ( ID ) np_arr_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1044),
  ('fm_1_param -> LEN ( ID ) np_arr_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1045),
  ('fm_1_param -> VARIANZA ( ID ) np_arr_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1046),
  ('fm_1_param -> SEN ( hyper_exp ) np_he_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1047),
  ('fm_1_param -> COS ( hyper_exp ) np_he_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1048),
  ('fm_1_param -> TAN ( hyper_exp ) np_he_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1049),
  ('fm_1_param -> SENH ( hyper_exp ) np_he_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1050),
  ('fm_1_param -> COSH ( hyper_exp ) np_he_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1051),
  ('fm_1_param -> TANH ( hyper_exp ) np_he_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1052),
  ('fm_1_param -> LOG ( hyper_exp ) np_he_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1053),
  ('fm_1_param -> ABS ( hyper_exp ) np_he_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1054),
  ('fm_1_param -> FLOOR ( hyper_exp ) np_he_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1055),
  ('fm_1_param -> CEIL ( hyper_exp ) np_he_input','fm_1_param',5,'p_fm_1_param','a_parser.py',1056),
  ('np_he_input -> epsilon','np_he_input',1,'p_np_he_input','a_parser.py',1061),
  ('np_arr_input -> epsilon','np_arr_input',1,'p_np_arr_input','a_parser.py',1080),
  ('fm_2_param -> RAND ( hyper_exp , hyper_exp ) np_int_input','fm_2_param',7,'p_fm_2_param','a_parser.py',1100),
  ('fm_2_param -> POW ( hyper_exp , hyper_exp ) np_int_input','fm_2_param',7,'p_fm_2_param','a_parser.py',1101),
  ('fm_2_param -> MIN ( hyper_exp , hyper_exp ) np_same_input','fm_2_param',7,'p_fm_2_param','a_parser.py',1102),
  ('fm_2_param -> MAX ( hyper_exp , hyper_exp ) np_same_input','fm_2_param',7,'p_fm_2_param','a_parser.py',1103),
  ('np_int_input -> epsilon','np_int_input',1,'p_np_int_input','a_parser.py',1108),
  ('np_same_input -> epsilon','np_same_input',1,'p_np_same_input','a_parser.py',1122),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','a_parser.py',1135),
]
