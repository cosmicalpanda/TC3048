
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "BOOL CHAR DO ELSE EQUAL_TO FLOAT FOR FUNCTION ID IF INT MAIN NOT_EQUAL_TO PRINT PROGRAM READ RETURN STRING THEN TO VAL_CHAR VAL_FLOAT VAL_INT VAL_STRING VARS VOID WHILE WRITE\n    programa : PROGRAM np_program_start ID np_start_dirfunc ';' var_opcional func_programa_loop main   \n    \n    np_program_start : epsilon\n    \n    np_start_dirfunc : epsilon\n    \n    main : MAIN np_prep_main '(' ')' '{' loop_estatuto '}' np_fin_total\n    \n    np_prep_main : epsilon\n    \n    np_fin_total : epsilon\n    \n    var_opcional : var_declaracion\n                 | epsilon\n    \n    variable : ID np_single_var_process\n             | ID '[' np_push_operator_stack hyper_exp ']' np_pop_operator_stack np_array_var_process\n\n    \n    var_declaracion : VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion\n    \n    np_var_prep : epsilon\n    \n    loop_var_declaracion : var_declaracion_mismo_tipo loop_var_declaracion\n                         | epsilon\n    \n    var_declaracion_mismo_tipo :  tipo np_set_curr_var_type ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo ';'\n    \n    array_opcional : '[' VAL_INT np_push_const_int ']'\n                   | epsilon\n    \n    loop_var_decl_mismo_tipo : ',' ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo\n                  | epsilon\n    \n    np_set_curr_var_type : epsilon\n    \n    np_set_curr_var_name : epsilon\n    \n    np_add_var_to_varstable : epsilon\n    \n    func_programa_loop : func_definicion func_programa_loop\n                       | epsilon\n    \n    func_definicion : FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir '(' np_prep_func_params func_parametro ')' ';' var_opcional np_save_curr_func_quad '{' loop_estatuto '}' np_kill_func\n    \n    func_tipo_retorno : tipo\n                      | VOID\n    \n    np_func_tipo_retorno : epsilon\n    \n    np_func_id : epsilon\n    \n    np_add_to_func_dir : epsilon\n    \n    np_save_curr_func_quad : epsilon\n    \n    np_kill_func : epsilon\n    \n    np_prep_func_params : epsilon\n    \n    func_parametro : parametro\n                   | epsilon\n    \n    parametro : tipo ID np_add_param loop_parametro\n    \n    loop_parametro : ',' tipo ID np_add_param loop_parametro\n                   | epsilon\n    \n    np_add_param : epsilon\n    \n    tipo : INT\n         | FLOAT\n         | CHAR\n         | BOOL\n    \n    estatuto : asignacion \n             | func_llamada ';'\n             | read\n             | write\n             | decision\n             | repeticion\n             | func_return \n    \n    asignacion : variable '=' hyper_exp ';'\n    \n    func_llamada : ID np_fc_1 '(' np_push_operator_stack argumento_loop ')' np_pop_operator_stack\n    \n    np_fc_1 : epsilon\n    \n    argumento_loop : hyper_exp np_fc_2 argumento_loop_1\n                   | epsilon\n    \n    argumento_loop_1 : ',' hyper_exp np_fc_2 argumento_loop_1\n                     | epsilon\n    \n    hyper_exp_loop : hyper_exp np_add_to_input_counter hyper_exp_loop_1\n    \n    hyper_exp_loop_1 : ',' hyper_exp np_add_to_input_counter hyper_exp_loop_1\n                     | epsilon\n    \n    np_fc_2 : epsilon\n    \n    func_return : RETURN '(' hyper_exp ')' ';'\n    \n    read : READ '(' variable_loop ')' ';'\n    \n    variable_loop : variable np_add_to_input_counter variable_loop_1\n    \n    variable_loop_1 : ',' variable np_add_to_input_counter variable_loop_1\n                    | epsilon\n    \n    np_add_to_input_counter : epsilon\n    \n    write : WRITE '(' hyper_exp_loop ')' ';'\n    \n    decision : IF '(' hyper_exp ')' np_decision_1 THEN '{' loop_estatuto '}'  decision_else\n    \n    decision_else : ELSE np_decision_2 '{' loop_estatuto '}' \n                  | epsilon\n    \n    np_decision_1 : epsilon\n    \n    np_decision_2 : epsilon\n    \n    loop_estatuto : estatuto loop_estatuto\n                  | epsilon\n    \n    repeticion : condicional\n               | no_condicional\n    \n    condicional : WHILE np_cond_1 '(' hyper_exp ')' np_cond_2 DO '{' loop_estatuto '}' np_cond_3\n    \n    np_cond_1 : epsilon\n    \n    np_cond_2 : epsilon\n    \n    np_cond_3 : epsilon\n    \n    no_condicional : FOR variable '=' hyper_exp np_for_1 TO hyper_exp np_for_2 DO np_for_3 '{' loop_estatuto '}' \n    \n    np_for_1 : epsilon\n    \n    np_for_2 : epsilon\n    \n    np_for_3 : epsilon\n    \n    hyper_exp : super_exp hyper_exp_1\n    \n    hyper_exp_1 : '&' np_push_operator_stack super_exp\n                | '|' np_push_operator_stack super_exp\n                | epsilon\n    \n    super_exp : exp super_exp_1\n    \n    super_exp_1 : '<' np_push_operator_stack exp\n                | '>' np_push_operator_stack exp\n                | EQUAL_TO np_push_operator_stack exp\n                | NOT_EQUAL_TO np_push_operator_stack exp\n                | epsilon\n    \n    exp : term exp_1\n    \n    exp_1 : '+' np_push_operator_stack term\n          | '-' np_push_operator_stack term\n          | epsilon\n    \n    term : factor term_1\n    \n    term_1 : '*' np_push_operator_stack factor \n           | '/' np_push_operator_stack factor\n           | epsilon\n    \n    np_push_operator_stack : epsilon\n    \n    np_pop_operator_stack : epsilon\n    \n    factor : constant\n           | variable\n           | '(' hyper_exp ')'\n           | func_llamada\n           | read\n    \n    constant : VAL_INT np_push_const_int\n             | VAL_FLOAT np_push_const_float\n             | VAL_CHAR np_push_const_char\n    \n    np_push_const_int : epsilon\n    \n    np_push_const_float : epsilon\n    \n    np_push_const_char : epsilon\n    \n    np_single_var_process : epsilon\n    \n    np_array_var_process : epsilon\n    epsilon : "
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,19,79,102,103,],[0,-1,-119,-4,-6,]),'ID':([2,3,4,22,23,24,25,26,27,28,30,33,34,38,39,49,56,58,60,61,62,63,64,70,71,74,81,82,85,87,88,89,90,98,111,118,119,120,127,128,133,137,139,140,143,144,145,146,149,150,153,154,163,177,178,179,180,181,182,183,184,185,186,192,194,196,198,202,230,238,244,249,255,258,261,267,269,270,277,278,279,282,285,286,],[-119,5,-2,-119,-26,-27,-40,-41,-42,-43,-119,41,-28,43,-20,66,66,-44,-46,-47,-48,-49,-50,-76,-77,94,-45,117,-119,94,117,117,117,135,117,-119,117,-104,117,117,175,-51,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,117,117,117,117,117,117,117,117,117,117,117,-63,94,-68,117,-62,117,117,66,259,66,66,-119,-69,-71,-119,-78,-81,66,66,-82,-70,]),';':([5,6,7,43,47,48,52,54,59,76,77,84,97,99,101,104,105,106,107,108,109,110,112,113,114,115,116,117,135,136,138,141,142,147,148,151,152,155,157,158,159,160,161,162,165,168,171,174,176,187,191,192,209,210,211,212,213,214,215,216,217,218,219,220,223,224,235,236,240,241,250,],[-119,8,-3,-119,-119,-21,-119,-17,81,-119,-22,-9,134,-19,-114,-107,137,-119,-119,-119,-119,-106,-109,-110,-119,-119,-119,-119,-119,-16,-86,-89,-90,-95,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,192,196,202,206,-119,-108,-119,-63,-119,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-119,-119,-105,-119,-52,-10,-118,-18,]),'VARS':([8,206,],[12,12,]),'FUNCTION':([8,9,10,11,14,29,35,36,37,42,134,273,280,281,],[-119,16,-7,-8,16,-119,-119,-11,-14,-13,-15,-119,-25,-32,]),'MAIN':([8,9,10,11,13,14,15,21,29,35,36,37,42,134,273,280,281,],[-119,-119,-7,-8,20,-119,-24,-23,-119,-119,-11,-14,-13,-15,-119,-25,-32,]),'{':([10,11,29,35,36,37,42,44,134,206,227,231,245,247,248,263,268,271,272,275,276,],[-7,-8,-119,-119,-11,-14,-13,49,-15,-119,244,-119,255,258,-31,-119,-119,279,-85,282,-73,]),'INT':([12,16,17,18,29,35,75,95,96,134,233,],[-119,25,25,-12,25,25,-119,25,-33,-15,25,]),'FLOAT':([12,16,17,18,29,35,75,95,96,134,233,],[-119,26,26,-12,26,26,-119,26,-33,-15,26,]),'CHAR':([12,16,17,18,29,35,75,95,96,134,233,],[-119,27,27,-12,27,27,-119,27,-33,-15,27,]),'BOOL':([12,16,17,18,29,35,75,95,96,134,233,],[-119,28,28,-12,28,28,-119,28,-33,-15,28,]),'VOID':([16,],[24,]),'(':([20,31,32,41,45,46,50,51,66,67,68,69,72,73,82,83,85,86,88,89,90,91,92,111,117,118,119,120,127,128,139,140,143,144,145,146,149,150,153,154,162,163,177,178,179,180,181,182,183,184,185,186,198,230,238,],[-119,40,-5,-119,-119,-29,75,-30,-119,87,88,89,90,-119,111,118,-119,-53,111,111,111,127,-79,111,-119,-119,111,-104,111,111,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,-53,111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),')':([40,75,84,94,95,96,101,104,106,107,108,109,110,112,113,114,115,116,117,118,120,121,122,123,124,125,126,129,130,131,132,138,141,142,147,148,151,152,155,156,157,158,159,160,161,162,163,166,167,169,172,175,187,188,189,190,191,192,193,195,197,199,207,208,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,232,234,236,237,239,240,241,242,243,251,252,253,259,260,265,266,274,],[44,-119,-9,-119,-119,-33,-114,-107,-119,-119,-119,-119,-106,-109,-110,-119,-119,-119,-119,-119,-104,165,-119,168,-119,170,171,-117,174,-34,-35,-86,-89,-90,-95,-96,-99,-100,-103,187,-111,-112,-115,-113,-116,-117,-119,-119,-67,-119,203,-119,-108,220,-119,-55,-119,-63,-64,-66,-58,-60,-119,-39,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-119,-119,-61,-119,-105,-119,-119,-36,-38,-52,-54,-57,-10,-118,-119,-119,-119,-65,-59,-119,-119,-119,-56,-37,]),'[':([43,47,48,66,94,117,135,176,],[-119,53,-21,85,85,85,-119,53,]),',':([43,47,48,52,54,76,77,84,94,101,104,106,107,108,109,110,112,113,114,115,116,117,122,124,129,135,136,138,141,142,147,148,151,152,155,157,158,159,160,161,162,166,167,169,175,176,187,189,191,192,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,235,236,240,241,242,243,251,259,260,265,],[-119,-119,-21,-119,-17,98,-22,-9,-119,-114,-107,-119,-119,-119,-119,-106,-109,-110,-119,-119,-119,-119,-119,-119,-117,-119,-16,-86,-89,-90,-95,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,194,-67,198,-119,-119,-108,-119,-119,-63,233,-39,-119,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-119,238,-61,-119,-105,-119,-119,98,-52,-10,-118,194,198,-119,-119,238,233,]),'}':([49,55,56,57,58,60,61,62,63,64,70,71,80,81,137,192,196,202,244,254,255,258,261,262,264,267,269,270,277,278,279,282,283,284,285,286,],[-119,79,-119,-75,-44,-46,-47,-48,-49,-50,-76,-77,-74,-45,-51,-63,-68,-62,-119,261,-119,-119,-119,270,273,-69,-71,-119,-78,-81,-119,-119,285,286,-82,-70,]),'READ':([49,56,58,60,61,62,63,64,70,71,81,82,85,88,89,90,111,118,119,120,127,128,137,139,140,143,144,145,146,149,150,153,154,163,177,178,179,180,181,182,183,184,185,186,192,196,198,202,230,238,244,255,258,261,267,269,270,277,278,279,282,285,286,],[67,67,-44,-46,-47,-48,-49,-50,-76,-77,-45,67,-119,67,67,67,67,-119,67,-104,67,67,-51,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,67,67,67,67,67,67,67,67,67,67,67,-63,-68,67,-62,67,67,67,67,67,-119,-69,-71,-119,-78,-81,67,67,-82,-70,]),'WRITE':([49,56,58,60,61,62,63,64,70,71,81,137,192,196,202,244,255,258,261,267,269,270,277,278,279,282,285,286,],[68,68,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,68,68,68,-119,-69,-71,-119,-78,-81,68,68,-82,-70,]),'IF':([49,56,58,60,61,62,63,64,70,71,81,137,192,196,202,244,255,258,261,267,269,270,277,278,279,282,285,286,],[69,69,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,69,69,69,-119,-69,-71,-119,-78,-81,69,69,-82,-70,]),'RETURN':([49,56,58,60,61,62,63,64,70,71,81,137,192,196,202,244,255,258,261,267,269,270,277,278,279,282,285,286,],[72,72,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,72,72,72,-119,-69,-71,-119,-78,-81,72,72,-82,-70,]),'WHILE':([49,56,58,60,61,62,63,64,70,71,81,137,192,196,202,244,255,258,261,267,269,270,277,278,279,282,285,286,],[73,73,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,73,73,73,-119,-69,-71,-119,-78,-81,73,73,-82,-70,]),'FOR':([49,56,58,60,61,62,63,64,70,71,81,137,192,196,202,244,255,258,261,267,269,270,277,278,279,282,285,286,],[74,74,-44,-46,-47,-48,-49,-50,-76,-77,-45,-51,-63,-68,-62,74,74,74,-119,-69,-71,-119,-78,-81,74,74,-82,-70,]),'VAL_INT':([53,82,85,88,89,90,111,118,119,120,127,128,139,140,143,144,145,146,149,150,153,154,163,177,178,179,180,181,182,183,184,185,186,198,230,238,],[78,114,-119,114,114,114,114,-119,114,-104,114,114,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'=':([65,66,84,86,93,94,129,191,223,224,240,241,],[82,-119,-9,-117,128,-119,-117,-119,-119,-105,-10,-118,]),']':([78,84,100,101,104,106,107,108,109,110,112,113,114,115,116,117,138,141,142,147,148,151,152,155,157,158,159,160,161,162,164,187,191,192,210,211,212,213,214,215,216,217,218,219,220,223,224,236,240,241,],[-119,-9,136,-114,-107,-119,-119,-119,-119,-106,-109,-110,-119,-119,-119,-119,-86,-89,-90,-95,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,191,-108,-119,-63,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-119,-119,-105,-52,-10,-118,]),'VAL_FLOAT':([82,85,88,89,90,111,118,119,120,127,128,139,140,143,144,145,146,149,150,153,154,163,177,178,179,180,181,182,183,184,185,186,198,230,238,],[115,-119,115,115,115,115,-119,115,-104,115,115,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'VAL_CHAR':([82,85,88,89,90,111,118,119,120,127,128,139,140,143,144,145,146,149,150,153,154,163,177,178,179,180,181,182,183,184,185,186,198,230,238,],[116,-119,116,116,116,116,-119,116,-104,116,116,-119,-119,-119,-119,-119,-119,-119,-119,-119,-119,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'*':([84,101,104,109,110,112,113,114,115,116,117,157,158,159,160,161,162,187,191,192,220,223,224,236,240,241,],[-9,-114,-107,153,-106,-109,-110,-119,-119,-119,-119,-111,-112,-115,-113,-116,-117,-108,-119,-63,-119,-119,-105,-52,-10,-118,]),'/':([84,101,104,109,110,112,113,114,115,116,117,157,158,159,160,161,162,187,191,192,220,223,224,236,240,241,],[-9,-114,-107,154,-106,-109,-110,-119,-119,-119,-119,-111,-112,-115,-113,-116,-117,-108,-119,-63,-119,-119,-105,-52,-10,-118,]),'+':([84,101,104,108,109,110,112,113,114,115,116,117,152,155,157,158,159,160,161,162,187,191,192,218,219,220,223,224,236,240,241,],[-9,-114,-107,149,-119,-106,-109,-110,-119,-119,-119,-119,-100,-103,-111,-112,-115,-113,-116,-117,-108,-119,-63,-101,-102,-119,-119,-105,-52,-10,-118,]),'-':([84,101,104,108,109,110,112,113,114,115,116,117,152,155,157,158,159,160,161,162,187,191,192,218,219,220,223,224,236,240,241,],[-9,-114,-107,150,-119,-106,-109,-110,-119,-119,-119,-119,-100,-103,-111,-112,-115,-113,-116,-117,-108,-119,-63,-101,-102,-119,-119,-105,-52,-10,-118,]),'<':([84,101,104,107,108,109,110,112,113,114,115,116,117,148,151,152,155,157,158,159,160,161,162,187,191,192,216,217,218,219,220,223,224,236,240,241,],[-9,-114,-107,143,-119,-119,-106,-109,-110,-119,-119,-119,-119,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,-108,-119,-63,-97,-98,-101,-102,-119,-119,-105,-52,-10,-118,]),'>':([84,101,104,107,108,109,110,112,113,114,115,116,117,148,151,152,155,157,158,159,160,161,162,187,191,192,216,217,218,219,220,223,224,236,240,241,],[-9,-114,-107,144,-119,-119,-106,-109,-110,-119,-119,-119,-119,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,-108,-119,-63,-97,-98,-101,-102,-119,-119,-105,-52,-10,-118,]),'EQUAL_TO':([84,101,104,107,108,109,110,112,113,114,115,116,117,148,151,152,155,157,158,159,160,161,162,187,191,192,216,217,218,219,220,223,224,236,240,241,],[-9,-114,-107,145,-119,-119,-106,-109,-110,-119,-119,-119,-119,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,-108,-119,-63,-97,-98,-101,-102,-119,-119,-105,-52,-10,-118,]),'NOT_EQUAL_TO':([84,101,104,107,108,109,110,112,113,114,115,116,117,148,151,152,155,157,158,159,160,161,162,187,191,192,216,217,218,219,220,223,224,236,240,241,],[-9,-114,-107,146,-119,-119,-106,-109,-110,-119,-119,-119,-119,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,-108,-119,-63,-97,-98,-101,-102,-119,-119,-105,-52,-10,-118,]),'&':([84,101,104,106,107,108,109,110,112,113,114,115,116,117,142,147,148,151,152,155,157,158,159,160,161,162,187,191,192,212,213,214,215,216,217,218,219,220,223,224,236,240,241,],[-9,-114,-107,139,-119,-119,-119,-106,-109,-110,-119,-119,-119,-119,-90,-95,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,-108,-119,-63,-91,-92,-93,-94,-97,-98,-101,-102,-119,-119,-105,-52,-10,-118,]),'|':([84,101,104,106,107,108,109,110,112,113,114,115,116,117,142,147,148,151,152,155,157,158,159,160,161,162,187,191,192,212,213,214,215,216,217,218,219,220,223,224,236,240,241,],[-9,-114,-107,140,-119,-119,-119,-106,-109,-110,-119,-119,-119,-119,-90,-95,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,-108,-119,-63,-91,-92,-93,-94,-97,-98,-101,-102,-119,-119,-105,-52,-10,-118,]),'TO':([84,101,104,106,107,108,109,110,112,113,114,115,116,117,138,141,142,147,148,151,152,155,157,158,159,160,161,162,173,187,191,192,204,205,210,211,212,213,214,215,216,217,218,219,220,223,224,236,240,241,],[-9,-114,-107,-119,-119,-119,-119,-106,-109,-110,-119,-119,-119,-119,-86,-89,-90,-95,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,-119,-108,-119,-63,230,-83,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-119,-119,-105,-52,-10,-118,]),'DO':([84,101,104,106,107,108,109,110,112,113,114,115,116,117,138,141,142,147,148,151,152,155,157,158,159,160,161,162,187,191,192,203,210,211,212,213,214,215,216,217,218,219,220,223,224,228,229,236,240,241,246,256,257,],[-9,-114,-107,-119,-119,-119,-119,-106,-109,-110,-119,-119,-119,-119,-86,-89,-90,-95,-96,-99,-100,-103,-111,-112,-115,-113,-116,-117,-108,-119,-63,-119,-87,-88,-91,-92,-93,-94,-97,-98,-101,-102,-119,-119,-105,245,-80,-52,-10,-118,-119,263,-84,]),'THEN':([170,200,201,],[-119,227,-72,]),'ELSE':([261,],[268,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'np_program_start':([2,],[3,]),'epsilon':([2,5,8,9,12,14,20,22,29,30,35,41,43,45,47,49,52,56,66,73,75,76,78,79,85,94,95,106,107,108,109,114,115,116,117,118,122,124,135,139,140,143,144,145,146,149,150,153,154,163,166,169,170,173,175,176,189,191,203,206,207,209,220,221,223,225,226,231,235,242,243,244,246,251,255,258,259,260,261,263,265,268,270,273,279,282,],[4,7,11,15,18,15,32,34,37,39,37,46,48,51,54,57,77,57,86,92,96,99,101,103,120,129,132,141,147,151,155,101,159,161,162,120,167,167,48,120,120,120,120,120,120,120,120,120,120,190,195,199,201,205,208,54,222,224,229,11,234,77,224,239,241,167,167,248,99,195,199,57,257,222,57,57,208,239,269,272,234,276,278,281,57,57,]),'np_start_dirfunc':([5,],[6,]),'var_opcional':([8,206,],[9,231,]),'var_declaracion':([8,206,],[10,10,]),'func_programa_loop':([9,14,],[13,21,]),'func_definicion':([9,14,],[14,14,]),'np_var_prep':([12,],[17,]),'main':([13,],[19,]),'func_tipo_retorno':([16,],[22,]),'tipo':([16,17,29,35,95,233,],[23,30,30,30,133,249,]),'var_declaracion_mismo_tipo':([17,29,35,],[29,35,35,]),'np_prep_main':([20,],[31,]),'np_func_tipo_retorno':([22,],[33,]),'loop_var_declaracion':([29,35,],[36,42,]),'np_set_curr_var_type':([30,],[38,]),'np_func_id':([41,],[45,]),'np_set_curr_var_name':([43,135,],[47,176,]),'np_add_to_func_dir':([45,],[50,]),'array_opcional':([47,176,],[52,209,]),'loop_estatuto':([49,56,244,255,258,279,282,],[55,80,254,262,264,283,284,]),'estatuto':([49,56,244,255,258,279,282,],[56,56,56,56,56,56,56,]),'asignacion':([49,56,244,255,258,279,282,],[58,58,58,58,58,58,58,]),'func_llamada':([49,56,82,88,89,90,111,119,127,128,163,177,178,179,180,181,182,183,184,185,186,198,230,238,244,255,258,279,282,],[59,59,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,59,59,59,59,59,]),'read':([49,56,82,88,89,90,111,119,127,128,163,177,178,179,180,181,182,183,184,185,186,198,230,238,244,255,258,279,282,],[60,60,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,60,60,60,60,60,]),'write':([49,56,244,255,258,279,282,],[61,61,61,61,61,61,61,]),'decision':([49,56,244,255,258,279,282,],[62,62,62,62,62,62,62,]),'repeticion':([49,56,244,255,258,279,282,],[63,63,63,63,63,63,63,]),'func_return':([49,56,244,255,258,279,282,],[64,64,64,64,64,64,64,]),'variable':([49,56,74,82,87,88,89,90,111,119,127,128,163,177,178,179,180,181,182,183,184,185,186,194,198,230,238,244,255,258,279,282,],[65,65,93,104,122,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,225,104,104,104,65,65,65,65,65,]),'condicional':([49,56,244,255,258,279,282,],[70,70,70,70,70,70,70,]),'no_condicional':([49,56,244,255,258,279,282,],[71,71,71,71,71,71,71,]),'np_add_var_to_varstable':([52,209,],[76,235,]),'np_fc_1':([66,117,],[83,83,]),'np_single_var_process':([66,94,117,],[84,84,84,]),'np_cond_1':([73,],[91,]),'np_prep_func_params':([75,],[95,]),'loop_var_decl_mismo_tipo':([76,235,],[97,250,]),'np_push_const_int':([78,114,],[100,157,]),'np_fin_total':([79,],[102,]),'hyper_exp':([82,88,89,90,111,119,127,128,163,198,230,238,],[105,124,125,126,156,164,172,173,189,226,246,251,]),'super_exp':([82,88,89,90,111,119,127,128,163,177,178,198,230,238,],[106,106,106,106,106,106,106,106,106,210,211,106,106,106,]),'exp':([82,88,89,90,111,119,127,128,163,177,178,179,180,181,182,198,230,238,],[107,107,107,107,107,107,107,107,107,107,107,212,213,214,215,107,107,107,]),'term':([82,88,89,90,111,119,127,128,163,177,178,179,180,181,182,183,184,198,230,238,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,216,217,108,108,108,]),'factor':([82,88,89,90,111,119,127,128,163,177,178,179,180,181,182,183,184,185,186,198,230,238,],[109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,218,219,109,109,109,]),'constant':([82,88,89,90,111,119,127,128,163,177,178,179,180,181,182,183,184,185,186,198,230,238,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'np_push_operator_stack':([85,118,139,140,143,144,145,146,149,150,153,154,],[119,163,177,178,179,180,181,182,183,184,185,186,]),'variable_loop':([87,],[121,]),'hyper_exp_loop':([88,],[123,]),'func_parametro':([95,],[130,]),'parametro':([95,],[131,]),'hyper_exp_1':([106,],[138,]),'super_exp_1':([107,],[142,]),'exp_1':([108,],[148,]),'term_1':([109,],[152,]),'np_push_const_float':([115,],[158,]),'np_push_const_char':([116,],[160,]),'np_add_to_input_counter':([122,124,225,226,],[166,169,242,243,]),'argumento_loop':([163,],[188,]),'variable_loop_1':([166,242,],[193,252,]),'hyper_exp_loop_1':([169,243,],[197,253,]),'np_decision_1':([170,],[200,]),'np_for_1':([173,],[204,]),'np_add_param':([175,259,],[207,265,]),'np_fc_2':([189,251,],[221,260,]),'np_pop_operator_stack':([191,220,],[223,236,]),'np_cond_2':([203,],[228,]),'loop_parametro':([207,265,],[232,274,]),'argumento_loop_1':([221,260,],[237,266,]),'np_array_var_process':([223,],[240,]),'np_save_curr_func_quad':([231,],[247,]),'np_for_2':([246,],[256,]),'decision_else':([261,],[267,]),'np_for_3':([263,],[271,]),'np_decision_2':([268,],[275,]),'np_cond_3':([270,],[277,]),'np_kill_func':([273,],[280,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main','programa',8,'p_programa','a_parser.py',47),
  ('np_program_start -> epsilon','np_program_start',1,'p_np_program_start','a_parser.py',52),
  ('np_start_dirfunc -> epsilon','np_start_dirfunc',1,'p_np_start_dirfunc','a_parser.py',74),
  ('main -> MAIN np_prep_main ( ) { loop_estatuto } np_fin_total','main',8,'p_main','a_parser.py',89),
  ('np_prep_main -> epsilon','np_prep_main',1,'p_np_prep_main','a_parser.py',93),
  ('np_fin_total -> epsilon','np_fin_total',1,'p_np_fin_total','a_parser.py',108),
  ('var_opcional -> var_declaracion','var_opcional',1,'p_var_opcional','a_parser.py',143),
  ('var_opcional -> epsilon','var_opcional',1,'p_var_opcional','a_parser.py',144),
  ('variable -> ID np_single_var_process','variable',2,'p_variable','a_parser.py',153),
  ('variable -> ID [ np_push_operator_stack hyper_exp ] np_pop_operator_stack np_array_var_process','variable',7,'p_variable','a_parser.py',154),
  ('var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion','var_declaracion',4,'p_var_declaracion','a_parser.py',164),
  ('np_var_prep -> epsilon','np_var_prep',1,'p_np_var_prep','a_parser.py',170),
  ('loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion','loop_var_declaracion',2,'p_loop_var_declaracion','a_parser.py',184),
  ('loop_var_declaracion -> epsilon','loop_var_declaracion',1,'p_loop_var_declaracion','a_parser.py',185),
  ('var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo ;','var_declaracion_mismo_tipo',8,'p_var_declaracion_mismo_tipo','a_parser.py',191),
  ('array_opcional -> [ VAL_INT np_push_const_int ]','array_opcional',4,'p_array_opcional','a_parser.py',196),
  ('array_opcional -> epsilon','array_opcional',1,'p_array_opcional','a_parser.py',197),
  ('loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name array_opcional np_add_var_to_varstable loop_var_decl_mismo_tipo','loop_var_decl_mismo_tipo',6,'p_loop_var_decl_mismo_tipo','a_parser.py',209),
  ('loop_var_decl_mismo_tipo -> epsilon','loop_var_decl_mismo_tipo',1,'p_loop_var_decl_mismo_tipo','a_parser.py',210),
  ('np_set_curr_var_type -> epsilon','np_set_curr_var_type',1,'p_np_set_curr_var_type','a_parser.py',216),
  ('np_set_curr_var_name -> epsilon','np_set_curr_var_name',1,'p_np_set_curr_var_name','a_parser.py',225),
  ('np_add_var_to_varstable -> epsilon','np_add_var_to_varstable',1,'p_np_add_var_to_varstable','a_parser.py',233),
  ('func_programa_loop -> func_definicion func_programa_loop','func_programa_loop',2,'p_func_programa_loop','a_parser.py',249),
  ('func_programa_loop -> epsilon','func_programa_loop',1,'p_func_programa_loop','a_parser.py',250),
  ('func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional np_save_curr_func_quad { loop_estatuto } np_kill_func','func_definicion',17,'p_func_definicion','a_parser.py',256),
  ('func_tipo_retorno -> tipo','func_tipo_retorno',1,'p_func_tipo_retorno','a_parser.py',264),
  ('func_tipo_retorno -> VOID','func_tipo_retorno',1,'p_func_tipo_retorno','a_parser.py',265),
  ('np_func_tipo_retorno -> epsilon','np_func_tipo_retorno',1,'p_np_func_tipo_retorno','a_parser.py',271),
  ('np_func_id -> epsilon','np_func_id',1,'p_np_func_id','a_parser.py',279),
  ('np_add_to_func_dir -> epsilon','np_add_to_func_dir',1,'p_np_add_to_func_dir','a_parser.py',287),
  ('np_save_curr_func_quad -> epsilon','np_save_curr_func_quad',1,'p_np_save_curr_func_quad','a_parser.py',306),
  ('np_kill_func -> epsilon','np_kill_func',1,'p_np_kill_func','a_parser.py',314),
  ('np_prep_func_params -> epsilon','np_prep_func_params',1,'p_np_prep_func_params','a_parser.py',320),
  ('func_parametro -> parametro','func_parametro',1,'p_func_parametro','a_parser.py',330),
  ('func_parametro -> epsilon','func_parametro',1,'p_func_parametro','a_parser.py',331),
  ('parametro -> tipo ID np_add_param loop_parametro','parametro',4,'p_parametro','a_parser.py',340),
  ('loop_parametro -> , tipo ID np_add_param loop_parametro','loop_parametro',5,'p_loop_parametro','a_parser.py',347),
  ('loop_parametro -> epsilon','loop_parametro',1,'p_loop_parametro','a_parser.py',348),
  ('np_add_param -> epsilon','np_add_param',1,'p_np_add_param','a_parser.py',353),
  ('tipo -> INT','tipo',1,'p_tipo','a_parser.py',362),
  ('tipo -> FLOAT','tipo',1,'p_tipo','a_parser.py',363),
  ('tipo -> CHAR','tipo',1,'p_tipo','a_parser.py',364),
  ('tipo -> BOOL','tipo',1,'p_tipo','a_parser.py',365),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','a_parser.py',401),
  ('estatuto -> func_llamada ;','estatuto',2,'p_estatuto','a_parser.py',402),
  ('estatuto -> read','estatuto',1,'p_estatuto','a_parser.py',403),
  ('estatuto -> write','estatuto',1,'p_estatuto','a_parser.py',404),
  ('estatuto -> decision','estatuto',1,'p_estatuto','a_parser.py',405),
  ('estatuto -> repeticion','estatuto',1,'p_estatuto','a_parser.py',406),
  ('estatuto -> func_return','estatuto',1,'p_estatuto','a_parser.py',407),
  ('asignacion -> variable = hyper_exp ;','asignacion',4,'p_asignacion','a_parser.py',415),
  ('func_llamada -> ID np_fc_1 ( np_push_operator_stack argumento_loop ) np_pop_operator_stack','func_llamada',7,'p_func_llamada','a_parser.py',429),
  ('np_fc_1 -> epsilon','np_fc_1',1,'p_np_fc_1','a_parser.py',456),
  ('argumento_loop -> hyper_exp np_fc_2 argumento_loop_1','argumento_loop',3,'p_argumento_loop','a_parser.py',475),
  ('argumento_loop -> epsilon','argumento_loop',1,'p_argumento_loop','a_parser.py',476),
  ('argumento_loop_1 -> , hyper_exp np_fc_2 argumento_loop_1','argumento_loop_1',4,'p_argumento_loop_1','a_parser.py',480),
  ('argumento_loop_1 -> epsilon','argumento_loop_1',1,'p_argumento_loop_1','a_parser.py',481),
  ('hyper_exp_loop -> hyper_exp np_add_to_input_counter hyper_exp_loop_1','hyper_exp_loop',3,'p_hyper_exp_loop','a_parser.py',487),
  ('hyper_exp_loop_1 -> , hyper_exp np_add_to_input_counter hyper_exp_loop_1','hyper_exp_loop_1',4,'p_hyper_exp_loop_1','a_parser.py',493),
  ('hyper_exp_loop_1 -> epsilon','hyper_exp_loop_1',1,'p_hyper_exp_loop_1','a_parser.py',494),
  ('np_fc_2 -> epsilon','np_fc_2',1,'p_np_fc_2','a_parser.py',499),
  ('func_return -> RETURN ( hyper_exp ) ;','func_return',5,'p_func_return','a_parser.py',525),
  ('read -> READ ( variable_loop ) ;','read',5,'p_read','a_parser.py',537),
  ('variable_loop -> variable np_add_to_input_counter variable_loop_1','variable_loop',3,'p_variable_loop','a_parser.py',551),
  ('variable_loop_1 -> , variable np_add_to_input_counter variable_loop_1','variable_loop_1',4,'p_variable_loop_1','a_parser.py',558),
  ('variable_loop_1 -> epsilon','variable_loop_1',1,'p_variable_loop_1','a_parser.py',559),
  ('np_add_to_input_counter -> epsilon','np_add_to_input_counter',1,'p_np_add_to_input_counter','a_parser.py',568),
  ('write -> WRITE ( hyper_exp_loop ) ;','write',5,'p_write','a_parser.py',577),
  ('decision -> IF ( hyper_exp ) np_decision_1 THEN { loop_estatuto } decision_else','decision',10,'p_decision','a_parser.py',590),
  ('decision_else -> ELSE np_decision_2 { loop_estatuto }','decision_else',5,'p_decision_else','a_parser.py',600),
  ('decision_else -> epsilon','decision_else',1,'p_decision_else','a_parser.py',601),
  ('np_decision_1 -> epsilon','np_decision_1',1,'p_np_decision_1','a_parser.py',606),
  ('np_decision_2 -> epsilon','np_decision_2',1,'p_np_decision_2','a_parser.py',619),
  ('loop_estatuto -> estatuto loop_estatuto','loop_estatuto',2,'p_loop_estatuto','a_parser.py',636),
  ('loop_estatuto -> epsilon','loop_estatuto',1,'p_loop_estatuto','a_parser.py',637),
  ('repeticion -> condicional','repeticion',1,'p_repeticion','a_parser.py',647),
  ('repeticion -> no_condicional','repeticion',1,'p_repeticion','a_parser.py',648),
  ('condicional -> WHILE np_cond_1 ( hyper_exp ) np_cond_2 DO { loop_estatuto } np_cond_3','condicional',11,'p_condicional','a_parser.py',654),
  ('np_cond_1 -> epsilon','np_cond_1',1,'p_np_cond_1','a_parser.py',659),
  ('np_cond_2 -> epsilon','np_cond_2',1,'p_np_cond_2','a_parser.py',667),
  ('np_cond_3 -> epsilon','np_cond_3',1,'p_np_cond_3','a_parser.py',681),
  ('no_condicional -> FOR variable = hyper_exp np_for_1 TO hyper_exp np_for_2 DO np_for_3 { loop_estatuto }','no_condicional',13,'p_no_condicional','a_parser.py',698),
  ('np_for_1 -> epsilon','np_for_1',1,'p_np_for_1','a_parser.py',718),
  ('np_for_2 -> epsilon','np_for_2',1,'p_np_for_2','a_parser.py',733),
  ('np_for_3 -> epsilon','np_for_3',1,'p_np_for_3','a_parser.py',746),
  ('hyper_exp -> super_exp hyper_exp_1','hyper_exp',2,'p_hyper_exp','a_parser.py',769),
  ('hyper_exp_1 -> & np_push_operator_stack super_exp','hyper_exp_1',3,'p_hyper_exp_1','a_parser.py',795),
  ('hyper_exp_1 -> | np_push_operator_stack super_exp','hyper_exp_1',3,'p_hyper_exp_1','a_parser.py',796),
  ('hyper_exp_1 -> epsilon','hyper_exp_1',1,'p_hyper_exp_1','a_parser.py',797),
  ('super_exp -> exp super_exp_1','super_exp',2,'p_super_exp','a_parser.py',803),
  ('super_exp_1 -> < np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',828),
  ('super_exp_1 -> > np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',829),
  ('super_exp_1 -> EQUAL_TO np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',830),
  ('super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp','super_exp_1',3,'p_super_exp_1','a_parser.py',831),
  ('super_exp_1 -> epsilon','super_exp_1',1,'p_super_exp_1','a_parser.py',832),
  ('exp -> term exp_1','exp',2,'p_exp','a_parser.py',838),
  ('exp_1 -> + np_push_operator_stack term','exp_1',3,'p_exp_1','a_parser.py',863),
  ('exp_1 -> - np_push_operator_stack term','exp_1',3,'p_exp_1','a_parser.py',864),
  ('exp_1 -> epsilon','exp_1',1,'p_exp_1','a_parser.py',865),
  ('term -> factor term_1','term',2,'p_term','a_parser.py',871),
  ('term_1 -> * np_push_operator_stack factor','term_1',3,'p_term_1','a_parser.py',895),
  ('term_1 -> / np_push_operator_stack factor','term_1',3,'p_term_1','a_parser.py',896),
  ('term_1 -> epsilon','term_1',1,'p_term_1','a_parser.py',897),
  ('np_push_operator_stack -> epsilon','np_push_operator_stack',1,'p_np_push_operator_stack','a_parser.py',903),
  ('np_pop_operator_stack -> epsilon','np_pop_operator_stack',1,'p_np_pop_operator_stack','a_parser.py',911),
  ('factor -> constant','factor',1,'p_factor','a_parser.py',932),
  ('factor -> variable','factor',1,'p_factor','a_parser.py',933),
  ('factor -> ( hyper_exp )','factor',3,'p_factor','a_parser.py',934),
  ('factor -> func_llamada','factor',1,'p_factor','a_parser.py',935),
  ('factor -> read','factor',1,'p_factor','a_parser.py',936),
  ('constant -> VAL_INT np_push_const_int','constant',2,'p_constant','a_parser.py',947),
  ('constant -> VAL_FLOAT np_push_const_float','constant',2,'p_constant','a_parser.py',948),
  ('constant -> VAL_CHAR np_push_const_char','constant',2,'p_constant','a_parser.py',949),
  ('np_push_const_int -> epsilon','np_push_const_int',1,'p_np_push_const_int','a_parser.py',955),
  ('np_push_const_float -> epsilon','np_push_const_float',1,'p_np_push_const_float','a_parser.py',963),
  ('np_push_const_char -> epsilon','np_push_const_char',1,'p_np_push_const_char','a_parser.py',971),
  ('np_single_var_process -> epsilon','np_single_var_process',1,'p_np_single_var_process','a_parser.py',979),
  ('np_array_var_process -> epsilon','np_array_var_process',1,'p_np_array_var_process','a_parser.py',989),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','a_parser.py',1012),
]
