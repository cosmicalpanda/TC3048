Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PRINT
    STRING

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main
Rule 2     np_program_start -> epsilon
Rule 3     np_start_dirfunc -> epsilon
Rule 4     main -> MAIN ( ) { loop_estatuto } np_fin_total
Rule 5     np_fin_total -> epsilon
Rule 6     var_opcional -> var_declaracion
Rule 7     var_opcional -> epsilon
Rule 8     variable -> ID variable_1
Rule 9     variable_1 -> [ hyper_exp ]
Rule 10    variable_1 -> epsilon
Rule 11    var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion
Rule 12    np_var_prep -> epsilon
Rule 13    loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion
Rule 14    loop_var_declaracion -> epsilon
Rule 15    var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
Rule 16    loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo
Rule 17    loop_var_decl_mismo_tipo -> epsilon
Rule 18    np_set_curr_var_type -> epsilon
Rule 19    np_set_curr_var_name -> epsilon
Rule 20    np_add_var_to_varstable -> epsilon
Rule 21    func_programa_loop -> func_definicion func_programa_loop
Rule 22    func_programa_loop -> epsilon
Rule 23    func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
Rule 24    func_tipo_retorno -> tipo
Rule 25    func_tipo_retorno -> VOID
Rule 26    np_func_tipo_retorno -> epsilon
Rule 27    np_func_id -> epsilon
Rule 28    np_add_to_func_dir -> epsilon
Rule 29    np_kill_func -> epsilon
Rule 30    np_prep_func_params -> epsilon
Rule 31    func_parametro -> parametro
Rule 32    func_parametro -> epsilon
Rule 33    parametro -> tipo ID loop_parametro
Rule 34    loop_parametro -> , tipo ID loop_parametro
Rule 35    loop_parametro -> epsilon
Rule 36    tipo -> INT
Rule 37    tipo -> FLOAT
Rule 38    tipo -> CHAR
Rule 39    estatuto -> asignacion
Rule 40    estatuto -> func_llamada ;
Rule 41    estatuto -> read
Rule 42    estatuto -> write
Rule 43    estatuto -> decision
Rule 44    estatuto -> repeticion
Rule 45    estatuto -> func_return
Rule 46    asignacion -> variable = hyper_exp ;
Rule 47    func_llamada -> ID ( )
Rule 48    func_llamada -> ID ( hyper_exp_loop )
Rule 49    hyper_exp_loop -> hyper_exp hyper_exp_loop_1
Rule 50    hyper_exp_loop_1 -> , hyper_exp hyper_exp_loop_1
Rule 51    hyper_exp_loop_1 -> epsilon
Rule 52    func_return -> RETURN ( hyper_exp ) ;
Rule 53    read -> READ ( variable_loop ) ;
Rule 54    variable_loop -> variable variable_loop_1
Rule 55    variable_loop_1 -> , variable variable_loop_1
Rule 56    variable_loop_1 -> epsilon
Rule 57    write -> WRITE ( hyper_exp_loop ) ;
Rule 58    decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1
Rule 59    decision_1 -> ELSE { loop_estatuto }
Rule 60    decision_1 -> epsilon
Rule 61    loop_estatuto -> estatuto loop_estatuto
Rule 62    loop_estatuto -> epsilon
Rule 63    repeticion -> condicional
Rule 64    repeticion -> no_condicional
Rule 65    condicional -> WHILE ( hyper_exp ) DO { loop_estatuto }
Rule 66    no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }
Rule 67    hyper_exp -> super_exp hyper_exp_1
Rule 68    hyper_exp_1 -> & super_exp
Rule 69    hyper_exp_1 -> | super_exp
Rule 70    hyper_exp_1 -> epsilon
Rule 71    super_exp -> exp super_exp_1
Rule 72    super_exp_1 -> < exp
Rule 73    super_exp_1 -> > exp
Rule 74    super_exp_1 -> EQUAL_TO exp
Rule 75    super_exp_1 -> NOT_EQUAL_TO exp
Rule 76    super_exp_1 -> epsilon
Rule 77    exp -> term exp_1
Rule 78    exp_1 -> + term
Rule 79    exp_1 -> - term
Rule 80    exp_1 -> epsilon
Rule 81    term -> factor term_1
Rule 82    term_1 -> * factor
Rule 83    term_1 -> / factor
Rule 84    term_1 -> epsilon
Rule 85    factor -> VAL_INT np_push_const
Rule 86    factor -> VAL_FLOAT
Rule 87    factor -> VAL_STRING
Rule 88    factor -> VAL_CHAR
Rule 89    factor -> variable
Rule 90    factor -> ( hyper_exp )
Rule 91    np_push_const -> epsilon
Rule 92    epsilon -> <empty>

Terminals, with rules where they appear

&                    : 68
(                    : 4 23 47 48 52 53 57 58 65 90
)                    : 4 23 47 48 52 53 57 58 65 90
*                    : 82
+                    : 78
,                    : 16 34 50 55
-                    : 79
/                    : 83
;                    : 1 15 23 40 46 52 53 57
<                    : 72
=                    : 46 66
>                    : 73
CHAR                 : 38
DO                   : 65 66
ELSE                 : 59
EQUAL_TO             : 74
FLOAT                : 37
FOR                  : 66
FUNCTION             : 23
ID                   : 1 8 15 16 23 33 34 47 48
IF                   : 58
INT                  : 36
MAIN                 : 4
NOT_EQUAL_TO         : 75
PRINT                : 
PROGRAM              : 1
READ                 : 53
RETURN               : 52
STRING               : 
THEN                 : 58
TO                   : 66
VAL_CHAR             : 88
VAL_FLOAT            : 86
VAL_INT              : 85
VAL_STRING           : 87
VARS                 : 11
VOID                 : 25
WHILE                : 65
WRITE                : 57
[                    : 9
]                    : 9
error                : 
{                    : 4 23 58 59 65 66
|                    : 69
}                    : 4 23 58 59 65 66

Nonterminals, with rules where they appear

asignacion           : 39
condicional          : 63
decision             : 43
decision_1           : 58
epsilon              : 2 3 5 7 10 12 14 17 18 19 20 22 26 27 28 29 30 32 35 51 56 60 62 70 76 80 84 91
estatuto             : 61
exp                  : 71 72 73 74 75
exp_1                : 77
factor               : 81 82 83
func_definicion      : 21
func_llamada         : 40
func_parametro       : 23
func_programa_loop   : 1 21
func_return          : 45
func_tipo_retorno    : 23
hyper_exp            : 9 46 49 50 52 58 65 66 66 90
hyper_exp_1          : 67
hyper_exp_loop       : 48 57
hyper_exp_loop_1     : 49 50
loop_estatuto        : 4 23 58 59 61 65 66
loop_parametro       : 33 34
loop_var_decl_mismo_tipo : 15 16
loop_var_declaracion : 11 13
main                 : 1
no_condicional       : 64
np_add_to_func_dir   : 23
np_add_var_to_varstable : 15 16
np_fin_total         : 4
np_func_id           : 23
np_func_tipo_retorno : 23
np_kill_func         : 23
np_prep_func_params  : 23
np_program_start     : 1
np_push_const        : 85
np_set_curr_var_name : 15 16
np_set_curr_var_type : 15
np_start_dirfunc     : 1
np_var_prep          : 11
parametro            : 31
programa             : 0
read                 : 41
repeticion           : 44
super_exp            : 67 68 69
super_exp_1          : 71
term                 : 77 78 79
term_1               : 81
tipo                 : 15 24 33 34
var_declaracion      : 6
var_declaracion_mismo_tipo : 11 13
var_opcional         : 1 23
variable             : 46 54 55 66 89
variable_1           : 8
variable_loop        : 53
variable_loop_1      : 54 55
write                : 42

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main
    (2) np_program_start -> . epsilon
    (92) epsilon -> .

    ID              reduce using rule 92 (epsilon -> .)

    np_program_start               shift and go to state 3
    epsilon                        shift and go to state 4

state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM np_program_start . ID np_start_dirfunc ; var_opcional func_programa_loop main

    ID              shift and go to state 5


state 4

    (2) np_program_start -> epsilon .

    ID              reduce using rule 2 (np_program_start -> epsilon .)


state 5

    (1) programa -> PROGRAM np_program_start ID . np_start_dirfunc ; var_opcional func_programa_loop main
    (3) np_start_dirfunc -> . epsilon
    (92) epsilon -> .

    ;               reduce using rule 92 (epsilon -> .)

    np_start_dirfunc               shift and go to state 6
    epsilon                        shift and go to state 7

state 6

    (1) programa -> PROGRAM np_program_start ID np_start_dirfunc . ; var_opcional func_programa_loop main

    ;               shift and go to state 8


state 7

    (3) np_start_dirfunc -> epsilon .

    ;               reduce using rule 3 (np_start_dirfunc -> epsilon .)


state 8

    (1) programa -> PROGRAM np_program_start ID np_start_dirfunc ; . var_opcional func_programa_loop main
    (6) var_opcional -> . var_declaracion
    (7) var_opcional -> . epsilon
    (11) var_declaracion -> . VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion
    (92) epsilon -> .

    VARS            shift and go to state 9
    FUNCTION        reduce using rule 92 (epsilon -> .)
    MAIN            reduce using rule 92 (epsilon -> .)

    var_declaracion                shift and go to state 10
    epsilon                        shift and go to state 11
    var_opcional                   shift and go to state 12

state 9

    (11) var_declaracion -> VARS . np_var_prep var_declaracion_mismo_tipo loop_var_declaracion
    (12) np_var_prep -> . epsilon
    (92) epsilon -> .

    INT             reduce using rule 92 (epsilon -> .)
    FLOAT           reduce using rule 92 (epsilon -> .)
    CHAR            reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 13
    np_var_prep                    shift and go to state 14

state 10

    (6) var_opcional -> var_declaracion .

    FUNCTION        reduce using rule 6 (var_opcional -> var_declaracion .)
    MAIN            reduce using rule 6 (var_opcional -> var_declaracion .)
    {               reduce using rule 6 (var_opcional -> var_declaracion .)


state 11

    (7) var_opcional -> epsilon .

    FUNCTION        reduce using rule 7 (var_opcional -> epsilon .)
    MAIN            reduce using rule 7 (var_opcional -> epsilon .)
    {               reduce using rule 7 (var_opcional -> epsilon .)


state 12

    (1) programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional . func_programa_loop main
    (21) func_programa_loop -> . func_definicion func_programa_loop
    (22) func_programa_loop -> . epsilon
    (23) func_definicion -> . FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (92) epsilon -> .

    FUNCTION        shift and go to state 16
    MAIN            reduce using rule 92 (epsilon -> .)

    func_definicion                shift and go to state 15
    epsilon                        shift and go to state 17
    func_programa_loop             shift and go to state 18

state 13

    (12) np_var_prep -> epsilon .

    INT             reduce using rule 12 (np_var_prep -> epsilon .)
    FLOAT           reduce using rule 12 (np_var_prep -> epsilon .)
    CHAR            reduce using rule 12 (np_var_prep -> epsilon .)


state 14

    (11) var_declaracion -> VARS np_var_prep . var_declaracion_mismo_tipo loop_var_declaracion
    (15) var_declaracion_mismo_tipo -> . tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (36) tipo -> . INT
    (37) tipo -> . FLOAT
    (38) tipo -> . CHAR

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    tipo                           shift and go to state 19
    var_declaracion_mismo_tipo     shift and go to state 23

state 15

    (21) func_programa_loop -> func_definicion . func_programa_loop
    (21) func_programa_loop -> . func_definicion func_programa_loop
    (22) func_programa_loop -> . epsilon
    (23) func_definicion -> . FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (92) epsilon -> .

    FUNCTION        shift and go to state 16
    MAIN            reduce using rule 92 (epsilon -> .)

    func_definicion                shift and go to state 15
    epsilon                        shift and go to state 17
    func_programa_loop             shift and go to state 24

state 16

    (23) func_definicion -> FUNCTION . func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (24) func_tipo_retorno -> . tipo
    (25) func_tipo_retorno -> . VOID
    (36) tipo -> . INT
    (37) tipo -> . FLOAT
    (38) tipo -> . CHAR

    VOID            shift and go to state 27
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    func_tipo_retorno              shift and go to state 25
    tipo                           shift and go to state 26

state 17

    (22) func_programa_loop -> epsilon .

    MAIN            reduce using rule 22 (func_programa_loop -> epsilon .)


state 18

    (1) programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop . main
    (4) main -> . MAIN ( ) { loop_estatuto } np_fin_total

    MAIN            shift and go to state 28

    main                           shift and go to state 29

state 19

    (15) var_declaracion_mismo_tipo -> tipo . np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (18) np_set_curr_var_type -> . epsilon
    (92) epsilon -> .

    ID              reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 30
    np_set_curr_var_type           shift and go to state 31

state 20

    (36) tipo -> INT .

    ID              reduce using rule 36 (tipo -> INT .)


state 21

    (37) tipo -> FLOAT .

    ID              reduce using rule 37 (tipo -> FLOAT .)


state 22

    (38) tipo -> CHAR .

    ID              reduce using rule 38 (tipo -> CHAR .)


state 23

    (11) var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo . loop_var_declaracion
    (13) loop_var_declaracion -> . var_declaracion_mismo_tipo loop_var_declaracion
    (14) loop_var_declaracion -> . epsilon
    (15) var_declaracion_mismo_tipo -> . tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (92) epsilon -> .
    (36) tipo -> . INT
    (37) tipo -> . FLOAT
    (38) tipo -> . CHAR

    FUNCTION        reduce using rule 92 (epsilon -> .)
    MAIN            reduce using rule 92 (epsilon -> .)
    {               reduce using rule 92 (epsilon -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    tipo                           shift and go to state 19
    epsilon                        shift and go to state 32
    var_declaracion_mismo_tipo     shift and go to state 33
    loop_var_declaracion           shift and go to state 34

state 24

    (21) func_programa_loop -> func_definicion func_programa_loop .

    MAIN            reduce using rule 21 (func_programa_loop -> func_definicion func_programa_loop .)


state 25

    (23) func_definicion -> FUNCTION func_tipo_retorno . np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (26) np_func_tipo_retorno -> . epsilon
    (92) epsilon -> .

    ID              reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 36
    np_func_tipo_retorno           shift and go to state 35

state 26

    (24) func_tipo_retorno -> tipo .

    ID              reduce using rule 24 (func_tipo_retorno -> tipo .)


state 27

    (25) func_tipo_retorno -> VOID .

    ID              reduce using rule 25 (func_tipo_retorno -> VOID .)


state 28

    (4) main -> MAIN . ( ) { loop_estatuto } np_fin_total

    (               shift and go to state 37


state 29

    (1) programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main .

    $end            reduce using rule 1 (programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main .)


state 30

    (18) np_set_curr_var_type -> epsilon .

    ID              reduce using rule 18 (np_set_curr_var_type -> epsilon .)


state 31

    (15) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type . ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;

    ID              shift and go to state 38


state 32

    (14) loop_var_declaracion -> epsilon .

    FUNCTION        reduce using rule 14 (loop_var_declaracion -> epsilon .)
    MAIN            reduce using rule 14 (loop_var_declaracion -> epsilon .)
    {               reduce using rule 14 (loop_var_declaracion -> epsilon .)


state 33

    (13) loop_var_declaracion -> var_declaracion_mismo_tipo . loop_var_declaracion
    (13) loop_var_declaracion -> . var_declaracion_mismo_tipo loop_var_declaracion
    (14) loop_var_declaracion -> . epsilon
    (15) var_declaracion_mismo_tipo -> . tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (92) epsilon -> .
    (36) tipo -> . INT
    (37) tipo -> . FLOAT
    (38) tipo -> . CHAR

    FUNCTION        reduce using rule 92 (epsilon -> .)
    MAIN            reduce using rule 92 (epsilon -> .)
    {               reduce using rule 92 (epsilon -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    tipo                           shift and go to state 19
    epsilon                        shift and go to state 32
    var_declaracion_mismo_tipo     shift and go to state 33
    loop_var_declaracion           shift and go to state 39

state 34

    (11) var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion .

    FUNCTION        reduce using rule 11 (var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion .)
    MAIN            reduce using rule 11 (var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion .)
    {               reduce using rule 11 (var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion .)


state 35

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno . ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func

    ID              shift and go to state 40


state 36

    (26) np_func_tipo_retorno -> epsilon .

    ID              reduce using rule 26 (np_func_tipo_retorno -> epsilon .)


state 37

    (4) main -> MAIN ( . ) { loop_estatuto } np_fin_total

    )               shift and go to state 41


state 38

    (15) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID . np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (19) np_set_curr_var_name -> . epsilon
    (92) epsilon -> .

    ,               reduce using rule 92 (epsilon -> .)
    ;               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 42
    np_set_curr_var_name           shift and go to state 43

state 39

    (13) loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion .

    FUNCTION        reduce using rule 13 (loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion .)
    MAIN            reduce using rule 13 (loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion .)
    {               reduce using rule 13 (loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion .)


state 40

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID . np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (27) np_func_id -> . epsilon
    (92) epsilon -> .

    (               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 44
    np_func_id                     shift and go to state 45

state 41

    (4) main -> MAIN ( ) . { loop_estatuto } np_fin_total

    {               shift and go to state 46


state 42

    (19) np_set_curr_var_name -> epsilon .

    ,               reduce using rule 19 (np_set_curr_var_name -> epsilon .)
    ;               reduce using rule 19 (np_set_curr_var_name -> epsilon .)


state 43

    (15) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name . np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (20) np_add_var_to_varstable -> . epsilon
    (92) epsilon -> .

    ,               reduce using rule 92 (epsilon -> .)
    ;               reduce using rule 92 (epsilon -> .)

    np_add_var_to_varstable        shift and go to state 47
    epsilon                        shift and go to state 48

state 44

    (27) np_func_id -> epsilon .

    (               reduce using rule 27 (np_func_id -> epsilon .)


state 45

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id . np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (28) np_add_to_func_dir -> . epsilon
    (92) epsilon -> .

    (               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 49
    np_add_to_func_dir             shift and go to state 50

state 46

    (4) main -> MAIN ( ) { . loop_estatuto } np_fin_total
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (92) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID variable_1
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 92 (epsilon -> .)
    ID              shift and go to state 58
    READ            shift and go to state 52
    WRITE           shift and go to state 65
    IF              shift and go to state 67
    RETURN          shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 61

    asignacion                     shift and go to state 68
    read                           shift and go to state 62
    epsilon                        shift and go to state 63
    decision                       shift and go to state 56
    estatuto                       shift and go to state 57
    write                          shift and go to state 59
    func_return                    shift and go to state 69
    variable                       shift and go to state 66
    func_llamada                   shift and go to state 54
    repeticion                     shift and go to state 70
    loop_estatuto                  shift and go to state 55
    condicional                    shift and go to state 64
    no_condicional                 shift and go to state 60

state 47

    (15) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable . loop_var_decl_mismo_tipo ;
    (16) loop_var_decl_mismo_tipo -> . , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo
    (17) loop_var_decl_mismo_tipo -> . epsilon
    (92) epsilon -> .

    ,               shift and go to state 72
    ;               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 71
    loop_var_decl_mismo_tipo       shift and go to state 73

state 48

    (20) np_add_var_to_varstable -> epsilon .

    ,               reduce using rule 20 (np_add_var_to_varstable -> epsilon .)
    ;               reduce using rule 20 (np_add_var_to_varstable -> epsilon .)


state 49

    (28) np_add_to_func_dir -> epsilon .

    (               reduce using rule 28 (np_add_to_func_dir -> epsilon .)


state 50

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir . ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func

    (               shift and go to state 74


state 51

    (52) func_return -> RETURN . ( hyper_exp ) ;

    (               shift and go to state 75


state 52

    (53) read -> READ . ( variable_loop ) ;

    (               shift and go to state 76


state 53

    (65) condicional -> WHILE . ( hyper_exp ) DO { loop_estatuto }

    (               shift and go to state 77


state 54

    (40) estatuto -> func_llamada . ;

    ;               shift and go to state 78


state 55

    (4) main -> MAIN ( ) { loop_estatuto . } np_fin_total

    }               shift and go to state 79


state 56

    (43) estatuto -> decision .

    ID              reduce using rule 43 (estatuto -> decision .)
    READ            reduce using rule 43 (estatuto -> decision .)
    WRITE           reduce using rule 43 (estatuto -> decision .)
    IF              reduce using rule 43 (estatuto -> decision .)
    RETURN          reduce using rule 43 (estatuto -> decision .)
    WHILE           reduce using rule 43 (estatuto -> decision .)
    FOR             reduce using rule 43 (estatuto -> decision .)
    }               reduce using rule 43 (estatuto -> decision .)


state 57

    (61) loop_estatuto -> estatuto . loop_estatuto
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (92) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID variable_1
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 92 (epsilon -> .)
    ID              shift and go to state 58
    READ            shift and go to state 52
    WRITE           shift and go to state 65
    IF              shift and go to state 67
    RETURN          shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 61

    asignacion                     shift and go to state 68
    read                           shift and go to state 62
    epsilon                        shift and go to state 63
    decision                       shift and go to state 56
    estatuto                       shift and go to state 57
    write                          shift and go to state 59
    func_return                    shift and go to state 69
    variable                       shift and go to state 66
    func_llamada                   shift and go to state 54
    repeticion                     shift and go to state 70
    loop_estatuto                  shift and go to state 80
    condicional                    shift and go to state 64
    no_condicional                 shift and go to state 60

state 58

    (47) func_llamada -> ID . ( )
    (48) func_llamada -> ID . ( hyper_exp_loop )
    (8) variable -> ID . variable_1
    (9) variable_1 -> . [ hyper_exp ]
    (10) variable_1 -> . epsilon
    (92) epsilon -> .

    (               shift and go to state 81
    [               shift and go to state 84
    =               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 83
    variable_1                     shift and go to state 82

state 59

    (42) estatuto -> write .

    ID              reduce using rule 42 (estatuto -> write .)
    READ            reduce using rule 42 (estatuto -> write .)
    WRITE           reduce using rule 42 (estatuto -> write .)
    IF              reduce using rule 42 (estatuto -> write .)
    RETURN          reduce using rule 42 (estatuto -> write .)
    WHILE           reduce using rule 42 (estatuto -> write .)
    FOR             reduce using rule 42 (estatuto -> write .)
    }               reduce using rule 42 (estatuto -> write .)


state 60

    (64) repeticion -> no_condicional .

    ID              reduce using rule 64 (repeticion -> no_condicional .)
    READ            reduce using rule 64 (repeticion -> no_condicional .)
    WRITE           reduce using rule 64 (repeticion -> no_condicional .)
    IF              reduce using rule 64 (repeticion -> no_condicional .)
    RETURN          reduce using rule 64 (repeticion -> no_condicional .)
    WHILE           reduce using rule 64 (repeticion -> no_condicional .)
    FOR             reduce using rule 64 (repeticion -> no_condicional .)
    }               reduce using rule 64 (repeticion -> no_condicional .)


state 61

    (66) no_condicional -> FOR . variable = hyper_exp TO hyper_exp DO { loop_estatuto }
    (8) variable -> . ID variable_1

    ID              shift and go to state 86

    variable                       shift and go to state 85

state 62

    (41) estatuto -> read .

    ID              reduce using rule 41 (estatuto -> read .)
    READ            reduce using rule 41 (estatuto -> read .)
    WRITE           reduce using rule 41 (estatuto -> read .)
    IF              reduce using rule 41 (estatuto -> read .)
    RETURN          reduce using rule 41 (estatuto -> read .)
    WHILE           reduce using rule 41 (estatuto -> read .)
    FOR             reduce using rule 41 (estatuto -> read .)
    }               reduce using rule 41 (estatuto -> read .)


state 63

    (62) loop_estatuto -> epsilon .

    }               reduce using rule 62 (loop_estatuto -> epsilon .)


state 64

    (63) repeticion -> condicional .

    ID              reduce using rule 63 (repeticion -> condicional .)
    READ            reduce using rule 63 (repeticion -> condicional .)
    WRITE           reduce using rule 63 (repeticion -> condicional .)
    IF              reduce using rule 63 (repeticion -> condicional .)
    RETURN          reduce using rule 63 (repeticion -> condicional .)
    WHILE           reduce using rule 63 (repeticion -> condicional .)
    FOR             reduce using rule 63 (repeticion -> condicional .)
    }               reduce using rule 63 (repeticion -> condicional .)


state 65

    (57) write -> WRITE . ( hyper_exp_loop ) ;

    (               shift and go to state 87


state 66

    (46) asignacion -> variable . = hyper_exp ;

    =               shift and go to state 88


state 67

    (58) decision -> IF . ( hyper_exp ) THEN { loop_estatuto } decision_1

    (               shift and go to state 89


state 68

    (39) estatuto -> asignacion .

    ID              reduce using rule 39 (estatuto -> asignacion .)
    READ            reduce using rule 39 (estatuto -> asignacion .)
    WRITE           reduce using rule 39 (estatuto -> asignacion .)
    IF              reduce using rule 39 (estatuto -> asignacion .)
    RETURN          reduce using rule 39 (estatuto -> asignacion .)
    WHILE           reduce using rule 39 (estatuto -> asignacion .)
    FOR             reduce using rule 39 (estatuto -> asignacion .)
    }               reduce using rule 39 (estatuto -> asignacion .)


state 69

    (45) estatuto -> func_return .

    ID              reduce using rule 45 (estatuto -> func_return .)
    READ            reduce using rule 45 (estatuto -> func_return .)
    WRITE           reduce using rule 45 (estatuto -> func_return .)
    IF              reduce using rule 45 (estatuto -> func_return .)
    RETURN          reduce using rule 45 (estatuto -> func_return .)
    WHILE           reduce using rule 45 (estatuto -> func_return .)
    FOR             reduce using rule 45 (estatuto -> func_return .)
    }               reduce using rule 45 (estatuto -> func_return .)


state 70

    (44) estatuto -> repeticion .

    ID              reduce using rule 44 (estatuto -> repeticion .)
    READ            reduce using rule 44 (estatuto -> repeticion .)
    WRITE           reduce using rule 44 (estatuto -> repeticion .)
    IF              reduce using rule 44 (estatuto -> repeticion .)
    RETURN          reduce using rule 44 (estatuto -> repeticion .)
    WHILE           reduce using rule 44 (estatuto -> repeticion .)
    FOR             reduce using rule 44 (estatuto -> repeticion .)
    }               reduce using rule 44 (estatuto -> repeticion .)


state 71

    (17) loop_var_decl_mismo_tipo -> epsilon .

    ;               reduce using rule 17 (loop_var_decl_mismo_tipo -> epsilon .)


state 72

    (16) loop_var_decl_mismo_tipo -> , . ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo

    ID              shift and go to state 90


state 73

    (15) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo . ;

    ;               shift and go to state 91


state 74

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( . np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (30) np_prep_func_params -> . epsilon
    (92) epsilon -> .

    INT             reduce using rule 92 (epsilon -> .)
    FLOAT           reduce using rule 92 (epsilon -> .)
    CHAR            reduce using rule 92 (epsilon -> .)
    )               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 93
    np_prep_func_params            shift and go to state 92

state 75

    (52) func_return -> RETURN ( . hyper_exp ) ;
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 96
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 76

    (53) read -> READ ( . variable_loop ) ;
    (54) variable_loop -> . variable variable_loop_1
    (8) variable -> . ID variable_1

    ID              shift and go to state 86

    variable                       shift and go to state 105
    variable_loop                  shift and go to state 106

state 77

    (65) condicional -> WHILE ( . hyper_exp ) DO { loop_estatuto }
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 107
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 78

    (40) estatuto -> func_llamada ; .

    ID              reduce using rule 40 (estatuto -> func_llamada ; .)
    READ            reduce using rule 40 (estatuto -> func_llamada ; .)
    WRITE           reduce using rule 40 (estatuto -> func_llamada ; .)
    IF              reduce using rule 40 (estatuto -> func_llamada ; .)
    RETURN          reduce using rule 40 (estatuto -> func_llamada ; .)
    WHILE           reduce using rule 40 (estatuto -> func_llamada ; .)
    FOR             reduce using rule 40 (estatuto -> func_llamada ; .)
    }               reduce using rule 40 (estatuto -> func_llamada ; .)


state 79

    (4) main -> MAIN ( ) { loop_estatuto } . np_fin_total
    (5) np_fin_total -> . epsilon
    (92) epsilon -> .

    $end            reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 108
    np_fin_total                   shift and go to state 109

state 80

    (61) loop_estatuto -> estatuto loop_estatuto .

    }               reduce using rule 61 (loop_estatuto -> estatuto loop_estatuto .)


state 81

    (47) func_llamada -> ID ( . )
    (48) func_llamada -> ID ( . hyper_exp_loop )
    (49) hyper_exp_loop -> . hyper_exp hyper_exp_loop_1
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    )               shift and go to state 112
    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 110
    hyper_exp_loop                 shift and go to state 111
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 82

    (8) variable -> ID variable_1 .

    *               reduce using rule 8 (variable -> ID variable_1 .)
    /               reduce using rule 8 (variable -> ID variable_1 .)
    <               reduce using rule 8 (variable -> ID variable_1 .)
    >               reduce using rule 8 (variable -> ID variable_1 .)
    EQUAL_TO        reduce using rule 8 (variable -> ID variable_1 .)
    NOT_EQUAL_TO    reduce using rule 8 (variable -> ID variable_1 .)
    &               reduce using rule 8 (variable -> ID variable_1 .)
    |               reduce using rule 8 (variable -> ID variable_1 .)
    )               reduce using rule 8 (variable -> ID variable_1 .)
    ,               reduce using rule 8 (variable -> ID variable_1 .)
    ]               reduce using rule 8 (variable -> ID variable_1 .)
    ;               reduce using rule 8 (variable -> ID variable_1 .)
    TO              reduce using rule 8 (variable -> ID variable_1 .)
    DO              reduce using rule 8 (variable -> ID variable_1 .)
    +               reduce using rule 8 (variable -> ID variable_1 .)
    -               reduce using rule 8 (variable -> ID variable_1 .)
    =               reduce using rule 8 (variable -> ID variable_1 .)


state 83

    (10) variable_1 -> epsilon .

    =               reduce using rule 10 (variable_1 -> epsilon .)
    *               reduce using rule 10 (variable_1 -> epsilon .)
    /               reduce using rule 10 (variable_1 -> epsilon .)
    +               reduce using rule 10 (variable_1 -> epsilon .)
    -               reduce using rule 10 (variable_1 -> epsilon .)
    <               reduce using rule 10 (variable_1 -> epsilon .)
    >               reduce using rule 10 (variable_1 -> epsilon .)
    EQUAL_TO        reduce using rule 10 (variable_1 -> epsilon .)
    NOT_EQUAL_TO    reduce using rule 10 (variable_1 -> epsilon .)
    &               reduce using rule 10 (variable_1 -> epsilon .)
    |               reduce using rule 10 (variable_1 -> epsilon .)
    )               reduce using rule 10 (variable_1 -> epsilon .)
    ,               reduce using rule 10 (variable_1 -> epsilon .)
    ]               reduce using rule 10 (variable_1 -> epsilon .)
    ;               reduce using rule 10 (variable_1 -> epsilon .)
    TO              reduce using rule 10 (variable_1 -> epsilon .)
    DO              reduce using rule 10 (variable_1 -> epsilon .)


state 84

    (9) variable_1 -> [ . hyper_exp ]
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 113
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 85

    (66) no_condicional -> FOR variable . = hyper_exp TO hyper_exp DO { loop_estatuto }

    =               shift and go to state 114


state 86

    (8) variable -> ID . variable_1
    (9) variable_1 -> . [ hyper_exp ]
    (10) variable_1 -> . epsilon
    (92) epsilon -> .

    [               shift and go to state 84
    =               reduce using rule 92 (epsilon -> .)
    *               reduce using rule 92 (epsilon -> .)
    /               reduce using rule 92 (epsilon -> .)
    +               reduce using rule 92 (epsilon -> .)
    -               reduce using rule 92 (epsilon -> .)
    <               reduce using rule 92 (epsilon -> .)
    >               reduce using rule 92 (epsilon -> .)
    EQUAL_TO        reduce using rule 92 (epsilon -> .)
    NOT_EQUAL_TO    reduce using rule 92 (epsilon -> .)
    &               reduce using rule 92 (epsilon -> .)
    |               reduce using rule 92 (epsilon -> .)
    )               reduce using rule 92 (epsilon -> .)
    ,               reduce using rule 92 (epsilon -> .)
    ]               reduce using rule 92 (epsilon -> .)
    ;               reduce using rule 92 (epsilon -> .)
    TO              reduce using rule 92 (epsilon -> .)
    DO              reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 83
    variable_1                     shift and go to state 82

state 87

    (57) write -> WRITE ( . hyper_exp_loop ) ;
    (49) hyper_exp_loop -> . hyper_exp hyper_exp_loop_1
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 110
    hyper_exp_loop                 shift and go to state 115
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 88

    (46) asignacion -> variable = . hyper_exp ;
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 116
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 89

    (58) decision -> IF ( . hyper_exp ) THEN { loop_estatuto } decision_1
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 117
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 90

    (16) loop_var_decl_mismo_tipo -> , ID . np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo
    (19) np_set_curr_var_name -> . epsilon
    (92) epsilon -> .

    ,               reduce using rule 92 (epsilon -> .)
    ;               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 42
    np_set_curr_var_name           shift and go to state 118

state 91

    (15) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .

    INT             reduce using rule 15 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    FLOAT           reduce using rule 15 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    CHAR            reduce using rule 15 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    FUNCTION        reduce using rule 15 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    MAIN            reduce using rule 15 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    {               reduce using rule 15 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)


state 92

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params . func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (31) func_parametro -> . parametro
    (32) func_parametro -> . epsilon
    (33) parametro -> . tipo ID loop_parametro
    (92) epsilon -> .
    (36) tipo -> . INT
    (37) tipo -> . FLOAT
    (38) tipo -> . CHAR

    )               reduce using rule 92 (epsilon -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    tipo                           shift and go to state 120
    parametro                      shift and go to state 121
    epsilon                        shift and go to state 122
    func_parametro                 shift and go to state 119

state 93

    (30) np_prep_func_params -> epsilon .

    INT             reduce using rule 30 (np_prep_func_params -> epsilon .)
    FLOAT           reduce using rule 30 (np_prep_func_params -> epsilon .)
    CHAR            reduce using rule 30 (np_prep_func_params -> epsilon .)
    )               reduce using rule 30 (np_prep_func_params -> epsilon .)


state 94

    (67) hyper_exp -> super_exp . hyper_exp_1
    (68) hyper_exp_1 -> . & super_exp
    (69) hyper_exp_1 -> . | super_exp
    (70) hyper_exp_1 -> . epsilon
    (92) epsilon -> .

    &               shift and go to state 126
    |               shift and go to state 124
    )               reduce using rule 92 (epsilon -> .)
    ,               reduce using rule 92 (epsilon -> .)
    ]               reduce using rule 92 (epsilon -> .)
    ;               reduce using rule 92 (epsilon -> .)
    TO              reduce using rule 92 (epsilon -> .)
    DO              reduce using rule 92 (epsilon -> .)

    hyper_exp_1                    shift and go to state 123
    epsilon                        shift and go to state 125

state 95

    (77) exp -> term . exp_1
    (78) exp_1 -> . + term
    (79) exp_1 -> . - term
    (80) exp_1 -> . epsilon
    (92) epsilon -> .

    +               shift and go to state 129
    -               shift and go to state 127
    <               reduce using rule 92 (epsilon -> .)
    >               reduce using rule 92 (epsilon -> .)
    EQUAL_TO        reduce using rule 92 (epsilon -> .)
    NOT_EQUAL_TO    reduce using rule 92 (epsilon -> .)
    &               reduce using rule 92 (epsilon -> .)
    |               reduce using rule 92 (epsilon -> .)
    )               reduce using rule 92 (epsilon -> .)
    ,               reduce using rule 92 (epsilon -> .)
    ]               reduce using rule 92 (epsilon -> .)
    ;               reduce using rule 92 (epsilon -> .)
    TO              reduce using rule 92 (epsilon -> .)
    DO              reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 130
    exp_1                          shift and go to state 128

state 96

    (52) func_return -> RETURN ( hyper_exp . ) ;

    )               shift and go to state 131


state 97

    (90) factor -> ( . hyper_exp )
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 132
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 98

    (86) factor -> VAL_FLOAT .

    *               reduce using rule 86 (factor -> VAL_FLOAT .)
    /               reduce using rule 86 (factor -> VAL_FLOAT .)
    +               reduce using rule 86 (factor -> VAL_FLOAT .)
    -               reduce using rule 86 (factor -> VAL_FLOAT .)
    &               reduce using rule 86 (factor -> VAL_FLOAT .)
    |               reduce using rule 86 (factor -> VAL_FLOAT .)
    )               reduce using rule 86 (factor -> VAL_FLOAT .)
    ,               reduce using rule 86 (factor -> VAL_FLOAT .)
    ]               reduce using rule 86 (factor -> VAL_FLOAT .)
    ;               reduce using rule 86 (factor -> VAL_FLOAT .)
    TO              reduce using rule 86 (factor -> VAL_FLOAT .)
    DO              reduce using rule 86 (factor -> VAL_FLOAT .)
    <               reduce using rule 86 (factor -> VAL_FLOAT .)
    >               reduce using rule 86 (factor -> VAL_FLOAT .)
    EQUAL_TO        reduce using rule 86 (factor -> VAL_FLOAT .)
    NOT_EQUAL_TO    reduce using rule 86 (factor -> VAL_FLOAT .)


state 99

    (88) factor -> VAL_CHAR .

    *               reduce using rule 88 (factor -> VAL_CHAR .)
    /               reduce using rule 88 (factor -> VAL_CHAR .)
    +               reduce using rule 88 (factor -> VAL_CHAR .)
    -               reduce using rule 88 (factor -> VAL_CHAR .)
    &               reduce using rule 88 (factor -> VAL_CHAR .)
    |               reduce using rule 88 (factor -> VAL_CHAR .)
    )               reduce using rule 88 (factor -> VAL_CHAR .)
    ,               reduce using rule 88 (factor -> VAL_CHAR .)
    ]               reduce using rule 88 (factor -> VAL_CHAR .)
    ;               reduce using rule 88 (factor -> VAL_CHAR .)
    TO              reduce using rule 88 (factor -> VAL_CHAR .)
    DO              reduce using rule 88 (factor -> VAL_CHAR .)
    <               reduce using rule 88 (factor -> VAL_CHAR .)
    >               reduce using rule 88 (factor -> VAL_CHAR .)
    EQUAL_TO        reduce using rule 88 (factor -> VAL_CHAR .)
    NOT_EQUAL_TO    reduce using rule 88 (factor -> VAL_CHAR .)


state 100

    (87) factor -> VAL_STRING .

    *               reduce using rule 87 (factor -> VAL_STRING .)
    /               reduce using rule 87 (factor -> VAL_STRING .)
    +               reduce using rule 87 (factor -> VAL_STRING .)
    -               reduce using rule 87 (factor -> VAL_STRING .)
    &               reduce using rule 87 (factor -> VAL_STRING .)
    |               reduce using rule 87 (factor -> VAL_STRING .)
    )               reduce using rule 87 (factor -> VAL_STRING .)
    ,               reduce using rule 87 (factor -> VAL_STRING .)
    ]               reduce using rule 87 (factor -> VAL_STRING .)
    ;               reduce using rule 87 (factor -> VAL_STRING .)
    TO              reduce using rule 87 (factor -> VAL_STRING .)
    DO              reduce using rule 87 (factor -> VAL_STRING .)
    <               reduce using rule 87 (factor -> VAL_STRING .)
    >               reduce using rule 87 (factor -> VAL_STRING .)
    EQUAL_TO        reduce using rule 87 (factor -> VAL_STRING .)
    NOT_EQUAL_TO    reduce using rule 87 (factor -> VAL_STRING .)


state 101

    (71) super_exp -> exp . super_exp_1
    (72) super_exp_1 -> . < exp
    (73) super_exp_1 -> . > exp
    (74) super_exp_1 -> . EQUAL_TO exp
    (75) super_exp_1 -> . NOT_EQUAL_TO exp
    (76) super_exp_1 -> . epsilon
    (92) epsilon -> .

    <               shift and go to state 137
    >               shift and go to state 138
    EQUAL_TO        shift and go to state 133
    NOT_EQUAL_TO    shift and go to state 134
    &               reduce using rule 92 (epsilon -> .)
    |               reduce using rule 92 (epsilon -> .)
    )               reduce using rule 92 (epsilon -> .)
    ,               reduce using rule 92 (epsilon -> .)
    ]               reduce using rule 92 (epsilon -> .)
    ;               reduce using rule 92 (epsilon -> .)
    TO              reduce using rule 92 (epsilon -> .)
    DO              reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 135
    super_exp_1                    shift and go to state 136

state 102

    (81) term -> factor . term_1
    (82) term_1 -> . * factor
    (83) term_1 -> . / factor
    (84) term_1 -> . epsilon
    (92) epsilon -> .

    *               shift and go to state 141
    /               shift and go to state 142
    +               reduce using rule 92 (epsilon -> .)
    -               reduce using rule 92 (epsilon -> .)
    <               reduce using rule 92 (epsilon -> .)
    >               reduce using rule 92 (epsilon -> .)
    EQUAL_TO        reduce using rule 92 (epsilon -> .)
    NOT_EQUAL_TO    reduce using rule 92 (epsilon -> .)
    &               reduce using rule 92 (epsilon -> .)
    |               reduce using rule 92 (epsilon -> .)
    )               reduce using rule 92 (epsilon -> .)
    ,               reduce using rule 92 (epsilon -> .)
    ]               reduce using rule 92 (epsilon -> .)
    ;               reduce using rule 92 (epsilon -> .)
    TO              reduce using rule 92 (epsilon -> .)
    DO              reduce using rule 92 (epsilon -> .)

    term_1                         shift and go to state 139
    epsilon                        shift and go to state 140

state 103

    (89) factor -> variable .

    *               reduce using rule 89 (factor -> variable .)
    /               reduce using rule 89 (factor -> variable .)
    +               reduce using rule 89 (factor -> variable .)
    -               reduce using rule 89 (factor -> variable .)
    &               reduce using rule 89 (factor -> variable .)
    |               reduce using rule 89 (factor -> variable .)
    )               reduce using rule 89 (factor -> variable .)
    ,               reduce using rule 89 (factor -> variable .)
    ]               reduce using rule 89 (factor -> variable .)
    ;               reduce using rule 89 (factor -> variable .)
    TO              reduce using rule 89 (factor -> variable .)
    DO              reduce using rule 89 (factor -> variable .)
    <               reduce using rule 89 (factor -> variable .)
    >               reduce using rule 89 (factor -> variable .)
    EQUAL_TO        reduce using rule 89 (factor -> variable .)
    NOT_EQUAL_TO    reduce using rule 89 (factor -> variable .)


state 104

    (85) factor -> VAL_INT . np_push_const
    (91) np_push_const -> . epsilon
    (92) epsilon -> .

    *               reduce using rule 92 (epsilon -> .)
    /               reduce using rule 92 (epsilon -> .)
    +               reduce using rule 92 (epsilon -> .)
    -               reduce using rule 92 (epsilon -> .)
    <               reduce using rule 92 (epsilon -> .)
    >               reduce using rule 92 (epsilon -> .)
    EQUAL_TO        reduce using rule 92 (epsilon -> .)
    NOT_EQUAL_TO    reduce using rule 92 (epsilon -> .)
    &               reduce using rule 92 (epsilon -> .)
    |               reduce using rule 92 (epsilon -> .)
    )               reduce using rule 92 (epsilon -> .)
    ,               reduce using rule 92 (epsilon -> .)
    ]               reduce using rule 92 (epsilon -> .)
    ;               reduce using rule 92 (epsilon -> .)
    TO              reduce using rule 92 (epsilon -> .)
    DO              reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 144
    np_push_const                  shift and go to state 143

state 105

    (54) variable_loop -> variable . variable_loop_1
    (55) variable_loop_1 -> . , variable variable_loop_1
    (56) variable_loop_1 -> . epsilon
    (92) epsilon -> .

    ,               shift and go to state 147
    )               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 145
    variable_loop_1                shift and go to state 146

state 106

    (53) read -> READ ( variable_loop . ) ;

    )               shift and go to state 148


state 107

    (65) condicional -> WHILE ( hyper_exp . ) DO { loop_estatuto }

    )               shift and go to state 149


state 108

    (5) np_fin_total -> epsilon .

    $end            reduce using rule 5 (np_fin_total -> epsilon .)


state 109

    (4) main -> MAIN ( ) { loop_estatuto } np_fin_total .

    $end            reduce using rule 4 (main -> MAIN ( ) { loop_estatuto } np_fin_total .)


state 110

    (49) hyper_exp_loop -> hyper_exp . hyper_exp_loop_1
    (50) hyper_exp_loop_1 -> . , hyper_exp hyper_exp_loop_1
    (51) hyper_exp_loop_1 -> . epsilon
    (92) epsilon -> .

    ,               shift and go to state 151
    )               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 150
    hyper_exp_loop_1               shift and go to state 152

state 111

    (48) func_llamada -> ID ( hyper_exp_loop . )

    )               shift and go to state 153


state 112

    (47) func_llamada -> ID ( ) .

    ;               reduce using rule 47 (func_llamada -> ID ( ) .)


state 113

    (9) variable_1 -> [ hyper_exp . ]

    ]               shift and go to state 154


state 114

    (66) no_condicional -> FOR variable = . hyper_exp TO hyper_exp DO { loop_estatuto }
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 155
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 115

    (57) write -> WRITE ( hyper_exp_loop . ) ;

    )               shift and go to state 156


state 116

    (46) asignacion -> variable = hyper_exp . ;

    ;               shift and go to state 157


state 117

    (58) decision -> IF ( hyper_exp . ) THEN { loop_estatuto } decision_1

    )               shift and go to state 158


state 118

    (16) loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name . np_add_var_to_varstable loop_var_decl_mismo_tipo
    (20) np_add_var_to_varstable -> . epsilon
    (92) epsilon -> .

    ,               reduce using rule 92 (epsilon -> .)
    ;               reduce using rule 92 (epsilon -> .)

    np_add_var_to_varstable        shift and go to state 159
    epsilon                        shift and go to state 48

state 119

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro . ) ; var_opcional { loop_estatuto } np_kill_func

    )               shift and go to state 160


state 120

    (33) parametro -> tipo . ID loop_parametro

    ID              shift and go to state 161


state 121

    (31) func_parametro -> parametro .

    )               reduce using rule 31 (func_parametro -> parametro .)


state 122

    (32) func_parametro -> epsilon .

    )               reduce using rule 32 (func_parametro -> epsilon .)


state 123

    (67) hyper_exp -> super_exp hyper_exp_1 .

    )               reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)
    ]               reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)
    TO              reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)
    ,               reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)
    DO              reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)
    ;               reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)


state 124

    (69) hyper_exp_1 -> | . super_exp
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 162
    term                           shift and go to state 95
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 125

    (70) hyper_exp_1 -> epsilon .

    )               reduce using rule 70 (hyper_exp_1 -> epsilon .)
    ,               reduce using rule 70 (hyper_exp_1 -> epsilon .)
    ]               reduce using rule 70 (hyper_exp_1 -> epsilon .)
    ;               reduce using rule 70 (hyper_exp_1 -> epsilon .)
    TO              reduce using rule 70 (hyper_exp_1 -> epsilon .)
    DO              reduce using rule 70 (hyper_exp_1 -> epsilon .)


state 126

    (68) hyper_exp_1 -> & . super_exp
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 163
    term                           shift and go to state 95
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 127

    (79) exp_1 -> - . term
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    term                           shift and go to state 164
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 128

    (77) exp -> term exp_1 .

    <               reduce using rule 77 (exp -> term exp_1 .)
    >               reduce using rule 77 (exp -> term exp_1 .)
    EQUAL_TO        reduce using rule 77 (exp -> term exp_1 .)
    NOT_EQUAL_TO    reduce using rule 77 (exp -> term exp_1 .)
    &               reduce using rule 77 (exp -> term exp_1 .)
    |               reduce using rule 77 (exp -> term exp_1 .)
    )               reduce using rule 77 (exp -> term exp_1 .)
    ,               reduce using rule 77 (exp -> term exp_1 .)
    ]               reduce using rule 77 (exp -> term exp_1 .)
    ;               reduce using rule 77 (exp -> term exp_1 .)
    TO              reduce using rule 77 (exp -> term exp_1 .)
    DO              reduce using rule 77 (exp -> term exp_1 .)


state 129

    (78) exp_1 -> + . term
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    term                           shift and go to state 165
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 130

    (80) exp_1 -> epsilon .

    <               reduce using rule 80 (exp_1 -> epsilon .)
    >               reduce using rule 80 (exp_1 -> epsilon .)
    EQUAL_TO        reduce using rule 80 (exp_1 -> epsilon .)
    NOT_EQUAL_TO    reduce using rule 80 (exp_1 -> epsilon .)
    &               reduce using rule 80 (exp_1 -> epsilon .)
    |               reduce using rule 80 (exp_1 -> epsilon .)
    )               reduce using rule 80 (exp_1 -> epsilon .)
    ,               reduce using rule 80 (exp_1 -> epsilon .)
    ]               reduce using rule 80 (exp_1 -> epsilon .)
    ;               reduce using rule 80 (exp_1 -> epsilon .)
    TO              reduce using rule 80 (exp_1 -> epsilon .)
    DO              reduce using rule 80 (exp_1 -> epsilon .)


state 131

    (52) func_return -> RETURN ( hyper_exp ) . ;

    ;               shift and go to state 166


state 132

    (90) factor -> ( hyper_exp . )

    )               shift and go to state 167


state 133

    (74) super_exp_1 -> EQUAL_TO . exp
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    term                           shift and go to state 95
    exp                            shift and go to state 168
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 134

    (75) super_exp_1 -> NOT_EQUAL_TO . exp
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    term                           shift and go to state 95
    exp                            shift and go to state 169
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 135

    (76) super_exp_1 -> epsilon .

    &               reduce using rule 76 (super_exp_1 -> epsilon .)
    |               reduce using rule 76 (super_exp_1 -> epsilon .)
    )               reduce using rule 76 (super_exp_1 -> epsilon .)
    ,               reduce using rule 76 (super_exp_1 -> epsilon .)
    ]               reduce using rule 76 (super_exp_1 -> epsilon .)
    ;               reduce using rule 76 (super_exp_1 -> epsilon .)
    TO              reduce using rule 76 (super_exp_1 -> epsilon .)
    DO              reduce using rule 76 (super_exp_1 -> epsilon .)


state 136

    (71) super_exp -> exp super_exp_1 .

    &               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    |               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    ]               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    )               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    DO              reduce using rule 71 (super_exp -> exp super_exp_1 .)
    ,               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    ;               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    TO              reduce using rule 71 (super_exp -> exp super_exp_1 .)


state 137

    (72) super_exp_1 -> < . exp
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    term                           shift and go to state 95
    exp                            shift and go to state 170
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 138

    (73) super_exp_1 -> > . exp
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    term                           shift and go to state 95
    exp                            shift and go to state 171
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 139

    (81) term -> factor term_1 .

    +               reduce using rule 81 (term -> factor term_1 .)
    -               reduce using rule 81 (term -> factor term_1 .)
    <               reduce using rule 81 (term -> factor term_1 .)
    >               reduce using rule 81 (term -> factor term_1 .)
    EQUAL_TO        reduce using rule 81 (term -> factor term_1 .)
    NOT_EQUAL_TO    reduce using rule 81 (term -> factor term_1 .)
    &               reduce using rule 81 (term -> factor term_1 .)
    |               reduce using rule 81 (term -> factor term_1 .)
    ,               reduce using rule 81 (term -> factor term_1 .)
    )               reduce using rule 81 (term -> factor term_1 .)
    ]               reduce using rule 81 (term -> factor term_1 .)
    ;               reduce using rule 81 (term -> factor term_1 .)
    TO              reduce using rule 81 (term -> factor term_1 .)
    DO              reduce using rule 81 (term -> factor term_1 .)


state 140

    (84) term_1 -> epsilon .

    +               reduce using rule 84 (term_1 -> epsilon .)
    -               reduce using rule 84 (term_1 -> epsilon .)
    <               reduce using rule 84 (term_1 -> epsilon .)
    >               reduce using rule 84 (term_1 -> epsilon .)
    EQUAL_TO        reduce using rule 84 (term_1 -> epsilon .)
    NOT_EQUAL_TO    reduce using rule 84 (term_1 -> epsilon .)
    &               reduce using rule 84 (term_1 -> epsilon .)
    |               reduce using rule 84 (term_1 -> epsilon .)
    )               reduce using rule 84 (term_1 -> epsilon .)
    ,               reduce using rule 84 (term_1 -> epsilon .)
    ]               reduce using rule 84 (term_1 -> epsilon .)
    ;               reduce using rule 84 (term_1 -> epsilon .)
    TO              reduce using rule 84 (term_1 -> epsilon .)
    DO              reduce using rule 84 (term_1 -> epsilon .)


state 141

    (82) term_1 -> * . factor
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    variable                       shift and go to state 103
    factor                         shift and go to state 172

state 142

    (83) term_1 -> / . factor
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    variable                       shift and go to state 103
    factor                         shift and go to state 173

state 143

    (85) factor -> VAL_INT np_push_const .

    *               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    /               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    +               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    -               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    &               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    |               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    )               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    ,               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    ]               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    ;               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    TO              reduce using rule 85 (factor -> VAL_INT np_push_const .)
    DO              reduce using rule 85 (factor -> VAL_INT np_push_const .)
    <               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    >               reduce using rule 85 (factor -> VAL_INT np_push_const .)
    EQUAL_TO        reduce using rule 85 (factor -> VAL_INT np_push_const .)
    NOT_EQUAL_TO    reduce using rule 85 (factor -> VAL_INT np_push_const .)


state 144

    (91) np_push_const -> epsilon .

    *               reduce using rule 91 (np_push_const -> epsilon .)
    /               reduce using rule 91 (np_push_const -> epsilon .)
    +               reduce using rule 91 (np_push_const -> epsilon .)
    -               reduce using rule 91 (np_push_const -> epsilon .)
    <               reduce using rule 91 (np_push_const -> epsilon .)
    >               reduce using rule 91 (np_push_const -> epsilon .)
    EQUAL_TO        reduce using rule 91 (np_push_const -> epsilon .)
    NOT_EQUAL_TO    reduce using rule 91 (np_push_const -> epsilon .)
    &               reduce using rule 91 (np_push_const -> epsilon .)
    |               reduce using rule 91 (np_push_const -> epsilon .)
    )               reduce using rule 91 (np_push_const -> epsilon .)
    ,               reduce using rule 91 (np_push_const -> epsilon .)
    ]               reduce using rule 91 (np_push_const -> epsilon .)
    ;               reduce using rule 91 (np_push_const -> epsilon .)
    TO              reduce using rule 91 (np_push_const -> epsilon .)
    DO              reduce using rule 91 (np_push_const -> epsilon .)


state 145

    (56) variable_loop_1 -> epsilon .

    )               reduce using rule 56 (variable_loop_1 -> epsilon .)


state 146

    (54) variable_loop -> variable variable_loop_1 .

    )               reduce using rule 54 (variable_loop -> variable variable_loop_1 .)


state 147

    (55) variable_loop_1 -> , . variable variable_loop_1
    (8) variable -> . ID variable_1

    ID              shift and go to state 86

    variable                       shift and go to state 174

state 148

    (53) read -> READ ( variable_loop ) . ;

    ;               shift and go to state 175


state 149

    (65) condicional -> WHILE ( hyper_exp ) . DO { loop_estatuto }

    DO              shift and go to state 176


state 150

    (51) hyper_exp_loop_1 -> epsilon .

    )               reduce using rule 51 (hyper_exp_loop_1 -> epsilon .)


state 151

    (50) hyper_exp_loop_1 -> , . hyper_exp hyper_exp_loop_1
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 177
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 152

    (49) hyper_exp_loop -> hyper_exp hyper_exp_loop_1 .

    )               reduce using rule 49 (hyper_exp_loop -> hyper_exp hyper_exp_loop_1 .)


state 153

    (48) func_llamada -> ID ( hyper_exp_loop ) .

    ;               reduce using rule 48 (func_llamada -> ID ( hyper_exp_loop ) .)


state 154

    (9) variable_1 -> [ hyper_exp ] .

    =               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    *               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    /               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    +               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    -               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    <               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    >               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    EQUAL_TO        reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    NOT_EQUAL_TO    reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    &               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    |               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    )               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    ,               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    ]               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    ;               reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    TO              reduce using rule 9 (variable_1 -> [ hyper_exp ] .)
    DO              reduce using rule 9 (variable_1 -> [ hyper_exp ] .)


state 155

    (66) no_condicional -> FOR variable = hyper_exp . TO hyper_exp DO { loop_estatuto }

    TO              shift and go to state 178


state 156

    (57) write -> WRITE ( hyper_exp_loop ) . ;

    ;               shift and go to state 179


state 157

    (46) asignacion -> variable = hyper_exp ; .

    ID              reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    READ            reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    WRITE           reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    IF              reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    RETURN          reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    WHILE           reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    FOR             reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    }               reduce using rule 46 (asignacion -> variable = hyper_exp ; .)


state 158

    (58) decision -> IF ( hyper_exp ) . THEN { loop_estatuto } decision_1

    THEN            shift and go to state 180


state 159

    (16) loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name np_add_var_to_varstable . loop_var_decl_mismo_tipo
    (16) loop_var_decl_mismo_tipo -> . , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo
    (17) loop_var_decl_mismo_tipo -> . epsilon
    (92) epsilon -> .

    ,               shift and go to state 72
    ;               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 71
    loop_var_decl_mismo_tipo       shift and go to state 181

state 160

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) . ; var_opcional { loop_estatuto } np_kill_func

    ;               shift and go to state 182


state 161

    (33) parametro -> tipo ID . loop_parametro
    (34) loop_parametro -> . , tipo ID loop_parametro
    (35) loop_parametro -> . epsilon
    (92) epsilon -> .

    ,               shift and go to state 185
    )               reduce using rule 92 (epsilon -> .)

    loop_parametro                 shift and go to state 183
    epsilon                        shift and go to state 184

state 162

    (69) hyper_exp_1 -> | super_exp .

    )               reduce using rule 69 (hyper_exp_1 -> | super_exp .)
    ,               reduce using rule 69 (hyper_exp_1 -> | super_exp .)
    ]               reduce using rule 69 (hyper_exp_1 -> | super_exp .)
    ;               reduce using rule 69 (hyper_exp_1 -> | super_exp .)
    TO              reduce using rule 69 (hyper_exp_1 -> | super_exp .)
    DO              reduce using rule 69 (hyper_exp_1 -> | super_exp .)


state 163

    (68) hyper_exp_1 -> & super_exp .

    )               reduce using rule 68 (hyper_exp_1 -> & super_exp .)
    ,               reduce using rule 68 (hyper_exp_1 -> & super_exp .)
    ]               reduce using rule 68 (hyper_exp_1 -> & super_exp .)
    ;               reduce using rule 68 (hyper_exp_1 -> & super_exp .)
    TO              reduce using rule 68 (hyper_exp_1 -> & super_exp .)
    DO              reduce using rule 68 (hyper_exp_1 -> & super_exp .)


state 164

    (79) exp_1 -> - term .

    <               reduce using rule 79 (exp_1 -> - term .)
    >               reduce using rule 79 (exp_1 -> - term .)
    EQUAL_TO        reduce using rule 79 (exp_1 -> - term .)
    NOT_EQUAL_TO    reduce using rule 79 (exp_1 -> - term .)
    &               reduce using rule 79 (exp_1 -> - term .)
    |               reduce using rule 79 (exp_1 -> - term .)
    )               reduce using rule 79 (exp_1 -> - term .)
    ,               reduce using rule 79 (exp_1 -> - term .)
    ]               reduce using rule 79 (exp_1 -> - term .)
    ;               reduce using rule 79 (exp_1 -> - term .)
    TO              reduce using rule 79 (exp_1 -> - term .)
    DO              reduce using rule 79 (exp_1 -> - term .)


state 165

    (78) exp_1 -> + term .

    <               reduce using rule 78 (exp_1 -> + term .)
    >               reduce using rule 78 (exp_1 -> + term .)
    EQUAL_TO        reduce using rule 78 (exp_1 -> + term .)
    NOT_EQUAL_TO    reduce using rule 78 (exp_1 -> + term .)
    &               reduce using rule 78 (exp_1 -> + term .)
    |               reduce using rule 78 (exp_1 -> + term .)
    )               reduce using rule 78 (exp_1 -> + term .)
    ,               reduce using rule 78 (exp_1 -> + term .)
    ]               reduce using rule 78 (exp_1 -> + term .)
    ;               reduce using rule 78 (exp_1 -> + term .)
    TO              reduce using rule 78 (exp_1 -> + term .)
    DO              reduce using rule 78 (exp_1 -> + term .)


state 166

    (52) func_return -> RETURN ( hyper_exp ) ; .

    ID              reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    READ            reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    WRITE           reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    IF              reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    RETURN          reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    WHILE           reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    FOR             reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    }               reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)


state 167

    (90) factor -> ( hyper_exp ) .

    *               reduce using rule 90 (factor -> ( hyper_exp ) .)
    /               reduce using rule 90 (factor -> ( hyper_exp ) .)
    +               reduce using rule 90 (factor -> ( hyper_exp ) .)
    -               reduce using rule 90 (factor -> ( hyper_exp ) .)
    &               reduce using rule 90 (factor -> ( hyper_exp ) .)
    |               reduce using rule 90 (factor -> ( hyper_exp ) .)
    )               reduce using rule 90 (factor -> ( hyper_exp ) .)
    ,               reduce using rule 90 (factor -> ( hyper_exp ) .)
    ]               reduce using rule 90 (factor -> ( hyper_exp ) .)
    ;               reduce using rule 90 (factor -> ( hyper_exp ) .)
    TO              reduce using rule 90 (factor -> ( hyper_exp ) .)
    DO              reduce using rule 90 (factor -> ( hyper_exp ) .)
    <               reduce using rule 90 (factor -> ( hyper_exp ) .)
    >               reduce using rule 90 (factor -> ( hyper_exp ) .)
    EQUAL_TO        reduce using rule 90 (factor -> ( hyper_exp ) .)
    NOT_EQUAL_TO    reduce using rule 90 (factor -> ( hyper_exp ) .)


state 168

    (74) super_exp_1 -> EQUAL_TO exp .

    &               reduce using rule 74 (super_exp_1 -> EQUAL_TO exp .)
    |               reduce using rule 74 (super_exp_1 -> EQUAL_TO exp .)
    )               reduce using rule 74 (super_exp_1 -> EQUAL_TO exp .)
    ,               reduce using rule 74 (super_exp_1 -> EQUAL_TO exp .)
    ]               reduce using rule 74 (super_exp_1 -> EQUAL_TO exp .)
    ;               reduce using rule 74 (super_exp_1 -> EQUAL_TO exp .)
    TO              reduce using rule 74 (super_exp_1 -> EQUAL_TO exp .)
    DO              reduce using rule 74 (super_exp_1 -> EQUAL_TO exp .)


state 169

    (75) super_exp_1 -> NOT_EQUAL_TO exp .

    &               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO exp .)
    |               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO exp .)
    )               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO exp .)
    ,               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO exp .)
    ]               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO exp .)
    ;               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO exp .)
    TO              reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO exp .)
    DO              reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO exp .)


state 170

    (72) super_exp_1 -> < exp .

    &               reduce using rule 72 (super_exp_1 -> < exp .)
    |               reduce using rule 72 (super_exp_1 -> < exp .)
    )               reduce using rule 72 (super_exp_1 -> < exp .)
    ,               reduce using rule 72 (super_exp_1 -> < exp .)
    ]               reduce using rule 72 (super_exp_1 -> < exp .)
    ;               reduce using rule 72 (super_exp_1 -> < exp .)
    TO              reduce using rule 72 (super_exp_1 -> < exp .)
    DO              reduce using rule 72 (super_exp_1 -> < exp .)


state 171

    (73) super_exp_1 -> > exp .

    &               reduce using rule 73 (super_exp_1 -> > exp .)
    |               reduce using rule 73 (super_exp_1 -> > exp .)
    )               reduce using rule 73 (super_exp_1 -> > exp .)
    ,               reduce using rule 73 (super_exp_1 -> > exp .)
    ]               reduce using rule 73 (super_exp_1 -> > exp .)
    ;               reduce using rule 73 (super_exp_1 -> > exp .)
    TO              reduce using rule 73 (super_exp_1 -> > exp .)
    DO              reduce using rule 73 (super_exp_1 -> > exp .)


state 172

    (82) term_1 -> * factor .

    +               reduce using rule 82 (term_1 -> * factor .)
    -               reduce using rule 82 (term_1 -> * factor .)
    <               reduce using rule 82 (term_1 -> * factor .)
    >               reduce using rule 82 (term_1 -> * factor .)
    EQUAL_TO        reduce using rule 82 (term_1 -> * factor .)
    NOT_EQUAL_TO    reduce using rule 82 (term_1 -> * factor .)
    &               reduce using rule 82 (term_1 -> * factor .)
    |               reduce using rule 82 (term_1 -> * factor .)
    )               reduce using rule 82 (term_1 -> * factor .)
    ,               reduce using rule 82 (term_1 -> * factor .)
    ]               reduce using rule 82 (term_1 -> * factor .)
    ;               reduce using rule 82 (term_1 -> * factor .)
    TO              reduce using rule 82 (term_1 -> * factor .)
    DO              reduce using rule 82 (term_1 -> * factor .)


state 173

    (83) term_1 -> / factor .

    +               reduce using rule 83 (term_1 -> / factor .)
    -               reduce using rule 83 (term_1 -> / factor .)
    <               reduce using rule 83 (term_1 -> / factor .)
    >               reduce using rule 83 (term_1 -> / factor .)
    EQUAL_TO        reduce using rule 83 (term_1 -> / factor .)
    NOT_EQUAL_TO    reduce using rule 83 (term_1 -> / factor .)
    &               reduce using rule 83 (term_1 -> / factor .)
    |               reduce using rule 83 (term_1 -> / factor .)
    )               reduce using rule 83 (term_1 -> / factor .)
    ,               reduce using rule 83 (term_1 -> / factor .)
    ]               reduce using rule 83 (term_1 -> / factor .)
    ;               reduce using rule 83 (term_1 -> / factor .)
    TO              reduce using rule 83 (term_1 -> / factor .)
    DO              reduce using rule 83 (term_1 -> / factor .)


state 174

    (55) variable_loop_1 -> , variable . variable_loop_1
    (55) variable_loop_1 -> . , variable variable_loop_1
    (56) variable_loop_1 -> . epsilon
    (92) epsilon -> .

    ,               shift and go to state 147
    )               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 145
    variable_loop_1                shift and go to state 186

state 175

    (53) read -> READ ( variable_loop ) ; .

    ID              reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    READ            reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    WRITE           reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    IF              reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    RETURN          reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    WHILE           reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    FOR             reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    }               reduce using rule 53 (read -> READ ( variable_loop ) ; .)


state 176

    (65) condicional -> WHILE ( hyper_exp ) DO . { loop_estatuto }

    {               shift and go to state 187


state 177

    (50) hyper_exp_loop_1 -> , hyper_exp . hyper_exp_loop_1
    (50) hyper_exp_loop_1 -> . , hyper_exp hyper_exp_loop_1
    (51) hyper_exp_loop_1 -> . epsilon
    (92) epsilon -> .

    ,               shift and go to state 151
    )               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 150
    hyper_exp_loop_1               shift and go to state 188

state 178

    (66) no_condicional -> FOR variable = hyper_exp TO . hyper_exp DO { loop_estatuto }
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (85) factor -> . VAL_INT np_push_const
    (86) factor -> . VAL_FLOAT
    (87) factor -> . VAL_STRING
    (88) factor -> . VAL_CHAR
    (89) factor -> . variable
    (90) factor -> . ( hyper_exp )
    (8) variable -> . ID variable_1

    VAL_INT         shift and go to state 104
    VAL_FLOAT       shift and go to state 98
    VAL_STRING      shift and go to state 100
    VAL_CHAR        shift and go to state 99
    (               shift and go to state 97
    ID              shift and go to state 86

    super_exp                      shift and go to state 94
    term                           shift and go to state 95
    hyper_exp                      shift and go to state 189
    exp                            shift and go to state 101
    factor                         shift and go to state 102
    variable                       shift and go to state 103

state 179

    (57) write -> WRITE ( hyper_exp_loop ) ; .

    ID              reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    READ            reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    WRITE           reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    IF              reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    RETURN          reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    WHILE           reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    FOR             reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    }               reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)


state 180

    (58) decision -> IF ( hyper_exp ) THEN . { loop_estatuto } decision_1

    {               shift and go to state 190


state 181

    (16) loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo .

    ;               reduce using rule 16 (loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo .)


state 182

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; . var_opcional { loop_estatuto } np_kill_func
    (6) var_opcional -> . var_declaracion
    (7) var_opcional -> . epsilon
    (11) var_declaracion -> . VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion
    (92) epsilon -> .

    VARS            shift and go to state 9
    {               reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 11
    var_declaracion                shift and go to state 10
    var_opcional                   shift and go to state 191

state 183

    (33) parametro -> tipo ID loop_parametro .

    )               reduce using rule 33 (parametro -> tipo ID loop_parametro .)


state 184

    (35) loop_parametro -> epsilon .

    )               reduce using rule 35 (loop_parametro -> epsilon .)


state 185

    (34) loop_parametro -> , . tipo ID loop_parametro
    (36) tipo -> . INT
    (37) tipo -> . FLOAT
    (38) tipo -> . CHAR

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    tipo                           shift and go to state 192

state 186

    (55) variable_loop_1 -> , variable variable_loop_1 .

    )               reduce using rule 55 (variable_loop_1 -> , variable variable_loop_1 .)


state 187

    (65) condicional -> WHILE ( hyper_exp ) DO { . loop_estatuto }
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (92) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID variable_1
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 92 (epsilon -> .)
    ID              shift and go to state 58
    READ            shift and go to state 52
    WRITE           shift and go to state 65
    IF              shift and go to state 67
    RETURN          shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 61

    asignacion                     shift and go to state 68
    read                           shift and go to state 62
    epsilon                        shift and go to state 63
    decision                       shift and go to state 56
    estatuto                       shift and go to state 57
    write                          shift and go to state 59
    func_return                    shift and go to state 69
    variable                       shift and go to state 66
    func_llamada                   shift and go to state 54
    repeticion                     shift and go to state 70
    loop_estatuto                  shift and go to state 193
    condicional                    shift and go to state 64
    no_condicional                 shift and go to state 60

state 188

    (50) hyper_exp_loop_1 -> , hyper_exp hyper_exp_loop_1 .

    )               reduce using rule 50 (hyper_exp_loop_1 -> , hyper_exp hyper_exp_loop_1 .)


state 189

    (66) no_condicional -> FOR variable = hyper_exp TO hyper_exp . DO { loop_estatuto }

    DO              shift and go to state 194


state 190

    (58) decision -> IF ( hyper_exp ) THEN { . loop_estatuto } decision_1
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (92) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID variable_1
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 92 (epsilon -> .)
    ID              shift and go to state 58
    READ            shift and go to state 52
    WRITE           shift and go to state 65
    IF              shift and go to state 67
    RETURN          shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 61

    write                          shift and go to state 59
    asignacion                     shift and go to state 68
    read                           shift and go to state 62
    epsilon                        shift and go to state 63
    decision                       shift and go to state 56
    estatuto                       shift and go to state 57
    func_return                    shift and go to state 69
    variable                       shift and go to state 66
    func_llamada                   shift and go to state 54
    repeticion                     shift and go to state 70
    loop_estatuto                  shift and go to state 195
    condicional                    shift and go to state 64
    no_condicional                 shift and go to state 60

state 191

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional . { loop_estatuto } np_kill_func

    {               shift and go to state 196


state 192

    (34) loop_parametro -> , tipo . ID loop_parametro

    ID              shift and go to state 197


state 193

    (65) condicional -> WHILE ( hyper_exp ) DO { loop_estatuto . }

    }               shift and go to state 198


state 194

    (66) no_condicional -> FOR variable = hyper_exp TO hyper_exp DO . { loop_estatuto }

    {               shift and go to state 199


state 195

    (58) decision -> IF ( hyper_exp ) THEN { loop_estatuto . } decision_1

    }               shift and go to state 200


state 196

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { . loop_estatuto } np_kill_func
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (92) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID variable_1
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 92 (epsilon -> .)
    ID              shift and go to state 58
    READ            shift and go to state 52
    WRITE           shift and go to state 65
    IF              shift and go to state 67
    RETURN          shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 61

    func_llamada                   shift and go to state 54
    loop_estatuto                  shift and go to state 201
    func_return                    shift and go to state 69
    decision                       shift and go to state 56
    estatuto                       shift and go to state 57
    write                          shift and go to state 59
    read                           shift and go to state 62
    epsilon                        shift and go to state 63
    condicional                    shift and go to state 64
    variable                       shift and go to state 66
    no_condicional                 shift and go to state 60
    asignacion                     shift and go to state 68
    repeticion                     shift and go to state 70

state 197

    (34) loop_parametro -> , tipo ID . loop_parametro
    (34) loop_parametro -> . , tipo ID loop_parametro
    (35) loop_parametro -> . epsilon
    (92) epsilon -> .

    ,               shift and go to state 185
    )               reduce using rule 92 (epsilon -> .)

    loop_parametro                 shift and go to state 202
    epsilon                        shift and go to state 184

state 198

    (65) condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .

    ID              reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    READ            reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    WRITE           reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    IF              reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    RETURN          reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    WHILE           reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    FOR             reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    }               reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)


state 199

    (66) no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { . loop_estatuto }
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (92) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID variable_1
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 92 (epsilon -> .)
    ID              shift and go to state 58
    READ            shift and go to state 52
    WRITE           shift and go to state 65
    IF              shift and go to state 67
    RETURN          shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 61

    asignacion                     shift and go to state 68
    read                           shift and go to state 62
    epsilon                        shift and go to state 63
    decision                       shift and go to state 56
    estatuto                       shift and go to state 57
    write                          shift and go to state 59
    func_return                    shift and go to state 69
    variable                       shift and go to state 66
    func_llamada                   shift and go to state 54
    repeticion                     shift and go to state 70
    loop_estatuto                  shift and go to state 203
    condicional                    shift and go to state 64
    no_condicional                 shift and go to state 60

state 200

    (58) decision -> IF ( hyper_exp ) THEN { loop_estatuto } . decision_1
    (59) decision_1 -> . ELSE { loop_estatuto }
    (60) decision_1 -> . epsilon
    (92) epsilon -> .

    ELSE            shift and go to state 204
    ID              reduce using rule 92 (epsilon -> .)
    READ            reduce using rule 92 (epsilon -> .)
    WRITE           reduce using rule 92 (epsilon -> .)
    IF              reduce using rule 92 (epsilon -> .)
    RETURN          reduce using rule 92 (epsilon -> .)
    WHILE           reduce using rule 92 (epsilon -> .)
    FOR             reduce using rule 92 (epsilon -> .)
    }               reduce using rule 92 (epsilon -> .)

    decision_1                     shift and go to state 205
    epsilon                        shift and go to state 206

state 201

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto . } np_kill_func

    }               shift and go to state 207


state 202

    (34) loop_parametro -> , tipo ID loop_parametro .

    )               reduce using rule 34 (loop_parametro -> , tipo ID loop_parametro .)


state 203

    (66) no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto . }

    }               shift and go to state 208


state 204

    (59) decision_1 -> ELSE . { loop_estatuto }

    {               shift and go to state 209


state 205

    (58) decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .

    ID              reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    READ            reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    WRITE           reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    IF              reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    RETURN          reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    WHILE           reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    FOR             reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    }               reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)


state 206

    (60) decision_1 -> epsilon .

    ID              reduce using rule 60 (decision_1 -> epsilon .)
    READ            reduce using rule 60 (decision_1 -> epsilon .)
    WRITE           reduce using rule 60 (decision_1 -> epsilon .)
    IF              reduce using rule 60 (decision_1 -> epsilon .)
    RETURN          reduce using rule 60 (decision_1 -> epsilon .)
    WHILE           reduce using rule 60 (decision_1 -> epsilon .)
    FOR             reduce using rule 60 (decision_1 -> epsilon .)
    }               reduce using rule 60 (decision_1 -> epsilon .)


state 207

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } . np_kill_func
    (29) np_kill_func -> . epsilon
    (92) epsilon -> .

    FUNCTION        reduce using rule 92 (epsilon -> .)
    MAIN            reduce using rule 92 (epsilon -> .)

    epsilon                        shift and go to state 211
    np_kill_func                   shift and go to state 210

state 208

    (66) no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .

    ID              reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    READ            reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    WRITE           reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    IF              reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    RETURN          reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    WHILE           reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    FOR             reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    }               reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)


state 209

    (59) decision_1 -> ELSE { . loop_estatuto }
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (92) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID variable_1
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 92 (epsilon -> .)
    ID              shift and go to state 58
    READ            shift and go to state 52
    WRITE           shift and go to state 65
    IF              shift and go to state 67
    RETURN          shift and go to state 51
    WHILE           shift and go to state 53
    FOR             shift and go to state 61

    asignacion                     shift and go to state 68
    read                           shift and go to state 62
    epsilon                        shift and go to state 63
    decision                       shift and go to state 56
    estatuto                       shift and go to state 57
    write                          shift and go to state 59
    func_return                    shift and go to state 69
    variable                       shift and go to state 66
    func_llamada                   shift and go to state 54
    repeticion                     shift and go to state 70
    loop_estatuto                  shift and go to state 212
    condicional                    shift and go to state 64
    no_condicional                 shift and go to state 60

state 210

    (23) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func .

    FUNCTION        reduce using rule 23 (func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func .)
    MAIN            reduce using rule 23 (func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func .)


state 211

    (29) np_kill_func -> epsilon .

    FUNCTION        reduce using rule 29 (np_kill_func -> epsilon .)
    MAIN            reduce using rule 29 (np_kill_func -> epsilon .)


state 212

    (59) decision_1 -> ELSE { loop_estatuto . }

    }               shift and go to state 213


state 213

    (59) decision_1 -> ELSE { loop_estatuto } .

    ID              reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    READ            reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    WRITE           reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    IF              reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    RETURN          reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    WHILE           reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    FOR             reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    }               reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)

