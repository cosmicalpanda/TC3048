Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PRINT
    STRING
    VAL_STRING

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main
Rule 2     np_program_start -> epsilon
Rule 3     np_start_dirfunc -> epsilon
Rule 4     main -> MAIN ( ) { loop_estatuto } np_fin_total
Rule 5     np_fin_total -> epsilon
Rule 6     var_opcional -> var_declaracion
Rule 7     var_opcional -> epsilon
Rule 8     variable -> ID np_single_var_search
Rule 9     variable -> ID [ hyper_exp ]
Rule 10    var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion
Rule 11    np_var_prep -> epsilon
Rule 12    loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion
Rule 13    loop_var_declaracion -> epsilon
Rule 14    var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
Rule 15    loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo
Rule 16    loop_var_decl_mismo_tipo -> epsilon
Rule 17    np_set_curr_var_type -> epsilon
Rule 18    np_set_curr_var_name -> epsilon
Rule 19    np_add_var_to_varstable -> epsilon
Rule 20    func_programa_loop -> func_definicion func_programa_loop
Rule 21    func_programa_loop -> epsilon
Rule 22    func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
Rule 23    func_tipo_retorno -> tipo
Rule 24    func_tipo_retorno -> VOID
Rule 25    np_func_tipo_retorno -> epsilon
Rule 26    np_func_id -> epsilon
Rule 27    np_add_to_func_dir -> epsilon
Rule 28    np_kill_func -> epsilon
Rule 29    np_prep_func_params -> epsilon
Rule 30    func_parametro -> parametro
Rule 31    func_parametro -> epsilon
Rule 32    parametro -> tipo ID loop_parametro
Rule 33    loop_parametro -> , tipo ID loop_parametro
Rule 34    loop_parametro -> epsilon
Rule 35    tipo -> INT
Rule 36    tipo -> FLOAT
Rule 37    tipo -> CHAR
Rule 38    tipo -> BOOL
Rule 39    estatuto -> asignacion
Rule 40    estatuto -> func_llamada ;
Rule 41    estatuto -> read
Rule 42    estatuto -> write
Rule 43    estatuto -> decision
Rule 44    estatuto -> repeticion
Rule 45    estatuto -> func_return
Rule 46    asignacion -> variable = hyper_exp ;
Rule 47    func_llamada -> ID ( )
Rule 48    func_llamada -> ID ( hyper_exp_loop )
Rule 49    hyper_exp_loop -> hyper_exp hyper_exp_loop_1
Rule 50    hyper_exp_loop_1 -> , hyper_exp hyper_exp_loop_1
Rule 51    hyper_exp_loop_1 -> epsilon
Rule 52    func_return -> RETURN ( hyper_exp ) ;
Rule 53    read -> READ ( variable_loop ) ;
Rule 54    variable_loop -> variable variable_loop_1
Rule 55    variable_loop_1 -> , variable variable_loop_1
Rule 56    variable_loop_1 -> epsilon
Rule 57    write -> WRITE ( hyper_exp_loop ) ;
Rule 58    decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1
Rule 59    decision_1 -> ELSE { loop_estatuto }
Rule 60    decision_1 -> epsilon
Rule 61    loop_estatuto -> estatuto loop_estatuto
Rule 62    loop_estatuto -> epsilon
Rule 63    repeticion -> condicional
Rule 64    repeticion -> no_condicional
Rule 65    condicional -> WHILE ( hyper_exp ) DO { loop_estatuto }
Rule 66    no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }
Rule 67    hyper_exp -> super_exp hyper_exp_1
Rule 68    hyper_exp_1 -> & np_push_operator_stack super_exp
Rule 69    hyper_exp_1 -> | np_push_operator_stack super_exp
Rule 70    hyper_exp_1 -> epsilon
Rule 71    super_exp -> exp super_exp_1
Rule 72    super_exp_1 -> < np_push_operator_stack exp
Rule 73    super_exp_1 -> > np_push_operator_stack exp
Rule 74    super_exp_1 -> EQUAL_TO np_push_operator_stack exp
Rule 75    super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp
Rule 76    super_exp_1 -> epsilon
Rule 77    exp -> term exp_1
Rule 78    exp_1 -> + np_push_operator_stack term
Rule 79    exp_1 -> - np_push_operator_stack term
Rule 80    exp_1 -> epsilon
Rule 81    term -> factor term_1
Rule 82    term_1 -> * np_push_operator_stack factor
Rule 83    term_1 -> / np_push_operator_stack factor
Rule 84    term_1 -> epsilon
Rule 85    np_push_operator_stack -> epsilon
Rule 86    factor -> constant
Rule 87    factor -> variable
Rule 88    factor -> ( hyper_exp )
Rule 89    constant -> VAL_INT np_push_const_int
Rule 90    constant -> VAL_FLOAT np_push_const_float
Rule 91    constant -> VAL_CHAR np_push_const_char
Rule 92    np_push_const_int -> epsilon
Rule 93    np_push_const_float -> epsilon
Rule 94    np_push_const_char -> epsilon
Rule 95    np_single_var_search -> epsilon
Rule 96    epsilon -> <empty>

Terminals, with rules where they appear

&                    : 68
(                    : 4 22 47 48 52 53 57 58 65 88
)                    : 4 22 47 48 52 53 57 58 65 88
*                    : 82
+                    : 78
,                    : 15 33 50 55
-                    : 79
/                    : 83
;                    : 1 14 22 40 46 52 53 57
<                    : 72
=                    : 46 66
>                    : 73
BOOL                 : 38
CHAR                 : 37
DO                   : 65 66
ELSE                 : 59
EQUAL_TO             : 74
FLOAT                : 36
FOR                  : 66
FUNCTION             : 22
ID                   : 1 8 9 14 15 22 32 33 47 48
IF                   : 58
INT                  : 35
MAIN                 : 4
NOT_EQUAL_TO         : 75
PRINT                : 
PROGRAM              : 1
READ                 : 53
RETURN               : 52
STRING               : 
THEN                 : 58
TO                   : 66
VAL_CHAR             : 91
VAL_FLOAT            : 90
VAL_INT              : 89
VAL_STRING           : 
VARS                 : 10
VOID                 : 24
WHILE                : 65
WRITE                : 57
[                    : 9
]                    : 9
error                : 
{                    : 4 22 58 59 65 66
|                    : 69
}                    : 4 22 58 59 65 66

Nonterminals, with rules where they appear

asignacion           : 39
condicional          : 63
constant             : 86
decision             : 43
decision_1           : 58
epsilon              : 2 3 5 7 11 13 16 17 18 19 21 25 26 27 28 29 31 34 51 56 60 62 70 76 80 84 85 92 93 94 95
estatuto             : 61
exp                  : 71 72 73 74 75
exp_1                : 77
factor               : 81 82 83
func_definicion      : 20
func_llamada         : 40
func_parametro       : 22
func_programa_loop   : 1 20
func_return          : 45
func_tipo_retorno    : 22
hyper_exp            : 9 46 49 50 52 58 65 66 66 88
hyper_exp_1          : 67
hyper_exp_loop       : 48 57
hyper_exp_loop_1     : 49 50
loop_estatuto        : 4 22 58 59 61 65 66
loop_parametro       : 32 33
loop_var_decl_mismo_tipo : 14 15
loop_var_declaracion : 10 12
main                 : 1
no_condicional       : 64
np_add_to_func_dir   : 22
np_add_var_to_varstable : 14 15
np_fin_total         : 4
np_func_id           : 22
np_func_tipo_retorno : 22
np_kill_func         : 22
np_prep_func_params  : 22
np_program_start     : 1
np_push_const_char   : 91
np_push_const_float  : 90
np_push_const_int    : 89
np_push_operator_stack : 68 69 72 73 74 75 78 79 82 83
np_set_curr_var_name : 14 15
np_set_curr_var_type : 14
np_single_var_search : 8
np_start_dirfunc     : 1
np_var_prep          : 10
parametro            : 30
programa             : 0
read                 : 41
repeticion           : 44
super_exp            : 67 68 69
super_exp_1          : 71
term                 : 77 78 79
term_1               : 81
tipo                 : 14 23 32 33
var_declaracion      : 6
var_declaracion_mismo_tipo : 10 12
var_opcional         : 1 22
variable             : 46 54 55 66 87
variable_loop        : 53
variable_loop_1      : 54 55
write                : 42

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main
    (2) np_program_start -> . epsilon
    (96) epsilon -> .

    ID              reduce using rule 96 (epsilon -> .)

    np_program_start               shift and go to state 3
    epsilon                        shift and go to state 4

state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM np_program_start . ID np_start_dirfunc ; var_opcional func_programa_loop main

    ID              shift and go to state 5


state 4

    (2) np_program_start -> epsilon .

    ID              reduce using rule 2 (np_program_start -> epsilon .)


state 5

    (1) programa -> PROGRAM np_program_start ID . np_start_dirfunc ; var_opcional func_programa_loop main
    (3) np_start_dirfunc -> . epsilon
    (96) epsilon -> .

    ;               reduce using rule 96 (epsilon -> .)

    np_start_dirfunc               shift and go to state 6
    epsilon                        shift and go to state 7

state 6

    (1) programa -> PROGRAM np_program_start ID np_start_dirfunc . ; var_opcional func_programa_loop main

    ;               shift and go to state 8


state 7

    (3) np_start_dirfunc -> epsilon .

    ;               reduce using rule 3 (np_start_dirfunc -> epsilon .)


state 8

    (1) programa -> PROGRAM np_program_start ID np_start_dirfunc ; . var_opcional func_programa_loop main
    (6) var_opcional -> . var_declaracion
    (7) var_opcional -> . epsilon
    (10) var_declaracion -> . VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion
    (96) epsilon -> .

    VARS            shift and go to state 9
    FUNCTION        reduce using rule 96 (epsilon -> .)
    MAIN            reduce using rule 96 (epsilon -> .)

    var_declaracion                shift and go to state 10
    epsilon                        shift and go to state 11
    var_opcional                   shift and go to state 12

state 9

    (10) var_declaracion -> VARS . np_var_prep var_declaracion_mismo_tipo loop_var_declaracion
    (11) np_var_prep -> . epsilon
    (96) epsilon -> .

    INT             reduce using rule 96 (epsilon -> .)
    FLOAT           reduce using rule 96 (epsilon -> .)
    CHAR            reduce using rule 96 (epsilon -> .)
    BOOL            reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 13
    np_var_prep                    shift and go to state 14

state 10

    (6) var_opcional -> var_declaracion .

    FUNCTION        reduce using rule 6 (var_opcional -> var_declaracion .)
    MAIN            reduce using rule 6 (var_opcional -> var_declaracion .)
    {               reduce using rule 6 (var_opcional -> var_declaracion .)


state 11

    (7) var_opcional -> epsilon .

    FUNCTION        reduce using rule 7 (var_opcional -> epsilon .)
    MAIN            reduce using rule 7 (var_opcional -> epsilon .)
    {               reduce using rule 7 (var_opcional -> epsilon .)


state 12

    (1) programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional . func_programa_loop main
    (20) func_programa_loop -> . func_definicion func_programa_loop
    (21) func_programa_loop -> . epsilon
    (22) func_definicion -> . FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (96) epsilon -> .

    FUNCTION        shift and go to state 16
    MAIN            reduce using rule 96 (epsilon -> .)

    func_definicion                shift and go to state 15
    epsilon                        shift and go to state 17
    func_programa_loop             shift and go to state 18

state 13

    (11) np_var_prep -> epsilon .

    INT             reduce using rule 11 (np_var_prep -> epsilon .)
    FLOAT           reduce using rule 11 (np_var_prep -> epsilon .)
    CHAR            reduce using rule 11 (np_var_prep -> epsilon .)
    BOOL            reduce using rule 11 (np_var_prep -> epsilon .)


state 14

    (10) var_declaracion -> VARS np_var_prep . var_declaracion_mismo_tipo loop_var_declaracion
    (14) var_declaracion_mismo_tipo -> . tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 24

    tipo                           shift and go to state 19
    var_declaracion_mismo_tipo     shift and go to state 23

state 15

    (20) func_programa_loop -> func_definicion . func_programa_loop
    (20) func_programa_loop -> . func_definicion func_programa_loop
    (21) func_programa_loop -> . epsilon
    (22) func_definicion -> . FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (96) epsilon -> .

    FUNCTION        shift and go to state 16
    MAIN            reduce using rule 96 (epsilon -> .)

    func_definicion                shift and go to state 15
    epsilon                        shift and go to state 17
    func_programa_loop             shift and go to state 25

state 16

    (22) func_definicion -> FUNCTION . func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (23) func_tipo_retorno -> . tipo
    (24) func_tipo_retorno -> . VOID
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . BOOL

    VOID            shift and go to state 26
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 24

    func_tipo_retorno              shift and go to state 28
    tipo                           shift and go to state 27

state 17

    (21) func_programa_loop -> epsilon .

    MAIN            reduce using rule 21 (func_programa_loop -> epsilon .)


state 18

    (1) programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop . main
    (4) main -> . MAIN ( ) { loop_estatuto } np_fin_total

    MAIN            shift and go to state 29

    main                           shift and go to state 30

state 19

    (14) var_declaracion_mismo_tipo -> tipo . np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (17) np_set_curr_var_type -> . epsilon
    (96) epsilon -> .

    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 31
    np_set_curr_var_type           shift and go to state 32

state 20

    (35) tipo -> INT .

    ID              reduce using rule 35 (tipo -> INT .)


state 21

    (36) tipo -> FLOAT .

    ID              reduce using rule 36 (tipo -> FLOAT .)


state 22

    (37) tipo -> CHAR .

    ID              reduce using rule 37 (tipo -> CHAR .)


state 23

    (10) var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo . loop_var_declaracion
    (12) loop_var_declaracion -> . var_declaracion_mismo_tipo loop_var_declaracion
    (13) loop_var_declaracion -> . epsilon
    (14) var_declaracion_mismo_tipo -> . tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (96) epsilon -> .
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . BOOL

    FUNCTION        reduce using rule 96 (epsilon -> .)
    MAIN            reduce using rule 96 (epsilon -> .)
    {               reduce using rule 96 (epsilon -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 24

    tipo                           shift and go to state 19
    epsilon                        shift and go to state 33
    var_declaracion_mismo_tipo     shift and go to state 34
    loop_var_declaracion           shift and go to state 35

state 24

    (38) tipo -> BOOL .

    ID              reduce using rule 38 (tipo -> BOOL .)


state 25

    (20) func_programa_loop -> func_definicion func_programa_loop .

    MAIN            reduce using rule 20 (func_programa_loop -> func_definicion func_programa_loop .)


state 26

    (24) func_tipo_retorno -> VOID .

    ID              reduce using rule 24 (func_tipo_retorno -> VOID .)


state 27

    (23) func_tipo_retorno -> tipo .

    ID              reduce using rule 23 (func_tipo_retorno -> tipo .)


state 28

    (22) func_definicion -> FUNCTION func_tipo_retorno . np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (25) np_func_tipo_retorno -> . epsilon
    (96) epsilon -> .

    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 37
    np_func_tipo_retorno           shift and go to state 36

state 29

    (4) main -> MAIN . ( ) { loop_estatuto } np_fin_total

    (               shift and go to state 38


state 30

    (1) programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main .

    $end            reduce using rule 1 (programa -> PROGRAM np_program_start ID np_start_dirfunc ; var_opcional func_programa_loop main .)


state 31

    (17) np_set_curr_var_type -> epsilon .

    ID              reduce using rule 17 (np_set_curr_var_type -> epsilon .)


state 32

    (14) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type . ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;

    ID              shift and go to state 39


state 33

    (13) loop_var_declaracion -> epsilon .

    FUNCTION        reduce using rule 13 (loop_var_declaracion -> epsilon .)
    MAIN            reduce using rule 13 (loop_var_declaracion -> epsilon .)
    {               reduce using rule 13 (loop_var_declaracion -> epsilon .)


state 34

    (12) loop_var_declaracion -> var_declaracion_mismo_tipo . loop_var_declaracion
    (12) loop_var_declaracion -> . var_declaracion_mismo_tipo loop_var_declaracion
    (13) loop_var_declaracion -> . epsilon
    (14) var_declaracion_mismo_tipo -> . tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (96) epsilon -> .
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . BOOL

    FUNCTION        reduce using rule 96 (epsilon -> .)
    MAIN            reduce using rule 96 (epsilon -> .)
    {               reduce using rule 96 (epsilon -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 24

    tipo                           shift and go to state 19
    epsilon                        shift and go to state 33
    var_declaracion_mismo_tipo     shift and go to state 34
    loop_var_declaracion           shift and go to state 40

state 35

    (10) var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion .

    FUNCTION        reduce using rule 10 (var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion .)
    MAIN            reduce using rule 10 (var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion .)
    {               reduce using rule 10 (var_declaracion -> VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion .)


state 36

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno . ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func

    ID              shift and go to state 41


state 37

    (25) np_func_tipo_retorno -> epsilon .

    ID              reduce using rule 25 (np_func_tipo_retorno -> epsilon .)


state 38

    (4) main -> MAIN ( . ) { loop_estatuto } np_fin_total

    )               shift and go to state 42


state 39

    (14) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID . np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (18) np_set_curr_var_name -> . epsilon
    (96) epsilon -> .

    ,               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 43
    np_set_curr_var_name           shift and go to state 44

state 40

    (12) loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion .

    FUNCTION        reduce using rule 12 (loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion .)
    MAIN            reduce using rule 12 (loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion .)
    {               reduce using rule 12 (loop_var_declaracion -> var_declaracion_mismo_tipo loop_var_declaracion .)


state 41

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID . np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (26) np_func_id -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 45
    np_func_id                     shift and go to state 46

state 42

    (4) main -> MAIN ( ) . { loop_estatuto } np_fin_total

    {               shift and go to state 47


state 43

    (18) np_set_curr_var_name -> epsilon .

    ,               reduce using rule 18 (np_set_curr_var_name -> epsilon .)
    ;               reduce using rule 18 (np_set_curr_var_name -> epsilon .)


state 44

    (14) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name . np_add_var_to_varstable loop_var_decl_mismo_tipo ;
    (19) np_add_var_to_varstable -> . epsilon
    (96) epsilon -> .

    ,               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)

    np_add_var_to_varstable        shift and go to state 48
    epsilon                        shift and go to state 49

state 45

    (26) np_func_id -> epsilon .

    (               reduce using rule 26 (np_func_id -> epsilon .)


state 46

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id . np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (27) np_add_to_func_dir -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 50
    np_add_to_func_dir             shift and go to state 51

state 47

    (4) main -> MAIN ( ) { . loop_estatuto } np_fin_total
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (96) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 96 (epsilon -> .)
    ID              shift and go to state 59
    READ            shift and go to state 53
    WRITE           shift and go to state 66
    IF              shift and go to state 68
    RETURN          shift and go to state 52
    WHILE           shift and go to state 54
    FOR             shift and go to state 62

    asignacion                     shift and go to state 69
    read                           shift and go to state 63
    epsilon                        shift and go to state 64
    decision                       shift and go to state 57
    estatuto                       shift and go to state 58
    write                          shift and go to state 60
    func_return                    shift and go to state 70
    variable                       shift and go to state 67
    func_llamada                   shift and go to state 55
    repeticion                     shift and go to state 71
    loop_estatuto                  shift and go to state 56
    condicional                    shift and go to state 65
    no_condicional                 shift and go to state 61

state 48

    (14) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable . loop_var_decl_mismo_tipo ;
    (15) loop_var_decl_mismo_tipo -> . , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo
    (16) loop_var_decl_mismo_tipo -> . epsilon
    (96) epsilon -> .

    ,               shift and go to state 73
    ;               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 72
    loop_var_decl_mismo_tipo       shift and go to state 74

state 49

    (19) np_add_var_to_varstable -> epsilon .

    ,               reduce using rule 19 (np_add_var_to_varstable -> epsilon .)
    ;               reduce using rule 19 (np_add_var_to_varstable -> epsilon .)


state 50

    (27) np_add_to_func_dir -> epsilon .

    (               reduce using rule 27 (np_add_to_func_dir -> epsilon .)


state 51

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir . ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func

    (               shift and go to state 75


state 52

    (52) func_return -> RETURN . ( hyper_exp ) ;

    (               shift and go to state 76


state 53

    (53) read -> READ . ( variable_loop ) ;

    (               shift and go to state 77


state 54

    (65) condicional -> WHILE . ( hyper_exp ) DO { loop_estatuto }

    (               shift and go to state 78


state 55

    (40) estatuto -> func_llamada . ;

    ;               shift and go to state 79


state 56

    (4) main -> MAIN ( ) { loop_estatuto . } np_fin_total

    }               shift and go to state 80


state 57

    (43) estatuto -> decision .

    ID              reduce using rule 43 (estatuto -> decision .)
    READ            reduce using rule 43 (estatuto -> decision .)
    WRITE           reduce using rule 43 (estatuto -> decision .)
    IF              reduce using rule 43 (estatuto -> decision .)
    RETURN          reduce using rule 43 (estatuto -> decision .)
    WHILE           reduce using rule 43 (estatuto -> decision .)
    FOR             reduce using rule 43 (estatuto -> decision .)
    }               reduce using rule 43 (estatuto -> decision .)


state 58

    (61) loop_estatuto -> estatuto . loop_estatuto
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (96) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 96 (epsilon -> .)
    ID              shift and go to state 59
    READ            shift and go to state 53
    WRITE           shift and go to state 66
    IF              shift and go to state 68
    RETURN          shift and go to state 52
    WHILE           shift and go to state 54
    FOR             shift and go to state 62

    asignacion                     shift and go to state 69
    read                           shift and go to state 63
    epsilon                        shift and go to state 64
    decision                       shift and go to state 57
    estatuto                       shift and go to state 58
    write                          shift and go to state 60
    func_return                    shift and go to state 70
    variable                       shift and go to state 67
    func_llamada                   shift and go to state 55
    repeticion                     shift and go to state 71
    loop_estatuto                  shift and go to state 81
    condicional                    shift and go to state 65
    no_condicional                 shift and go to state 61

state 59

    (47) func_llamada -> ID . ( )
    (48) func_llamada -> ID . ( hyper_exp_loop )
    (8) variable -> ID . np_single_var_search
    (9) variable -> ID . [ hyper_exp ]
    (95) np_single_var_search -> . epsilon
    (96) epsilon -> .

    (               shift and go to state 83
    [               shift and go to state 85
    =               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 84
    np_single_var_search           shift and go to state 82

state 60

    (42) estatuto -> write .

    ID              reduce using rule 42 (estatuto -> write .)
    READ            reduce using rule 42 (estatuto -> write .)
    WRITE           reduce using rule 42 (estatuto -> write .)
    IF              reduce using rule 42 (estatuto -> write .)
    RETURN          reduce using rule 42 (estatuto -> write .)
    WHILE           reduce using rule 42 (estatuto -> write .)
    FOR             reduce using rule 42 (estatuto -> write .)
    }               reduce using rule 42 (estatuto -> write .)


state 61

    (64) repeticion -> no_condicional .

    ID              reduce using rule 64 (repeticion -> no_condicional .)
    READ            reduce using rule 64 (repeticion -> no_condicional .)
    WRITE           reduce using rule 64 (repeticion -> no_condicional .)
    IF              reduce using rule 64 (repeticion -> no_condicional .)
    RETURN          reduce using rule 64 (repeticion -> no_condicional .)
    WHILE           reduce using rule 64 (repeticion -> no_condicional .)
    FOR             reduce using rule 64 (repeticion -> no_condicional .)
    }               reduce using rule 64 (repeticion -> no_condicional .)


state 62

    (66) no_condicional -> FOR . variable = hyper_exp TO hyper_exp DO { loop_estatuto }
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    ID              shift and go to state 87

    variable                       shift and go to state 86

state 63

    (41) estatuto -> read .

    ID              reduce using rule 41 (estatuto -> read .)
    READ            reduce using rule 41 (estatuto -> read .)
    WRITE           reduce using rule 41 (estatuto -> read .)
    IF              reduce using rule 41 (estatuto -> read .)
    RETURN          reduce using rule 41 (estatuto -> read .)
    WHILE           reduce using rule 41 (estatuto -> read .)
    FOR             reduce using rule 41 (estatuto -> read .)
    }               reduce using rule 41 (estatuto -> read .)


state 64

    (62) loop_estatuto -> epsilon .

    }               reduce using rule 62 (loop_estatuto -> epsilon .)


state 65

    (63) repeticion -> condicional .

    ID              reduce using rule 63 (repeticion -> condicional .)
    READ            reduce using rule 63 (repeticion -> condicional .)
    WRITE           reduce using rule 63 (repeticion -> condicional .)
    IF              reduce using rule 63 (repeticion -> condicional .)
    RETURN          reduce using rule 63 (repeticion -> condicional .)
    WHILE           reduce using rule 63 (repeticion -> condicional .)
    FOR             reduce using rule 63 (repeticion -> condicional .)
    }               reduce using rule 63 (repeticion -> condicional .)


state 66

    (57) write -> WRITE . ( hyper_exp_loop ) ;

    (               shift and go to state 88


state 67

    (46) asignacion -> variable . = hyper_exp ;

    =               shift and go to state 89


state 68

    (58) decision -> IF . ( hyper_exp ) THEN { loop_estatuto } decision_1

    (               shift and go to state 90


state 69

    (39) estatuto -> asignacion .

    ID              reduce using rule 39 (estatuto -> asignacion .)
    READ            reduce using rule 39 (estatuto -> asignacion .)
    WRITE           reduce using rule 39 (estatuto -> asignacion .)
    IF              reduce using rule 39 (estatuto -> asignacion .)
    RETURN          reduce using rule 39 (estatuto -> asignacion .)
    WHILE           reduce using rule 39 (estatuto -> asignacion .)
    FOR             reduce using rule 39 (estatuto -> asignacion .)
    }               reduce using rule 39 (estatuto -> asignacion .)


state 70

    (45) estatuto -> func_return .

    ID              reduce using rule 45 (estatuto -> func_return .)
    READ            reduce using rule 45 (estatuto -> func_return .)
    WRITE           reduce using rule 45 (estatuto -> func_return .)
    IF              reduce using rule 45 (estatuto -> func_return .)
    RETURN          reduce using rule 45 (estatuto -> func_return .)
    WHILE           reduce using rule 45 (estatuto -> func_return .)
    FOR             reduce using rule 45 (estatuto -> func_return .)
    }               reduce using rule 45 (estatuto -> func_return .)


state 71

    (44) estatuto -> repeticion .

    ID              reduce using rule 44 (estatuto -> repeticion .)
    READ            reduce using rule 44 (estatuto -> repeticion .)
    WRITE           reduce using rule 44 (estatuto -> repeticion .)
    IF              reduce using rule 44 (estatuto -> repeticion .)
    RETURN          reduce using rule 44 (estatuto -> repeticion .)
    WHILE           reduce using rule 44 (estatuto -> repeticion .)
    FOR             reduce using rule 44 (estatuto -> repeticion .)
    }               reduce using rule 44 (estatuto -> repeticion .)


state 72

    (16) loop_var_decl_mismo_tipo -> epsilon .

    ;               reduce using rule 16 (loop_var_decl_mismo_tipo -> epsilon .)


state 73

    (15) loop_var_decl_mismo_tipo -> , . ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo

    ID              shift and go to state 91


state 74

    (14) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo . ;

    ;               shift and go to state 92


state 75

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( . np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (29) np_prep_func_params -> . epsilon
    (96) epsilon -> .

    INT             reduce using rule 96 (epsilon -> .)
    FLOAT           reduce using rule 96 (epsilon -> .)
    CHAR            reduce using rule 96 (epsilon -> .)
    BOOL            reduce using rule 96 (epsilon -> .)
    )               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 94
    np_prep_func_params            shift and go to state 93

state 76

    (52) func_return -> RETURN ( . hyper_exp ) ;
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 99
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 77

    (53) read -> READ ( . variable_loop ) ;
    (54) variable_loop -> . variable variable_loop_1
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    ID              shift and go to state 87

    variable                       shift and go to state 106
    variable_loop                  shift and go to state 107

state 78

    (65) condicional -> WHILE ( . hyper_exp ) DO { loop_estatuto }
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 108
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 79

    (40) estatuto -> func_llamada ; .

    ID              reduce using rule 40 (estatuto -> func_llamada ; .)
    READ            reduce using rule 40 (estatuto -> func_llamada ; .)
    WRITE           reduce using rule 40 (estatuto -> func_llamada ; .)
    IF              reduce using rule 40 (estatuto -> func_llamada ; .)
    RETURN          reduce using rule 40 (estatuto -> func_llamada ; .)
    WHILE           reduce using rule 40 (estatuto -> func_llamada ; .)
    FOR             reduce using rule 40 (estatuto -> func_llamada ; .)
    }               reduce using rule 40 (estatuto -> func_llamada ; .)


state 80

    (4) main -> MAIN ( ) { loop_estatuto } . np_fin_total
    (5) np_fin_total -> . epsilon
    (96) epsilon -> .

    $end            reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 109
    np_fin_total                   shift and go to state 110

state 81

    (61) loop_estatuto -> estatuto loop_estatuto .

    }               reduce using rule 61 (loop_estatuto -> estatuto loop_estatuto .)


state 82

    (8) variable -> ID np_single_var_search .

    *               reduce using rule 8 (variable -> ID np_single_var_search .)
    /               reduce using rule 8 (variable -> ID np_single_var_search .)
    +               reduce using rule 8 (variable -> ID np_single_var_search .)
    -               reduce using rule 8 (variable -> ID np_single_var_search .)
    <               reduce using rule 8 (variable -> ID np_single_var_search .)
    >               reduce using rule 8 (variable -> ID np_single_var_search .)
    EQUAL_TO        reduce using rule 8 (variable -> ID np_single_var_search .)
    NOT_EQUAL_TO    reduce using rule 8 (variable -> ID np_single_var_search .)
    &               reduce using rule 8 (variable -> ID np_single_var_search .)
    |               reduce using rule 8 (variable -> ID np_single_var_search .)
    )               reduce using rule 8 (variable -> ID np_single_var_search .)
    ,               reduce using rule 8 (variable -> ID np_single_var_search .)
    ]               reduce using rule 8 (variable -> ID np_single_var_search .)
    ;               reduce using rule 8 (variable -> ID np_single_var_search .)
    TO              reduce using rule 8 (variable -> ID np_single_var_search .)
    DO              reduce using rule 8 (variable -> ID np_single_var_search .)
    =               reduce using rule 8 (variable -> ID np_single_var_search .)


state 83

    (47) func_llamada -> ID ( . )
    (48) func_llamada -> ID ( . hyper_exp_loop )
    (49) hyper_exp_loop -> . hyper_exp hyper_exp_loop_1
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    )               shift and go to state 112
    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 113
    constant                       shift and go to state 95
    hyper_exp_loop                 shift and go to state 111
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 84

    (95) np_single_var_search -> epsilon .

    =               reduce using rule 95 (np_single_var_search -> epsilon .)
    *               reduce using rule 95 (np_single_var_search -> epsilon .)
    /               reduce using rule 95 (np_single_var_search -> epsilon .)
    +               reduce using rule 95 (np_single_var_search -> epsilon .)
    -               reduce using rule 95 (np_single_var_search -> epsilon .)
    <               reduce using rule 95 (np_single_var_search -> epsilon .)
    >               reduce using rule 95 (np_single_var_search -> epsilon .)
    EQUAL_TO        reduce using rule 95 (np_single_var_search -> epsilon .)
    NOT_EQUAL_TO    reduce using rule 95 (np_single_var_search -> epsilon .)
    &               reduce using rule 95 (np_single_var_search -> epsilon .)
    |               reduce using rule 95 (np_single_var_search -> epsilon .)
    )               reduce using rule 95 (np_single_var_search -> epsilon .)
    ,               reduce using rule 95 (np_single_var_search -> epsilon .)
    ]               reduce using rule 95 (np_single_var_search -> epsilon .)
    ;               reduce using rule 95 (np_single_var_search -> epsilon .)
    TO              reduce using rule 95 (np_single_var_search -> epsilon .)
    DO              reduce using rule 95 (np_single_var_search -> epsilon .)


state 85

    (9) variable -> ID [ . hyper_exp ]
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 114
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 86

    (66) no_condicional -> FOR variable . = hyper_exp TO hyper_exp DO { loop_estatuto }

    =               shift and go to state 115


state 87

    (8) variable -> ID . np_single_var_search
    (9) variable -> ID . [ hyper_exp ]
    (95) np_single_var_search -> . epsilon
    (96) epsilon -> .

    [               shift and go to state 85
    =               reduce using rule 96 (epsilon -> .)
    *               reduce using rule 96 (epsilon -> .)
    /               reduce using rule 96 (epsilon -> .)
    +               reduce using rule 96 (epsilon -> .)
    -               reduce using rule 96 (epsilon -> .)
    <               reduce using rule 96 (epsilon -> .)
    >               reduce using rule 96 (epsilon -> .)
    EQUAL_TO        reduce using rule 96 (epsilon -> .)
    NOT_EQUAL_TO    reduce using rule 96 (epsilon -> .)
    &               reduce using rule 96 (epsilon -> .)
    |               reduce using rule 96 (epsilon -> .)
    )               reduce using rule 96 (epsilon -> .)
    ,               reduce using rule 96 (epsilon -> .)
    ]               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)
    TO              reduce using rule 96 (epsilon -> .)
    DO              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 84
    np_single_var_search           shift and go to state 82

state 88

    (57) write -> WRITE ( . hyper_exp_loop ) ;
    (49) hyper_exp_loop -> . hyper_exp hyper_exp_loop_1
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 113
    constant                       shift and go to state 95
    hyper_exp_loop                 shift and go to state 116
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 89

    (46) asignacion -> variable = . hyper_exp ;
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 117
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 90

    (58) decision -> IF ( . hyper_exp ) THEN { loop_estatuto } decision_1
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 118
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 91

    (15) loop_var_decl_mismo_tipo -> , ID . np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo
    (18) np_set_curr_var_name -> . epsilon
    (96) epsilon -> .

    ,               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 43
    np_set_curr_var_name           shift and go to state 119

state 92

    (14) var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .

    INT             reduce using rule 14 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    FLOAT           reduce using rule 14 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    CHAR            reduce using rule 14 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    BOOL            reduce using rule 14 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    FUNCTION        reduce using rule 14 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    MAIN            reduce using rule 14 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)
    {               reduce using rule 14 (var_declaracion_mismo_tipo -> tipo np_set_curr_var_type ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo ; .)


state 93

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params . func_parametro ) ; var_opcional { loop_estatuto } np_kill_func
    (30) func_parametro -> . parametro
    (31) func_parametro -> . epsilon
    (32) parametro -> . tipo ID loop_parametro
    (96) epsilon -> .
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . BOOL

    )               reduce using rule 96 (epsilon -> .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 24

    tipo                           shift and go to state 121
    parametro                      shift and go to state 122
    epsilon                        shift and go to state 123
    func_parametro                 shift and go to state 120

state 94

    (29) np_prep_func_params -> epsilon .

    INT             reduce using rule 29 (np_prep_func_params -> epsilon .)
    FLOAT           reduce using rule 29 (np_prep_func_params -> epsilon .)
    CHAR            reduce using rule 29 (np_prep_func_params -> epsilon .)
    BOOL            reduce using rule 29 (np_prep_func_params -> epsilon .)
    )               reduce using rule 29 (np_prep_func_params -> epsilon .)


state 95

    (86) factor -> constant .

    *               reduce using rule 86 (factor -> constant .)
    /               reduce using rule 86 (factor -> constant .)
    +               reduce using rule 86 (factor -> constant .)
    -               reduce using rule 86 (factor -> constant .)
    <               reduce using rule 86 (factor -> constant .)
    >               reduce using rule 86 (factor -> constant .)
    EQUAL_TO        reduce using rule 86 (factor -> constant .)
    NOT_EQUAL_TO    reduce using rule 86 (factor -> constant .)
    &               reduce using rule 86 (factor -> constant .)
    |               reduce using rule 86 (factor -> constant .)
    TO              reduce using rule 86 (factor -> constant .)
    )               reduce using rule 86 (factor -> constant .)
    ,               reduce using rule 86 (factor -> constant .)
    ]               reduce using rule 86 (factor -> constant .)
    ;               reduce using rule 86 (factor -> constant .)
    DO              reduce using rule 86 (factor -> constant .)


state 96

    (67) hyper_exp -> super_exp . hyper_exp_1
    (68) hyper_exp_1 -> . & np_push_operator_stack super_exp
    (69) hyper_exp_1 -> . | np_push_operator_stack super_exp
    (70) hyper_exp_1 -> . epsilon
    (96) epsilon -> .

    &               shift and go to state 124
    |               shift and go to state 127
    )               reduce using rule 96 (epsilon -> .)
    ,               reduce using rule 96 (epsilon -> .)
    ]               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)
    TO              reduce using rule 96 (epsilon -> .)
    DO              reduce using rule 96 (epsilon -> .)

    hyper_exp_1                    shift and go to state 126
    epsilon                        shift and go to state 125

state 97

    (88) factor -> ( . hyper_exp )
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 128
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 98

    (81) term -> factor . term_1
    (82) term_1 -> . * np_push_operator_stack factor
    (83) term_1 -> . / np_push_operator_stack factor
    (84) term_1 -> . epsilon
    (96) epsilon -> .

    *               shift and go to state 130
    /               shift and go to state 131
    +               reduce using rule 96 (epsilon -> .)
    -               reduce using rule 96 (epsilon -> .)
    <               reduce using rule 96 (epsilon -> .)
    >               reduce using rule 96 (epsilon -> .)
    EQUAL_TO        reduce using rule 96 (epsilon -> .)
    NOT_EQUAL_TO    reduce using rule 96 (epsilon -> .)
    &               reduce using rule 96 (epsilon -> .)
    |               reduce using rule 96 (epsilon -> .)
    )               reduce using rule 96 (epsilon -> .)
    ,               reduce using rule 96 (epsilon -> .)
    ]               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)
    TO              reduce using rule 96 (epsilon -> .)
    DO              reduce using rule 96 (epsilon -> .)

    term_1                         shift and go to state 132
    epsilon                        shift and go to state 129

state 99

    (52) func_return -> RETURN ( hyper_exp . ) ;

    )               shift and go to state 133


state 100

    (71) super_exp -> exp . super_exp_1
    (72) super_exp_1 -> . < np_push_operator_stack exp
    (73) super_exp_1 -> . > np_push_operator_stack exp
    (74) super_exp_1 -> . EQUAL_TO np_push_operator_stack exp
    (75) super_exp_1 -> . NOT_EQUAL_TO np_push_operator_stack exp
    (76) super_exp_1 -> . epsilon
    (96) epsilon -> .

    <               shift and go to state 138
    >               shift and go to state 139
    EQUAL_TO        shift and go to state 134
    NOT_EQUAL_TO    shift and go to state 135
    &               reduce using rule 96 (epsilon -> .)
    |               reduce using rule 96 (epsilon -> .)
    )               reduce using rule 96 (epsilon -> .)
    ,               reduce using rule 96 (epsilon -> .)
    ]               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)
    TO              reduce using rule 96 (epsilon -> .)
    DO              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 136
    super_exp_1                    shift and go to state 137

state 101

    (90) constant -> VAL_FLOAT . np_push_const_float
    (93) np_push_const_float -> . epsilon
    (96) epsilon -> .

    *               reduce using rule 96 (epsilon -> .)
    /               reduce using rule 96 (epsilon -> .)
    +               reduce using rule 96 (epsilon -> .)
    -               reduce using rule 96 (epsilon -> .)
    <               reduce using rule 96 (epsilon -> .)
    >               reduce using rule 96 (epsilon -> .)
    EQUAL_TO        reduce using rule 96 (epsilon -> .)
    NOT_EQUAL_TO    reduce using rule 96 (epsilon -> .)
    &               reduce using rule 96 (epsilon -> .)
    |               reduce using rule 96 (epsilon -> .)
    )               reduce using rule 96 (epsilon -> .)
    ,               reduce using rule 96 (epsilon -> .)
    ]               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)
    TO              reduce using rule 96 (epsilon -> .)
    DO              reduce using rule 96 (epsilon -> .)

    np_push_const_float            shift and go to state 140
    epsilon                        shift and go to state 141

state 102

    (91) constant -> VAL_CHAR . np_push_const_char
    (94) np_push_const_char -> . epsilon
    (96) epsilon -> .

    *               reduce using rule 96 (epsilon -> .)
    /               reduce using rule 96 (epsilon -> .)
    +               reduce using rule 96 (epsilon -> .)
    -               reduce using rule 96 (epsilon -> .)
    <               reduce using rule 96 (epsilon -> .)
    >               reduce using rule 96 (epsilon -> .)
    EQUAL_TO        reduce using rule 96 (epsilon -> .)
    NOT_EQUAL_TO    reduce using rule 96 (epsilon -> .)
    &               reduce using rule 96 (epsilon -> .)
    |               reduce using rule 96 (epsilon -> .)
    )               reduce using rule 96 (epsilon -> .)
    ,               reduce using rule 96 (epsilon -> .)
    ]               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)
    TO              reduce using rule 96 (epsilon -> .)
    DO              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 142
    np_push_const_char             shift and go to state 143

state 103

    (87) factor -> variable .

    *               reduce using rule 87 (factor -> variable .)
    /               reduce using rule 87 (factor -> variable .)
    +               reduce using rule 87 (factor -> variable .)
    -               reduce using rule 87 (factor -> variable .)
    <               reduce using rule 87 (factor -> variable .)
    >               reduce using rule 87 (factor -> variable .)
    EQUAL_TO        reduce using rule 87 (factor -> variable .)
    NOT_EQUAL_TO    reduce using rule 87 (factor -> variable .)
    &               reduce using rule 87 (factor -> variable .)
    |               reduce using rule 87 (factor -> variable .)
    TO              reduce using rule 87 (factor -> variable .)
    )               reduce using rule 87 (factor -> variable .)
    ,               reduce using rule 87 (factor -> variable .)
    ]               reduce using rule 87 (factor -> variable .)
    ;               reduce using rule 87 (factor -> variable .)
    DO              reduce using rule 87 (factor -> variable .)


state 104

    (77) exp -> term . exp_1
    (78) exp_1 -> . + np_push_operator_stack term
    (79) exp_1 -> . - np_push_operator_stack term
    (80) exp_1 -> . epsilon
    (96) epsilon -> .

    +               shift and go to state 145
    -               shift and go to state 146
    <               reduce using rule 96 (epsilon -> .)
    >               reduce using rule 96 (epsilon -> .)
    EQUAL_TO        reduce using rule 96 (epsilon -> .)
    NOT_EQUAL_TO    reduce using rule 96 (epsilon -> .)
    &               reduce using rule 96 (epsilon -> .)
    |               reduce using rule 96 (epsilon -> .)
    )               reduce using rule 96 (epsilon -> .)
    ,               reduce using rule 96 (epsilon -> .)
    ]               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)
    TO              reduce using rule 96 (epsilon -> .)
    DO              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 144
    exp_1                          shift and go to state 147

state 105

    (89) constant -> VAL_INT . np_push_const_int
    (92) np_push_const_int -> . epsilon
    (96) epsilon -> .

    *               reduce using rule 96 (epsilon -> .)
    /               reduce using rule 96 (epsilon -> .)
    +               reduce using rule 96 (epsilon -> .)
    -               reduce using rule 96 (epsilon -> .)
    <               reduce using rule 96 (epsilon -> .)
    >               reduce using rule 96 (epsilon -> .)
    EQUAL_TO        reduce using rule 96 (epsilon -> .)
    NOT_EQUAL_TO    reduce using rule 96 (epsilon -> .)
    &               reduce using rule 96 (epsilon -> .)
    |               reduce using rule 96 (epsilon -> .)
    )               reduce using rule 96 (epsilon -> .)
    ,               reduce using rule 96 (epsilon -> .)
    ]               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)
    TO              reduce using rule 96 (epsilon -> .)
    DO              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 148
    np_push_const_int              shift and go to state 149

state 106

    (54) variable_loop -> variable . variable_loop_1
    (55) variable_loop_1 -> . , variable variable_loop_1
    (56) variable_loop_1 -> . epsilon
    (96) epsilon -> .

    ,               shift and go to state 152
    )               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 150
    variable_loop_1                shift and go to state 151

state 107

    (53) read -> READ ( variable_loop . ) ;

    )               shift and go to state 153


state 108

    (65) condicional -> WHILE ( hyper_exp . ) DO { loop_estatuto }

    )               shift and go to state 154


state 109

    (5) np_fin_total -> epsilon .

    $end            reduce using rule 5 (np_fin_total -> epsilon .)


state 110

    (4) main -> MAIN ( ) { loop_estatuto } np_fin_total .

    $end            reduce using rule 4 (main -> MAIN ( ) { loop_estatuto } np_fin_total .)


state 111

    (48) func_llamada -> ID ( hyper_exp_loop . )

    )               shift and go to state 155


state 112

    (47) func_llamada -> ID ( ) .

    ;               reduce using rule 47 (func_llamada -> ID ( ) .)


state 113

    (49) hyper_exp_loop -> hyper_exp . hyper_exp_loop_1
    (50) hyper_exp_loop_1 -> . , hyper_exp hyper_exp_loop_1
    (51) hyper_exp_loop_1 -> . epsilon
    (96) epsilon -> .

    ,               shift and go to state 157
    )               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 156
    hyper_exp_loop_1               shift and go to state 158

state 114

    (9) variable -> ID [ hyper_exp . ]

    ]               shift and go to state 159


state 115

    (66) no_condicional -> FOR variable = . hyper_exp TO hyper_exp DO { loop_estatuto }
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 160
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 116

    (57) write -> WRITE ( hyper_exp_loop . ) ;

    )               shift and go to state 161


state 117

    (46) asignacion -> variable = hyper_exp . ;

    ;               shift and go to state 162


state 118

    (58) decision -> IF ( hyper_exp . ) THEN { loop_estatuto } decision_1

    )               shift and go to state 163


state 119

    (15) loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name . np_add_var_to_varstable loop_var_decl_mismo_tipo
    (19) np_add_var_to_varstable -> . epsilon
    (96) epsilon -> .

    ,               reduce using rule 96 (epsilon -> .)
    ;               reduce using rule 96 (epsilon -> .)

    np_add_var_to_varstable        shift and go to state 164
    epsilon                        shift and go to state 49

state 120

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro . ) ; var_opcional { loop_estatuto } np_kill_func

    )               shift and go to state 165


state 121

    (32) parametro -> tipo . ID loop_parametro

    ID              shift and go to state 166


state 122

    (30) func_parametro -> parametro .

    )               reduce using rule 30 (func_parametro -> parametro .)


state 123

    (31) func_parametro -> epsilon .

    )               reduce using rule 31 (func_parametro -> epsilon .)


state 124

    (68) hyper_exp_1 -> & . np_push_operator_stack super_exp
    (85) np_push_operator_stack -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)
    VAL_INT         reduce using rule 96 (epsilon -> .)
    VAL_FLOAT       reduce using rule 96 (epsilon -> .)
    VAL_CHAR        reduce using rule 96 (epsilon -> .)
    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 167
    np_push_operator_stack         shift and go to state 168

state 125

    (70) hyper_exp_1 -> epsilon .

    )               reduce using rule 70 (hyper_exp_1 -> epsilon .)
    ,               reduce using rule 70 (hyper_exp_1 -> epsilon .)
    ]               reduce using rule 70 (hyper_exp_1 -> epsilon .)
    ;               reduce using rule 70 (hyper_exp_1 -> epsilon .)
    TO              reduce using rule 70 (hyper_exp_1 -> epsilon .)
    DO              reduce using rule 70 (hyper_exp_1 -> epsilon .)


state 126

    (67) hyper_exp -> super_exp hyper_exp_1 .

    ,               reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)
    )               reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)
    DO              reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)
    TO              reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)
    ;               reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)
    ]               reduce using rule 67 (hyper_exp -> super_exp hyper_exp_1 .)


state 127

    (69) hyper_exp_1 -> | . np_push_operator_stack super_exp
    (85) np_push_operator_stack -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)
    VAL_INT         reduce using rule 96 (epsilon -> .)
    VAL_FLOAT       reduce using rule 96 (epsilon -> .)
    VAL_CHAR        reduce using rule 96 (epsilon -> .)
    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 167
    np_push_operator_stack         shift and go to state 169

state 128

    (88) factor -> ( hyper_exp . )

    )               shift and go to state 170


state 129

    (84) term_1 -> epsilon .

    +               reduce using rule 84 (term_1 -> epsilon .)
    -               reduce using rule 84 (term_1 -> epsilon .)
    <               reduce using rule 84 (term_1 -> epsilon .)
    >               reduce using rule 84 (term_1 -> epsilon .)
    EQUAL_TO        reduce using rule 84 (term_1 -> epsilon .)
    NOT_EQUAL_TO    reduce using rule 84 (term_1 -> epsilon .)
    &               reduce using rule 84 (term_1 -> epsilon .)
    |               reduce using rule 84 (term_1 -> epsilon .)
    )               reduce using rule 84 (term_1 -> epsilon .)
    ,               reduce using rule 84 (term_1 -> epsilon .)
    ]               reduce using rule 84 (term_1 -> epsilon .)
    ;               reduce using rule 84 (term_1 -> epsilon .)
    TO              reduce using rule 84 (term_1 -> epsilon .)
    DO              reduce using rule 84 (term_1 -> epsilon .)


state 130

    (82) term_1 -> * . np_push_operator_stack factor
    (85) np_push_operator_stack -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)
    VAL_INT         reduce using rule 96 (epsilon -> .)
    VAL_FLOAT       reduce using rule 96 (epsilon -> .)
    VAL_CHAR        reduce using rule 96 (epsilon -> .)
    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 167
    np_push_operator_stack         shift and go to state 171

state 131

    (83) term_1 -> / . np_push_operator_stack factor
    (85) np_push_operator_stack -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)
    VAL_INT         reduce using rule 96 (epsilon -> .)
    VAL_FLOAT       reduce using rule 96 (epsilon -> .)
    VAL_CHAR        reduce using rule 96 (epsilon -> .)
    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 167
    np_push_operator_stack         shift and go to state 172

state 132

    (81) term -> factor term_1 .

    +               reduce using rule 81 (term -> factor term_1 .)
    -               reduce using rule 81 (term -> factor term_1 .)
    <               reduce using rule 81 (term -> factor term_1 .)
    >               reduce using rule 81 (term -> factor term_1 .)
    EQUAL_TO        reduce using rule 81 (term -> factor term_1 .)
    NOT_EQUAL_TO    reduce using rule 81 (term -> factor term_1 .)
    &               reduce using rule 81 (term -> factor term_1 .)
    |               reduce using rule 81 (term -> factor term_1 .)
    ;               reduce using rule 81 (term -> factor term_1 .)
    )               reduce using rule 81 (term -> factor term_1 .)
    ,               reduce using rule 81 (term -> factor term_1 .)
    ]               reduce using rule 81 (term -> factor term_1 .)
    TO              reduce using rule 81 (term -> factor term_1 .)
    DO              reduce using rule 81 (term -> factor term_1 .)


state 133

    (52) func_return -> RETURN ( hyper_exp ) . ;

    ;               shift and go to state 173


state 134

    (74) super_exp_1 -> EQUAL_TO . np_push_operator_stack exp
    (85) np_push_operator_stack -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)
    VAL_INT         reduce using rule 96 (epsilon -> .)
    VAL_FLOAT       reduce using rule 96 (epsilon -> .)
    VAL_CHAR        reduce using rule 96 (epsilon -> .)
    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 167
    np_push_operator_stack         shift and go to state 174

state 135

    (75) super_exp_1 -> NOT_EQUAL_TO . np_push_operator_stack exp
    (85) np_push_operator_stack -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)
    VAL_INT         reduce using rule 96 (epsilon -> .)
    VAL_FLOAT       reduce using rule 96 (epsilon -> .)
    VAL_CHAR        reduce using rule 96 (epsilon -> .)
    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 167
    np_push_operator_stack         shift and go to state 175

state 136

    (76) super_exp_1 -> epsilon .

    &               reduce using rule 76 (super_exp_1 -> epsilon .)
    |               reduce using rule 76 (super_exp_1 -> epsilon .)
    )               reduce using rule 76 (super_exp_1 -> epsilon .)
    ,               reduce using rule 76 (super_exp_1 -> epsilon .)
    ]               reduce using rule 76 (super_exp_1 -> epsilon .)
    ;               reduce using rule 76 (super_exp_1 -> epsilon .)
    TO              reduce using rule 76 (super_exp_1 -> epsilon .)
    DO              reduce using rule 76 (super_exp_1 -> epsilon .)


state 137

    (71) super_exp -> exp super_exp_1 .

    &               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    |               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    DO              reduce using rule 71 (super_exp -> exp super_exp_1 .)
    ,               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    )               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    ]               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    ;               reduce using rule 71 (super_exp -> exp super_exp_1 .)
    TO              reduce using rule 71 (super_exp -> exp super_exp_1 .)


state 138

    (72) super_exp_1 -> < . np_push_operator_stack exp
    (85) np_push_operator_stack -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)
    VAL_INT         reduce using rule 96 (epsilon -> .)
    VAL_FLOAT       reduce using rule 96 (epsilon -> .)
    VAL_CHAR        reduce using rule 96 (epsilon -> .)
    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 167
    np_push_operator_stack         shift and go to state 176

state 139

    (73) super_exp_1 -> > . np_push_operator_stack exp
    (85) np_push_operator_stack -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)
    VAL_INT         reduce using rule 96 (epsilon -> .)
    VAL_FLOAT       reduce using rule 96 (epsilon -> .)
    VAL_CHAR        reduce using rule 96 (epsilon -> .)
    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 167
    np_push_operator_stack         shift and go to state 177

state 140

    (90) constant -> VAL_FLOAT np_push_const_float .

    *               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    /               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    +               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    -               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    <               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    >               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    EQUAL_TO        reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    NOT_EQUAL_TO    reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    &               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    |               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    ]               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    )               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    ,               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    ;               reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    TO              reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)
    DO              reduce using rule 90 (constant -> VAL_FLOAT np_push_const_float .)


state 141

    (93) np_push_const_float -> epsilon .

    *               reduce using rule 93 (np_push_const_float -> epsilon .)
    /               reduce using rule 93 (np_push_const_float -> epsilon .)
    +               reduce using rule 93 (np_push_const_float -> epsilon .)
    -               reduce using rule 93 (np_push_const_float -> epsilon .)
    <               reduce using rule 93 (np_push_const_float -> epsilon .)
    >               reduce using rule 93 (np_push_const_float -> epsilon .)
    EQUAL_TO        reduce using rule 93 (np_push_const_float -> epsilon .)
    NOT_EQUAL_TO    reduce using rule 93 (np_push_const_float -> epsilon .)
    &               reduce using rule 93 (np_push_const_float -> epsilon .)
    |               reduce using rule 93 (np_push_const_float -> epsilon .)
    )               reduce using rule 93 (np_push_const_float -> epsilon .)
    ,               reduce using rule 93 (np_push_const_float -> epsilon .)
    ]               reduce using rule 93 (np_push_const_float -> epsilon .)
    ;               reduce using rule 93 (np_push_const_float -> epsilon .)
    TO              reduce using rule 93 (np_push_const_float -> epsilon .)
    DO              reduce using rule 93 (np_push_const_float -> epsilon .)


state 142

    (94) np_push_const_char -> epsilon .

    *               reduce using rule 94 (np_push_const_char -> epsilon .)
    /               reduce using rule 94 (np_push_const_char -> epsilon .)
    +               reduce using rule 94 (np_push_const_char -> epsilon .)
    -               reduce using rule 94 (np_push_const_char -> epsilon .)
    <               reduce using rule 94 (np_push_const_char -> epsilon .)
    >               reduce using rule 94 (np_push_const_char -> epsilon .)
    EQUAL_TO        reduce using rule 94 (np_push_const_char -> epsilon .)
    NOT_EQUAL_TO    reduce using rule 94 (np_push_const_char -> epsilon .)
    &               reduce using rule 94 (np_push_const_char -> epsilon .)
    |               reduce using rule 94 (np_push_const_char -> epsilon .)
    )               reduce using rule 94 (np_push_const_char -> epsilon .)
    ,               reduce using rule 94 (np_push_const_char -> epsilon .)
    ]               reduce using rule 94 (np_push_const_char -> epsilon .)
    ;               reduce using rule 94 (np_push_const_char -> epsilon .)
    TO              reduce using rule 94 (np_push_const_char -> epsilon .)
    DO              reduce using rule 94 (np_push_const_char -> epsilon .)


state 143

    (91) constant -> VAL_CHAR np_push_const_char .

    *               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    /               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    +               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    -               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    <               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    >               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    EQUAL_TO        reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    NOT_EQUAL_TO    reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    &               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    |               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    ]               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    )               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    ,               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    ;               reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    TO              reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)
    DO              reduce using rule 91 (constant -> VAL_CHAR np_push_const_char .)


state 144

    (80) exp_1 -> epsilon .

    <               reduce using rule 80 (exp_1 -> epsilon .)
    >               reduce using rule 80 (exp_1 -> epsilon .)
    EQUAL_TO        reduce using rule 80 (exp_1 -> epsilon .)
    NOT_EQUAL_TO    reduce using rule 80 (exp_1 -> epsilon .)
    &               reduce using rule 80 (exp_1 -> epsilon .)
    |               reduce using rule 80 (exp_1 -> epsilon .)
    )               reduce using rule 80 (exp_1 -> epsilon .)
    ,               reduce using rule 80 (exp_1 -> epsilon .)
    ]               reduce using rule 80 (exp_1 -> epsilon .)
    ;               reduce using rule 80 (exp_1 -> epsilon .)
    TO              reduce using rule 80 (exp_1 -> epsilon .)
    DO              reduce using rule 80 (exp_1 -> epsilon .)


state 145

    (78) exp_1 -> + . np_push_operator_stack term
    (85) np_push_operator_stack -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)
    VAL_INT         reduce using rule 96 (epsilon -> .)
    VAL_FLOAT       reduce using rule 96 (epsilon -> .)
    VAL_CHAR        reduce using rule 96 (epsilon -> .)
    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 167
    np_push_operator_stack         shift and go to state 178

state 146

    (79) exp_1 -> - . np_push_operator_stack term
    (85) np_push_operator_stack -> . epsilon
    (96) epsilon -> .

    (               reduce using rule 96 (epsilon -> .)
    VAL_INT         reduce using rule 96 (epsilon -> .)
    VAL_FLOAT       reduce using rule 96 (epsilon -> .)
    VAL_CHAR        reduce using rule 96 (epsilon -> .)
    ID              reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 167
    np_push_operator_stack         shift and go to state 179

state 147

    (77) exp -> term exp_1 .

    <               reduce using rule 77 (exp -> term exp_1 .)
    >               reduce using rule 77 (exp -> term exp_1 .)
    EQUAL_TO        reduce using rule 77 (exp -> term exp_1 .)
    NOT_EQUAL_TO    reduce using rule 77 (exp -> term exp_1 .)
    )               reduce using rule 77 (exp -> term exp_1 .)
    ,               reduce using rule 77 (exp -> term exp_1 .)
    ]               reduce using rule 77 (exp -> term exp_1 .)
    ;               reduce using rule 77 (exp -> term exp_1 .)
    TO              reduce using rule 77 (exp -> term exp_1 .)
    DO              reduce using rule 77 (exp -> term exp_1 .)
    &               reduce using rule 77 (exp -> term exp_1 .)
    |               reduce using rule 77 (exp -> term exp_1 .)


state 148

    (92) np_push_const_int -> epsilon .

    *               reduce using rule 92 (np_push_const_int -> epsilon .)
    /               reduce using rule 92 (np_push_const_int -> epsilon .)
    +               reduce using rule 92 (np_push_const_int -> epsilon .)
    -               reduce using rule 92 (np_push_const_int -> epsilon .)
    <               reduce using rule 92 (np_push_const_int -> epsilon .)
    >               reduce using rule 92 (np_push_const_int -> epsilon .)
    EQUAL_TO        reduce using rule 92 (np_push_const_int -> epsilon .)
    NOT_EQUAL_TO    reduce using rule 92 (np_push_const_int -> epsilon .)
    &               reduce using rule 92 (np_push_const_int -> epsilon .)
    |               reduce using rule 92 (np_push_const_int -> epsilon .)
    )               reduce using rule 92 (np_push_const_int -> epsilon .)
    ,               reduce using rule 92 (np_push_const_int -> epsilon .)
    ]               reduce using rule 92 (np_push_const_int -> epsilon .)
    ;               reduce using rule 92 (np_push_const_int -> epsilon .)
    TO              reduce using rule 92 (np_push_const_int -> epsilon .)
    DO              reduce using rule 92 (np_push_const_int -> epsilon .)


state 149

    (89) constant -> VAL_INT np_push_const_int .

    *               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    /               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    +               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    -               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    <               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    >               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    EQUAL_TO        reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    NOT_EQUAL_TO    reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    &               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    |               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    ]               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    )               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    ,               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    ;               reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    TO              reduce using rule 89 (constant -> VAL_INT np_push_const_int .)
    DO              reduce using rule 89 (constant -> VAL_INT np_push_const_int .)


state 150

    (56) variable_loop_1 -> epsilon .

    )               reduce using rule 56 (variable_loop_1 -> epsilon .)


state 151

    (54) variable_loop -> variable variable_loop_1 .

    )               reduce using rule 54 (variable_loop -> variable variable_loop_1 .)


state 152

    (55) variable_loop_1 -> , . variable variable_loop_1
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    ID              shift and go to state 87

    variable                       shift and go to state 180

state 153

    (53) read -> READ ( variable_loop ) . ;

    ;               shift and go to state 181


state 154

    (65) condicional -> WHILE ( hyper_exp ) . DO { loop_estatuto }

    DO              shift and go to state 182


state 155

    (48) func_llamada -> ID ( hyper_exp_loop ) .

    ;               reduce using rule 48 (func_llamada -> ID ( hyper_exp_loop ) .)


state 156

    (51) hyper_exp_loop_1 -> epsilon .

    )               reduce using rule 51 (hyper_exp_loop_1 -> epsilon .)


state 157

    (50) hyper_exp_loop_1 -> , . hyper_exp hyper_exp_loop_1
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 183
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 158

    (49) hyper_exp_loop -> hyper_exp hyper_exp_loop_1 .

    )               reduce using rule 49 (hyper_exp_loop -> hyper_exp hyper_exp_loop_1 .)


state 159

    (9) variable -> ID [ hyper_exp ] .

    *               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    /               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    +               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    -               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    <               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    >               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    EQUAL_TO        reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    NOT_EQUAL_TO    reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    &               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    |               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    )               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    ,               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    ]               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    ;               reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    TO              reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    DO              reduce using rule 9 (variable -> ID [ hyper_exp ] .)
    =               reduce using rule 9 (variable -> ID [ hyper_exp ] .)


state 160

    (66) no_condicional -> FOR variable = hyper_exp . TO hyper_exp DO { loop_estatuto }

    TO              shift and go to state 184


state 161

    (57) write -> WRITE ( hyper_exp_loop ) . ;

    ;               shift and go to state 185


state 162

    (46) asignacion -> variable = hyper_exp ; .

    ID              reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    READ            reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    WRITE           reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    IF              reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    RETURN          reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    WHILE           reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    FOR             reduce using rule 46 (asignacion -> variable = hyper_exp ; .)
    }               reduce using rule 46 (asignacion -> variable = hyper_exp ; .)


state 163

    (58) decision -> IF ( hyper_exp ) . THEN { loop_estatuto } decision_1

    THEN            shift and go to state 186


state 164

    (15) loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name np_add_var_to_varstable . loop_var_decl_mismo_tipo
    (15) loop_var_decl_mismo_tipo -> . , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo
    (16) loop_var_decl_mismo_tipo -> . epsilon
    (96) epsilon -> .

    ,               shift and go to state 73
    ;               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 72
    loop_var_decl_mismo_tipo       shift and go to state 187

state 165

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) . ; var_opcional { loop_estatuto } np_kill_func

    ;               shift and go to state 188


state 166

    (32) parametro -> tipo ID . loop_parametro
    (33) loop_parametro -> . , tipo ID loop_parametro
    (34) loop_parametro -> . epsilon
    (96) epsilon -> .

    ,               shift and go to state 191
    )               reduce using rule 96 (epsilon -> .)

    loop_parametro                 shift and go to state 189
    epsilon                        shift and go to state 190

state 167

    (85) np_push_operator_stack -> epsilon .

    (               reduce using rule 85 (np_push_operator_stack -> epsilon .)
    VAL_INT         reduce using rule 85 (np_push_operator_stack -> epsilon .)
    VAL_FLOAT       reduce using rule 85 (np_push_operator_stack -> epsilon .)
    VAL_CHAR        reduce using rule 85 (np_push_operator_stack -> epsilon .)
    ID              reduce using rule 85 (np_push_operator_stack -> epsilon .)


state 168

    (68) hyper_exp_1 -> & np_push_operator_stack . super_exp
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 192
    term                           shift and go to state 104
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 169

    (69) hyper_exp_1 -> | np_push_operator_stack . super_exp
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 193
    term                           shift and go to state 104
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 170

    (88) factor -> ( hyper_exp ) .

    *               reduce using rule 88 (factor -> ( hyper_exp ) .)
    /               reduce using rule 88 (factor -> ( hyper_exp ) .)
    +               reduce using rule 88 (factor -> ( hyper_exp ) .)
    -               reduce using rule 88 (factor -> ( hyper_exp ) .)
    <               reduce using rule 88 (factor -> ( hyper_exp ) .)
    >               reduce using rule 88 (factor -> ( hyper_exp ) .)
    EQUAL_TO        reduce using rule 88 (factor -> ( hyper_exp ) .)
    NOT_EQUAL_TO    reduce using rule 88 (factor -> ( hyper_exp ) .)
    &               reduce using rule 88 (factor -> ( hyper_exp ) .)
    |               reduce using rule 88 (factor -> ( hyper_exp ) .)
    TO              reduce using rule 88 (factor -> ( hyper_exp ) .)
    )               reduce using rule 88 (factor -> ( hyper_exp ) .)
    ,               reduce using rule 88 (factor -> ( hyper_exp ) .)
    ]               reduce using rule 88 (factor -> ( hyper_exp ) .)
    ;               reduce using rule 88 (factor -> ( hyper_exp ) .)
    DO              reduce using rule 88 (factor -> ( hyper_exp ) .)


state 171

    (82) term_1 -> * np_push_operator_stack . factor
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    constant                       shift and go to state 95
    factor                         shift and go to state 194
    variable                       shift and go to state 103

state 172

    (83) term_1 -> / np_push_operator_stack . factor
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    constant                       shift and go to state 95
    factor                         shift and go to state 195
    variable                       shift and go to state 103

state 173

    (52) func_return -> RETURN ( hyper_exp ) ; .

    ID              reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    READ            reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    WRITE           reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    IF              reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    RETURN          reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    WHILE           reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    FOR             reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)
    }               reduce using rule 52 (func_return -> RETURN ( hyper_exp ) ; .)


state 174

    (74) super_exp_1 -> EQUAL_TO np_push_operator_stack . exp
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    term                           shift and go to state 104
    constant                       shift and go to state 95
    exp                            shift and go to state 196
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 175

    (75) super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack . exp
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    term                           shift and go to state 104
    constant                       shift and go to state 95
    exp                            shift and go to state 197
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 176

    (72) super_exp_1 -> < np_push_operator_stack . exp
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    term                           shift and go to state 104
    constant                       shift and go to state 95
    exp                            shift and go to state 198
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 177

    (73) super_exp_1 -> > np_push_operator_stack . exp
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    term                           shift and go to state 104
    constant                       shift and go to state 95
    exp                            shift and go to state 199
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 178

    (78) exp_1 -> + np_push_operator_stack . term
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    term                           shift and go to state 200
    constant                       shift and go to state 95
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 179

    (79) exp_1 -> - np_push_operator_stack . term
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    term                           shift and go to state 201
    constant                       shift and go to state 95
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 180

    (55) variable_loop_1 -> , variable . variable_loop_1
    (55) variable_loop_1 -> . , variable variable_loop_1
    (56) variable_loop_1 -> . epsilon
    (96) epsilon -> .

    ,               shift and go to state 152
    )               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 150
    variable_loop_1                shift and go to state 202

state 181

    (53) read -> READ ( variable_loop ) ; .

    ID              reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    READ            reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    WRITE           reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    IF              reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    RETURN          reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    WHILE           reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    FOR             reduce using rule 53 (read -> READ ( variable_loop ) ; .)
    }               reduce using rule 53 (read -> READ ( variable_loop ) ; .)


state 182

    (65) condicional -> WHILE ( hyper_exp ) DO . { loop_estatuto }

    {               shift and go to state 203


state 183

    (50) hyper_exp_loop_1 -> , hyper_exp . hyper_exp_loop_1
    (50) hyper_exp_loop_1 -> . , hyper_exp hyper_exp_loop_1
    (51) hyper_exp_loop_1 -> . epsilon
    (96) epsilon -> .

    ,               shift and go to state 157
    )               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 156
    hyper_exp_loop_1               shift and go to state 204

state 184

    (66) no_condicional -> FOR variable = hyper_exp TO . hyper_exp DO { loop_estatuto }
    (67) hyper_exp -> . super_exp hyper_exp_1
    (71) super_exp -> . exp super_exp_1
    (77) exp -> . term exp_1
    (81) term -> . factor term_1
    (86) factor -> . constant
    (87) factor -> . variable
    (88) factor -> . ( hyper_exp )
    (89) constant -> . VAL_INT np_push_const_int
    (90) constant -> . VAL_FLOAT np_push_const_float
    (91) constant -> . VAL_CHAR np_push_const_char
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]

    (               shift and go to state 97
    VAL_INT         shift and go to state 105
    VAL_FLOAT       shift and go to state 101
    VAL_CHAR        shift and go to state 102
    ID              shift and go to state 87

    super_exp                      shift and go to state 96
    term                           shift and go to state 104
    hyper_exp                      shift and go to state 205
    constant                       shift and go to state 95
    exp                            shift and go to state 100
    factor                         shift and go to state 98
    variable                       shift and go to state 103

state 185

    (57) write -> WRITE ( hyper_exp_loop ) ; .

    ID              reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    READ            reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    WRITE           reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    IF              reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    RETURN          reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    WHILE           reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    FOR             reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)
    }               reduce using rule 57 (write -> WRITE ( hyper_exp_loop ) ; .)


state 186

    (58) decision -> IF ( hyper_exp ) THEN . { loop_estatuto } decision_1

    {               shift and go to state 206


state 187

    (15) loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo .

    ;               reduce using rule 15 (loop_var_decl_mismo_tipo -> , ID np_set_curr_var_name np_add_var_to_varstable loop_var_decl_mismo_tipo .)


state 188

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; . var_opcional { loop_estatuto } np_kill_func
    (6) var_opcional -> . var_declaracion
    (7) var_opcional -> . epsilon
    (10) var_declaracion -> . VARS np_var_prep var_declaracion_mismo_tipo loop_var_declaracion
    (96) epsilon -> .

    VARS            shift and go to state 9
    {               reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 11
    var_declaracion                shift and go to state 10
    var_opcional                   shift and go to state 207

state 189

    (32) parametro -> tipo ID loop_parametro .

    )               reduce using rule 32 (parametro -> tipo ID loop_parametro .)


state 190

    (34) loop_parametro -> epsilon .

    )               reduce using rule 34 (loop_parametro -> epsilon .)


state 191

    (33) loop_parametro -> , . tipo ID loop_parametro
    (35) tipo -> . INT
    (36) tipo -> . FLOAT
    (37) tipo -> . CHAR
    (38) tipo -> . BOOL

    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22
    BOOL            shift and go to state 24

    tipo                           shift and go to state 208

state 192

    (68) hyper_exp_1 -> & np_push_operator_stack super_exp .

    )               reduce using rule 68 (hyper_exp_1 -> & np_push_operator_stack super_exp .)
    ,               reduce using rule 68 (hyper_exp_1 -> & np_push_operator_stack super_exp .)
    ]               reduce using rule 68 (hyper_exp_1 -> & np_push_operator_stack super_exp .)
    ;               reduce using rule 68 (hyper_exp_1 -> & np_push_operator_stack super_exp .)
    TO              reduce using rule 68 (hyper_exp_1 -> & np_push_operator_stack super_exp .)
    DO              reduce using rule 68 (hyper_exp_1 -> & np_push_operator_stack super_exp .)


state 193

    (69) hyper_exp_1 -> | np_push_operator_stack super_exp .

    )               reduce using rule 69 (hyper_exp_1 -> | np_push_operator_stack super_exp .)
    ,               reduce using rule 69 (hyper_exp_1 -> | np_push_operator_stack super_exp .)
    ]               reduce using rule 69 (hyper_exp_1 -> | np_push_operator_stack super_exp .)
    ;               reduce using rule 69 (hyper_exp_1 -> | np_push_operator_stack super_exp .)
    TO              reduce using rule 69 (hyper_exp_1 -> | np_push_operator_stack super_exp .)
    DO              reduce using rule 69 (hyper_exp_1 -> | np_push_operator_stack super_exp .)


state 194

    (82) term_1 -> * np_push_operator_stack factor .

    +               reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    -               reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    <               reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    >               reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    EQUAL_TO        reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    NOT_EQUAL_TO    reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    &               reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    |               reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    )               reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    ,               reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    ]               reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    ;               reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    TO              reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)
    DO              reduce using rule 82 (term_1 -> * np_push_operator_stack factor .)


state 195

    (83) term_1 -> / np_push_operator_stack factor .

    +               reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    -               reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    <               reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    >               reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    EQUAL_TO        reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    NOT_EQUAL_TO    reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    &               reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    |               reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    )               reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    ,               reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    ]               reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    ;               reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    TO              reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)
    DO              reduce using rule 83 (term_1 -> / np_push_operator_stack factor .)


state 196

    (74) super_exp_1 -> EQUAL_TO np_push_operator_stack exp .

    &               reduce using rule 74 (super_exp_1 -> EQUAL_TO np_push_operator_stack exp .)
    |               reduce using rule 74 (super_exp_1 -> EQUAL_TO np_push_operator_stack exp .)
    )               reduce using rule 74 (super_exp_1 -> EQUAL_TO np_push_operator_stack exp .)
    ,               reduce using rule 74 (super_exp_1 -> EQUAL_TO np_push_operator_stack exp .)
    ]               reduce using rule 74 (super_exp_1 -> EQUAL_TO np_push_operator_stack exp .)
    ;               reduce using rule 74 (super_exp_1 -> EQUAL_TO np_push_operator_stack exp .)
    TO              reduce using rule 74 (super_exp_1 -> EQUAL_TO np_push_operator_stack exp .)
    DO              reduce using rule 74 (super_exp_1 -> EQUAL_TO np_push_operator_stack exp .)


state 197

    (75) super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp .

    &               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp .)
    |               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp .)
    )               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp .)
    ,               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp .)
    ]               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp .)
    ;               reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp .)
    TO              reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp .)
    DO              reduce using rule 75 (super_exp_1 -> NOT_EQUAL_TO np_push_operator_stack exp .)


state 198

    (72) super_exp_1 -> < np_push_operator_stack exp .

    &               reduce using rule 72 (super_exp_1 -> < np_push_operator_stack exp .)
    |               reduce using rule 72 (super_exp_1 -> < np_push_operator_stack exp .)
    )               reduce using rule 72 (super_exp_1 -> < np_push_operator_stack exp .)
    ,               reduce using rule 72 (super_exp_1 -> < np_push_operator_stack exp .)
    ]               reduce using rule 72 (super_exp_1 -> < np_push_operator_stack exp .)
    ;               reduce using rule 72 (super_exp_1 -> < np_push_operator_stack exp .)
    TO              reduce using rule 72 (super_exp_1 -> < np_push_operator_stack exp .)
    DO              reduce using rule 72 (super_exp_1 -> < np_push_operator_stack exp .)


state 199

    (73) super_exp_1 -> > np_push_operator_stack exp .

    &               reduce using rule 73 (super_exp_1 -> > np_push_operator_stack exp .)
    |               reduce using rule 73 (super_exp_1 -> > np_push_operator_stack exp .)
    )               reduce using rule 73 (super_exp_1 -> > np_push_operator_stack exp .)
    ,               reduce using rule 73 (super_exp_1 -> > np_push_operator_stack exp .)
    ]               reduce using rule 73 (super_exp_1 -> > np_push_operator_stack exp .)
    ;               reduce using rule 73 (super_exp_1 -> > np_push_operator_stack exp .)
    TO              reduce using rule 73 (super_exp_1 -> > np_push_operator_stack exp .)
    DO              reduce using rule 73 (super_exp_1 -> > np_push_operator_stack exp .)


state 200

    (78) exp_1 -> + np_push_operator_stack term .

    <               reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    >               reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    EQUAL_TO        reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    NOT_EQUAL_TO    reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    &               reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    |               reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    )               reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    ,               reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    ]               reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    ;               reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    TO              reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)
    DO              reduce using rule 78 (exp_1 -> + np_push_operator_stack term .)


state 201

    (79) exp_1 -> - np_push_operator_stack term .

    <               reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    >               reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    EQUAL_TO        reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    NOT_EQUAL_TO    reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    &               reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    |               reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    )               reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    ,               reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    ]               reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    ;               reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    TO              reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)
    DO              reduce using rule 79 (exp_1 -> - np_push_operator_stack term .)


state 202

    (55) variable_loop_1 -> , variable variable_loop_1 .

    )               reduce using rule 55 (variable_loop_1 -> , variable variable_loop_1 .)


state 203

    (65) condicional -> WHILE ( hyper_exp ) DO { . loop_estatuto }
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (96) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 96 (epsilon -> .)
    ID              shift and go to state 59
    READ            shift and go to state 53
    WRITE           shift and go to state 66
    IF              shift and go to state 68
    RETURN          shift and go to state 52
    WHILE           shift and go to state 54
    FOR             shift and go to state 62

    asignacion                     shift and go to state 69
    read                           shift and go to state 63
    epsilon                        shift and go to state 64
    decision                       shift and go to state 57
    estatuto                       shift and go to state 58
    write                          shift and go to state 60
    func_return                    shift and go to state 70
    variable                       shift and go to state 67
    func_llamada                   shift and go to state 55
    repeticion                     shift and go to state 71
    loop_estatuto                  shift and go to state 209
    condicional                    shift and go to state 65
    no_condicional                 shift and go to state 61

state 204

    (50) hyper_exp_loop_1 -> , hyper_exp hyper_exp_loop_1 .

    )               reduce using rule 50 (hyper_exp_loop_1 -> , hyper_exp hyper_exp_loop_1 .)


state 205

    (66) no_condicional -> FOR variable = hyper_exp TO hyper_exp . DO { loop_estatuto }

    DO              shift and go to state 210


state 206

    (58) decision -> IF ( hyper_exp ) THEN { . loop_estatuto } decision_1
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (96) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 96 (epsilon -> .)
    ID              shift and go to state 59
    READ            shift and go to state 53
    WRITE           shift and go to state 66
    IF              shift and go to state 68
    RETURN          shift and go to state 52
    WHILE           shift and go to state 54
    FOR             shift and go to state 62

    write                          shift and go to state 60
    asignacion                     shift and go to state 69
    read                           shift and go to state 63
    epsilon                        shift and go to state 64
    decision                       shift and go to state 57
    estatuto                       shift and go to state 58
    func_return                    shift and go to state 70
    variable                       shift and go to state 67
    func_llamada                   shift and go to state 55
    repeticion                     shift and go to state 71
    loop_estatuto                  shift and go to state 211
    condicional                    shift and go to state 65
    no_condicional                 shift and go to state 61

state 207

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional . { loop_estatuto } np_kill_func

    {               shift and go to state 212


state 208

    (33) loop_parametro -> , tipo . ID loop_parametro

    ID              shift and go to state 213


state 209

    (65) condicional -> WHILE ( hyper_exp ) DO { loop_estatuto . }

    }               shift and go to state 214


state 210

    (66) no_condicional -> FOR variable = hyper_exp TO hyper_exp DO . { loop_estatuto }

    {               shift and go to state 215


state 211

    (58) decision -> IF ( hyper_exp ) THEN { loop_estatuto . } decision_1

    }               shift and go to state 216


state 212

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { . loop_estatuto } np_kill_func
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (96) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 96 (epsilon -> .)
    ID              shift and go to state 59
    READ            shift and go to state 53
    WRITE           shift and go to state 66
    IF              shift and go to state 68
    RETURN          shift and go to state 52
    WHILE           shift and go to state 54
    FOR             shift and go to state 62

    func_llamada                   shift and go to state 55
    loop_estatuto                  shift and go to state 217
    func_return                    shift and go to state 70
    decision                       shift and go to state 57
    estatuto                       shift and go to state 58
    write                          shift and go to state 60
    read                           shift and go to state 63
    epsilon                        shift and go to state 64
    condicional                    shift and go to state 65
    variable                       shift and go to state 67
    no_condicional                 shift and go to state 61
    asignacion                     shift and go to state 69
    repeticion                     shift and go to state 71

state 213

    (33) loop_parametro -> , tipo ID . loop_parametro
    (33) loop_parametro -> . , tipo ID loop_parametro
    (34) loop_parametro -> . epsilon
    (96) epsilon -> .

    ,               shift and go to state 191
    )               reduce using rule 96 (epsilon -> .)

    loop_parametro                 shift and go to state 218
    epsilon                        shift and go to state 190

state 214

    (65) condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .

    ID              reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    READ            reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    WRITE           reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    IF              reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    RETURN          reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    WHILE           reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    FOR             reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)
    }               reduce using rule 65 (condicional -> WHILE ( hyper_exp ) DO { loop_estatuto } .)


state 215

    (66) no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { . loop_estatuto }
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (96) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 96 (epsilon -> .)
    ID              shift and go to state 59
    READ            shift and go to state 53
    WRITE           shift and go to state 66
    IF              shift and go to state 68
    RETURN          shift and go to state 52
    WHILE           shift and go to state 54
    FOR             shift and go to state 62

    asignacion                     shift and go to state 69
    read                           shift and go to state 63
    epsilon                        shift and go to state 64
    decision                       shift and go to state 57
    estatuto                       shift and go to state 58
    write                          shift and go to state 60
    func_return                    shift and go to state 70
    variable                       shift and go to state 67
    func_llamada                   shift and go to state 55
    repeticion                     shift and go to state 71
    loop_estatuto                  shift and go to state 219
    condicional                    shift and go to state 65
    no_condicional                 shift and go to state 61

state 216

    (58) decision -> IF ( hyper_exp ) THEN { loop_estatuto } . decision_1
    (59) decision_1 -> . ELSE { loop_estatuto }
    (60) decision_1 -> . epsilon
    (96) epsilon -> .

    ELSE            shift and go to state 220
    ID              reduce using rule 96 (epsilon -> .)
    READ            reduce using rule 96 (epsilon -> .)
    WRITE           reduce using rule 96 (epsilon -> .)
    IF              reduce using rule 96 (epsilon -> .)
    RETURN          reduce using rule 96 (epsilon -> .)
    WHILE           reduce using rule 96 (epsilon -> .)
    FOR             reduce using rule 96 (epsilon -> .)
    }               reduce using rule 96 (epsilon -> .)

    decision_1                     shift and go to state 221
    epsilon                        shift and go to state 222

state 217

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto . } np_kill_func

    }               shift and go to state 223


state 218

    (33) loop_parametro -> , tipo ID loop_parametro .

    )               reduce using rule 33 (loop_parametro -> , tipo ID loop_parametro .)


state 219

    (66) no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto . }

    }               shift and go to state 224


state 220

    (59) decision_1 -> ELSE . { loop_estatuto }

    {               shift and go to state 225


state 221

    (58) decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .

    ID              reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    READ            reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    WRITE           reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    IF              reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    RETURN          reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    WHILE           reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    FOR             reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)
    }               reduce using rule 58 (decision -> IF ( hyper_exp ) THEN { loop_estatuto } decision_1 .)


state 222

    (60) decision_1 -> epsilon .

    ID              reduce using rule 60 (decision_1 -> epsilon .)
    READ            reduce using rule 60 (decision_1 -> epsilon .)
    WRITE           reduce using rule 60 (decision_1 -> epsilon .)
    IF              reduce using rule 60 (decision_1 -> epsilon .)
    RETURN          reduce using rule 60 (decision_1 -> epsilon .)
    WHILE           reduce using rule 60 (decision_1 -> epsilon .)
    FOR             reduce using rule 60 (decision_1 -> epsilon .)
    }               reduce using rule 60 (decision_1 -> epsilon .)


state 223

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } . np_kill_func
    (28) np_kill_func -> . epsilon
    (96) epsilon -> .

    FUNCTION        reduce using rule 96 (epsilon -> .)
    MAIN            reduce using rule 96 (epsilon -> .)

    epsilon                        shift and go to state 227
    np_kill_func                   shift and go to state 226

state 224

    (66) no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .

    ID              reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    READ            reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    WRITE           reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    IF              reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    RETURN          reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    WHILE           reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    FOR             reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)
    }               reduce using rule 66 (no_condicional -> FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto } .)


state 225

    (59) decision_1 -> ELSE { . loop_estatuto }
    (61) loop_estatuto -> . estatuto loop_estatuto
    (62) loop_estatuto -> . epsilon
    (39) estatuto -> . asignacion
    (40) estatuto -> . func_llamada ;
    (41) estatuto -> . read
    (42) estatuto -> . write
    (43) estatuto -> . decision
    (44) estatuto -> . repeticion
    (45) estatuto -> . func_return
    (96) epsilon -> .
    (46) asignacion -> . variable = hyper_exp ;
    (47) func_llamada -> . ID ( )
    (48) func_llamada -> . ID ( hyper_exp_loop )
    (53) read -> . READ ( variable_loop ) ;
    (57) write -> . WRITE ( hyper_exp_loop ) ;
    (58) decision -> . IF ( hyper_exp ) THEN { loop_estatuto } decision_1
    (63) repeticion -> . condicional
    (64) repeticion -> . no_condicional
    (52) func_return -> . RETURN ( hyper_exp ) ;
    (8) variable -> . ID np_single_var_search
    (9) variable -> . ID [ hyper_exp ]
    (65) condicional -> . WHILE ( hyper_exp ) DO { loop_estatuto }
    (66) no_condicional -> . FOR variable = hyper_exp TO hyper_exp DO { loop_estatuto }

    }               reduce using rule 96 (epsilon -> .)
    ID              shift and go to state 59
    READ            shift and go to state 53
    WRITE           shift and go to state 66
    IF              shift and go to state 68
    RETURN          shift and go to state 52
    WHILE           shift and go to state 54
    FOR             shift and go to state 62

    asignacion                     shift and go to state 69
    read                           shift and go to state 63
    epsilon                        shift and go to state 64
    decision                       shift and go to state 57
    estatuto                       shift and go to state 58
    write                          shift and go to state 60
    func_return                    shift and go to state 70
    variable                       shift and go to state 67
    func_llamada                   shift and go to state 55
    repeticion                     shift and go to state 71
    loop_estatuto                  shift and go to state 228
    condicional                    shift and go to state 65
    no_condicional                 shift and go to state 61

state 226

    (22) func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func .

    FUNCTION        reduce using rule 22 (func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func .)
    MAIN            reduce using rule 22 (func_definicion -> FUNCTION func_tipo_retorno np_func_tipo_retorno ID np_func_id np_add_to_func_dir ( np_prep_func_params func_parametro ) ; var_opcional { loop_estatuto } np_kill_func .)


state 227

    (28) np_kill_func -> epsilon .

    FUNCTION        reduce using rule 28 (np_kill_func -> epsilon .)
    MAIN            reduce using rule 28 (np_kill_func -> epsilon .)


state 228

    (59) decision_1 -> ELSE { loop_estatuto . }

    }               shift and go to state 229


state 229

    (59) decision_1 -> ELSE { loop_estatuto } .

    ID              reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    READ            reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    WRITE           reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    IF              reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    RETURN          reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    WHILE           reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    FOR             reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)
    }               reduce using rule 59 (decision_1 -> ELSE { loop_estatuto } .)

